// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "CLSIncident.h"

@implementation ClsincidentRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
	return extensionRegistry;
}

+ (void) initialize {
	if (self == [ClsincidentRoot class]) {
		PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
		[self registerAllExtensions:registry];
		extensionRegistry = [registry retain];
	}
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CLSIncident ()
@end

@implementation CLSIncident

- (void) dealloc {
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
	}
	return self;
}
static CLSIncident* defaultCLSIncidentInstance = nil;
+ (void) initialize {
	if (self == [CLSIncident class]) {
		defaultCLSIncidentInstance = [[CLSIncident alloc] init];
	}
}
+ (CLSIncident*) defaultInstance {
	return defaultCLSIncidentInstance;
}
- (CLSIncident*) defaultInstance {
	return defaultCLSIncidentInstance;
}
- (BOOL) isInitialized {
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSIncident*) parseFromData:(NSData*) data {
	return (CLSIncident*)[[[CLSIncident builder] mergeFromData:data] build];
}
+ (CLSIncident*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident*)[[[CLSIncident builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident*) parseFromInputStream:(NSInputStream*) input {
	return (CLSIncident*)[[[CLSIncident builder] mergeFromInputStream:input] build];
}
+ (CLSIncident*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident*)[[[CLSIncident builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSIncident*)[[[CLSIncident builder] mergeFromCodedInputStream:input] build];
}
+ (CLSIncident*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident*)[[[CLSIncident builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Builder*) builder {
	return [[[CLSIncident_Builder alloc] init] autorelease];
}
+ (CLSIncident_Builder*) builderWithPrototype:(CLSIncident*) prototype {
	return [[CLSIncident builder] mergeFrom:prototype];
}
- (CLSIncident_Builder*) builder {
	return [CLSIncident builder];
}
- (CLSIncident_Builder*) toBuilder {
	return [CLSIncident builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSIncident class]]) {
		return NO;
	}
	CLSIncident *otherMessage = other;
	return
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

BOOL CLSIncident_ArchitectureIsValidValue(CLSIncident_Architecture value) {
	switch (value) {
		case CLSIncident_ArchitectureX8632:
		case CLSIncident_ArchitectureX8664:
		case CLSIncident_ArchitectureArmUnknown:
		case CLSIncident_ArchitecturePpc:
		case CLSIncident_ArchitecturePpc64:
		case CLSIncident_ArchitectureArmv6:
		case CLSIncident_ArchitectureArmv7:
		case CLSIncident_ArchitectureUnknown:
		case CLSIncident_ArchitectureArmv7S:
		case CLSIncident_ArchitectureArm64:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_PlatformIsValidValue(CLSIncident_Platform value) {
	switch (value) {
		case CLSIncident_PlatformMacOsX:
		case CLSIncident_PlatformIphoneOs:
		case CLSIncident_PlatformIphoneSimulator:
		case CLSIncident_PlatformAndroid:
		case CLSIncident_PlatformWindows:
		case CLSIncident_PlatformLinux:
		case CLSIncident_PlatformBlackberry:
		case CLSIncident_PlatformOther:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_FrameImportanceIsValidValue(CLSIncident_FrameImportance value) {
	switch (value) {
		case CLSIncident_FrameImportanceSymbolicated:
		case CLSIncident_FrameImportanceInDeveloperCode:
		case CLSIncident_FrameImportanceInCrashedThread:
		case CLSIncident_FrameImportanceLikelyLeadToCrash:
		case CLSIncident_FrameImportanceInException:
		case CLSIncident_FrameImportanceAlgorithm:
		case CLSIncident_FrameImportanceUserDeclared:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_FramePropertiesIsValidValue(CLSIncident_FrameProperties value) {
	switch (value) {
		case CLSIncident_FramePropertiesFrameUnknown:
		case CLSIncident_FramePropertiesFrameTypeCompiled:
		case CLSIncident_FramePropertiesFrameTypeVm:
		case CLSIncident_FramePropertiesFrameTypeInterpreted:
		case CLSIncident_FramePropertiesFrameTypeJit:
		case CLSIncident_FramePropertiesFrameTypeSpeculative:
		case CLSIncident_FramePropertiesFrameTypeInlined:
		case CLSIncident_FramePropertiesFrameContextDeveloper:
		case CLSIncident_FramePropertiesFrameContextVendor:
		case CLSIncident_FramePropertiesFrameContextRuntime:
		case CLSIncident_FramePropertiesFrameContextPlatform:
		case CLSIncident_FramePropertiesFrameContextSystem:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_GeneratorTypeIsValidValue(CLSIncident_GeneratorType value) {
	switch (value) {
		case CLSIncident_GeneratorTypeIosSdk:
		case CLSIncident_GeneratorTypeMacosSdk:
		case CLSIncident_GeneratorTypeAndroidSdk:
		case CLSIncident_GeneratorTypeJavascriptSdk:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_DeviceIdentifierTypeIsValidValue(CLSIncident_DeviceIdentifierType value) {
	switch (value) {
		case CLSIncident_DeviceIdentifierTypeWifiMacAddress:
		case CLSIncident_DeviceIdentifierTypeBluetoothMacAddress:
		case CLSIncident_DeviceIdentifierTypeIosUdid:
		case CLSIncident_DeviceIdentifierTypeIosAdvertisingIdentifier:
		case CLSIncident_DeviceIdentifierTypeIosVendorIdentifier:
		case CLSIncident_DeviceIdentifierTypeAndroidId:
		case CLSIncident_DeviceIdentifierTypeAndroidDeviceId:
		case CLSIncident_DeviceIdentifierTypeAndroidSerial:
		case CLSIncident_DeviceIdentifierTypeMacHardwareUuid:
		case CLSIncident_DeviceIdentifierTypeMacSerial:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_DeviceStateIsValidValue(CLSIncident_DeviceState value) {
	switch (value) {
		case CLSIncident_DeviceStateIsSimulator:
		case CLSIncident_DeviceStateJailbroken:
		case CLSIncident_DeviceStateDebuggerAttached:
		case CLSIncident_DeviceStateBetaOs:
		case CLSIncident_DeviceStateVendorInternal:
		case CLSIncident_DeviceStateCompromisedLibraries:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_DeliveryMechanismIsValidValue(CLSIncident_DeliveryMechanism value) {
	switch (value) {
		case CLSIncident_DeliveryMechanismDeveloper:
		case CLSIncident_DeliveryMechanismUserSideload:
		case CLSIncident_DeliveryMechanismTestDistribution:
		case CLSIncident_DeliveryMechanismAppStore:
			return YES;
		default:
			return NO;
	}
}
BOOL CLSIncident_FrameDecoderIsValidValue(CLSIncident_FrameDecoder value) {
	switch (value) {
		case CLSIncident_FrameDecoderSymbolication:
		case CLSIncident_FrameDecoderDeobfuscation:
		case CLSIncident_FrameDecoderCacheHydration:
			return YES;
		default:
			return NO;
	}
}
@interface CLSSessionCustomAttribute ()
@property (retain) NSString* key;
@property (retain) NSString* value;
@end

@implementation CLSSessionCustomAttribute

- (BOOL) hasKey {
	return !!hasKey_;
}
- (void) setHasKey:(BOOL) value_ {
	hasKey_ = !!value_;
}
@synthesize key;
- (BOOL) hasValue {
	return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
	hasValue_ = !!value_;
}
@synthesize value;
- (void) dealloc {
	self.key = nil;
	self.value = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.key = @"";
		self.value = @"";
	}
	return self;
}
static CLSSessionCustomAttribute* defaultCLSIncident_CustomAttributeInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionCustomAttribute class]) {
		defaultCLSIncident_CustomAttributeInstance = [[CLSSessionCustomAttribute alloc] init];
	}
}
+ (CLSSessionCustomAttribute*) defaultInstance {
	return defaultCLSIncident_CustomAttributeInstance;
}
- (CLSSessionCustomAttribute*) defaultInstance {
	return defaultCLSIncident_CustomAttributeInstance;
}
- (BOOL) isInitialized {
	if (!self.hasKey) {
		return NO;
	}
	if (!self.hasValue) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasKey) {
		[output writeString:1 value:self.key];
	}
	if (self.hasValue) {
		[output writeString:2 value:self.value];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasKey) {
		size_ += computeStringSize(1, self.key);
	}
	if (self.hasValue) {
		size_ += computeStringSize(2, self.value);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionCustomAttribute*) parseFromData:(NSData*) data {
	return (CLSSessionCustomAttribute*)[[[CLSSessionCustomAttribute builder] mergeFromData:data] build];
}
+ (CLSSessionCustomAttribute*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionCustomAttribute*)[[[CLSSessionCustomAttribute builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionCustomAttribute*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionCustomAttribute*)[[[CLSSessionCustomAttribute builder] mergeFromInputStream:input] build];
}
+ (CLSSessionCustomAttribute*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionCustomAttribute*)[[[CLSSessionCustomAttribute builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionCustomAttribute*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionCustomAttribute*)[[[CLSSessionCustomAttribute builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionCustomAttribute*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionCustomAttribute*)[[[CLSSessionCustomAttribute builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_CustomAttribute_Builder*) builder {
	return [[[CLSIncident_CustomAttribute_Builder alloc] init] autorelease];
}
+ (CLSIncident_CustomAttribute_Builder*) builderWithPrototype:(CLSSessionCustomAttribute*) prototype {
	return [[CLSSessionCustomAttribute builder] mergeFrom:prototype];
}
- (CLSIncident_CustomAttribute_Builder*) builder {
	return [CLSSessionCustomAttribute builder];
}
- (CLSIncident_CustomAttribute_Builder*) toBuilder {
	return [CLSSessionCustomAttribute builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasKey) {
		[output appendFormat:@"%@%@: %@\n", indent, @"key", self.key];
	}
	if (self.hasValue) {
		[output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionCustomAttribute class]]) {
		return NO;
	}
	CLSSessionCustomAttribute *otherMessage = other;
	return
	self.hasKey == otherMessage.hasKey &&
	(!self.hasKey || [self.key isEqual:otherMessage.key]) &&
	self.hasValue == otherMessage.hasValue &&
	(!self.hasValue || [self.value isEqual:otherMessage.value]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasKey) {
		hashCode = hashCode * 31 + [self.key hash];
	}
	if (self.hasValue) {
		hashCode = hashCode * 31 + [self.value hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_CustomAttribute_Builder()
@property (retain) CLSSessionCustomAttribute* result;
@end

@implementation CLSIncident_CustomAttribute_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionCustomAttribute alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_CustomAttribute_Builder*) clear {
	self.result = [[[CLSSessionCustomAttribute alloc] init] autorelease];
	return self;
}
- (CLSIncident_CustomAttribute_Builder*) clone {
	return [CLSSessionCustomAttribute builderWithPrototype:result];
}
- (CLSSessionCustomAttribute*) defaultInstance {
	return [CLSSessionCustomAttribute defaultInstance];
}
- (CLSSessionCustomAttribute*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionCustomAttribute*) buildPartial {
	CLSSessionCustomAttribute* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_CustomAttribute_Builder*) mergeFrom:(CLSSessionCustomAttribute*) other {
	if (other == [CLSSessionCustomAttribute defaultInstance]) {
		return self;
	}
	if (other.hasKey) {
		[self setKey:other.key];
	}
	if (other.hasValue) {
		[self setValue:other.value];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_CustomAttribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_CustomAttribute_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setKey:[input readString]];
				break;
			}
			case 18: {
				[self setValue:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasKey {
	return result.hasKey;
}
- (NSString*) key {
	return result.key;
}
- (CLSIncident_CustomAttribute_Builder*) setKey:(NSString*) value {
	result.hasKey = YES;
	result.key = value;
	return self;
}
- (CLSIncident_CustomAttribute_Builder*) clearKey {
	result.hasKey = NO;
	result.key = @"";
	return self;
}
- (BOOL) hasValue {
	return result.hasValue;
}
- (NSString*) value {
	return result.value;
}
- (CLSIncident_CustomAttribute_Builder*) setValue:(NSString*) value {
	result.hasValue = YES;
	result.value = value;
	return self;
}
- (CLSIncident_CustomAttribute_Builder*) clearValue {
	result.hasValue = NO;
	result.value = @"";
	return self;
}
@end

@interface CLSSessionFrame ()
@property uint64_t pc;
@property (retain) NSString* symbol;
@property (retain) NSString* file;
@property uint64_t offset;
@property uint32_t importance;
@property (retain) NSString* expandedSymbol;
@property (retain) NSString* expandedFile;
@property uint64_t expandedOffset;
@property uint32_t properties;
@property uint64_t lineNumber;
@end

@implementation CLSSessionFrame

- (BOOL) hasPc {
	return !!hasPc_;
}
- (void) setHasPc:(BOOL) value_ {
	hasPc_ = !!value_;
}
@synthesize pc;
- (BOOL) hasSymbol {
	return !!hasSymbol_;
}
- (void) setHasSymbol:(BOOL) value_ {
	hasSymbol_ = !!value_;
}
@synthesize symbol;
- (BOOL) hasFile {
	return !!hasFile_;
}
- (void) setHasFile:(BOOL) value_ {
	hasFile_ = !!value_;
}
@synthesize file;
- (BOOL) hasOffset {
	return !!hasOffset_;
}
- (void) setHasOffset:(BOOL) value_ {
	hasOffset_ = !!value_;
}
@synthesize offset;
- (BOOL) hasImportance {
	return !!hasImportance_;
}
- (void) setHasImportance:(BOOL) value_ {
	hasImportance_ = !!value_;
}
@synthesize importance;
- (BOOL) hasExpandedSymbol {
	return !!hasExpandedSymbol_;
}
- (void) setHasExpandedSymbol:(BOOL) value_ {
	hasExpandedSymbol_ = !!value_;
}
@synthesize expandedSymbol;
- (BOOL) hasExpandedFile {
	return !!hasExpandedFile_;
}
- (void) setHasExpandedFile:(BOOL) value_ {
	hasExpandedFile_ = !!value_;
}
@synthesize expandedFile;
- (BOOL) hasExpandedOffset {
	return !!hasExpandedOffset_;
}
- (void) setHasExpandedOffset:(BOOL) value_ {
	hasExpandedOffset_ = !!value_;
}
@synthesize expandedOffset;
- (BOOL) hasProperties {
	return !!hasProperties_;
}
- (void) setHasProperties:(BOOL) value_ {
	hasProperties_ = !!value_;
}
@synthesize properties;
- (BOOL) hasLineNumber {
	return !!hasLineNumber_;
}
- (void) setHasLineNumber:(BOOL) value_ {
	hasLineNumber_ = !!value_;
}
@synthesize lineNumber;
- (void) dealloc {
	self.symbol = nil;
	self.file = nil;
	self.expandedSymbol = nil;
	self.expandedFile = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.pc = 0L;
		self.symbol = @"";
		self.file = @"";
		self.offset = 0L;
		self.importance = 0;
		self.expandedSymbol = @"";
		self.expandedFile = @"";
		self.expandedOffset = 0L;
		self.properties = 0;
		self.lineNumber = 0L;
	}
	return self;
}
static CLSSessionFrame* defaultCLSIncident_FrameInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionFrame class]) {
		defaultCLSIncident_FrameInstance = [[CLSSessionFrame alloc] init];
	}
}
+ (CLSSessionFrame*) defaultInstance {
	return defaultCLSIncident_FrameInstance;
}
- (CLSSessionFrame*) defaultInstance {
	return defaultCLSIncident_FrameInstance;
}
- (BOOL) isInitialized {
	if (!self.hasPc) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasPc) {
		[output writeUInt64:1 value:self.pc];
	}
	if (self.hasSymbol) {
		[output writeString:2 value:self.symbol];
	}
	if (self.hasFile) {
		[output writeString:3 value:self.file];
	}
	if (self.hasOffset) {
		[output writeUInt64:4 value:self.offset];
	}
	if (self.hasImportance) {
		[output writeUInt32:5 value:self.importance];
	}
	if (self.hasExpandedSymbol) {
		[output writeString:6 value:self.expandedSymbol];
	}
	if (self.hasExpandedFile) {
		[output writeString:7 value:self.expandedFile];
	}
	if (self.hasExpandedOffset) {
		[output writeUInt64:8 value:self.expandedOffset];
	}
	if (self.hasProperties) {
		[output writeUInt32:9 value:self.properties];
	}
	if (self.hasLineNumber) {
		[output writeUInt64:10 value:self.lineNumber];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasPc) {
		size_ += computeUInt64Size(1, self.pc);
	}
	if (self.hasSymbol) {
		size_ += computeStringSize(2, self.symbol);
	}
	if (self.hasFile) {
		size_ += computeStringSize(3, self.file);
	}
	if (self.hasOffset) {
		size_ += computeUInt64Size(4, self.offset);
	}
	if (self.hasImportance) {
		size_ += computeUInt32Size(5, self.importance);
	}
	if (self.hasExpandedSymbol) {
		size_ += computeStringSize(6, self.expandedSymbol);
	}
	if (self.hasExpandedFile) {
		size_ += computeStringSize(7, self.expandedFile);
	}
	if (self.hasExpandedOffset) {
		size_ += computeUInt64Size(8, self.expandedOffset);
	}
	if (self.hasProperties) {
		size_ += computeUInt32Size(9, self.properties);
	}
	if (self.hasLineNumber) {
		size_ += computeUInt64Size(10, self.lineNumber);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionFrame*) parseFromData:(NSData*) data {
	return (CLSSessionFrame*)[[[CLSSessionFrame builder] mergeFromData:data] build];
}
+ (CLSSessionFrame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionFrame*)[[[CLSSessionFrame builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionFrame*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionFrame*)[[[CLSSessionFrame builder] mergeFromInputStream:input] build];
}
+ (CLSSessionFrame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionFrame*)[[[CLSSessionFrame builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionFrame*)[[[CLSSessionFrame builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionFrame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionFrame*)[[[CLSSessionFrame builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Frame_Builder*) builder {
	return [[[CLSIncident_Frame_Builder alloc] init] autorelease];
}
+ (CLSIncident_Frame_Builder*) builderWithPrototype:(CLSSessionFrame*) prototype {
	return [[CLSSessionFrame builder] mergeFrom:prototype];
}
- (CLSIncident_Frame_Builder*) builder {
	return [CLSSessionFrame builder];
}
- (CLSIncident_Frame_Builder*) toBuilder {
	return [CLSSessionFrame builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasPc) {
		[output appendFormat:@"%@%@: %@\n", indent, @"pc", [NSNumber numberWithLongLong:self.pc]];
	}
	if (self.hasSymbol) {
		[output appendFormat:@"%@%@: %@\n", indent, @"symbol", self.symbol];
	}
	if (self.hasFile) {
		[output appendFormat:@"%@%@: %@\n", indent, @"file", self.file];
	}
	if (self.hasOffset) {
		[output appendFormat:@"%@%@: %@\n", indent, @"offset", [NSNumber numberWithLongLong:self.offset]];
	}
	if (self.hasImportance) {
		[output appendFormat:@"%@%@: %@\n", indent, @"importance", [NSNumber numberWithInt:self.importance]];
	}
	if (self.hasExpandedSymbol) {
		[output appendFormat:@"%@%@: %@\n", indent, @"expandedSymbol", self.expandedSymbol];
	}
	if (self.hasExpandedFile) {
		[output appendFormat:@"%@%@: %@\n", indent, @"expandedFile", self.expandedFile];
	}
	if (self.hasExpandedOffset) {
		[output appendFormat:@"%@%@: %@\n", indent, @"expandedOffset", [NSNumber numberWithLongLong:self.expandedOffset]];
	}
	if (self.hasProperties) {
		[output appendFormat:@"%@%@: %@\n", indent, @"properties", [NSNumber numberWithInt:self.properties]];
	}
	if (self.hasLineNumber) {
		[output appendFormat:@"%@%@: %@\n", indent, @"lineNumber", [NSNumber numberWithLongLong:self.lineNumber]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionFrame class]]) {
		return NO;
	}
	CLSSessionFrame *otherMessage = other;
	return
	self.hasPc == otherMessage.hasPc &&
	(!self.hasPc || self.pc == otherMessage.pc) &&
	self.hasSymbol == otherMessage.hasSymbol &&
	(!self.hasSymbol || [self.symbol isEqual:otherMessage.symbol]) &&
	self.hasFile == otherMessage.hasFile &&
	(!self.hasFile || [self.file isEqual:otherMessage.file]) &&
	self.hasOffset == otherMessage.hasOffset &&
	(!self.hasOffset || self.offset == otherMessage.offset) &&
	self.hasImportance == otherMessage.hasImportance &&
	(!self.hasImportance || self.importance == otherMessage.importance) &&
	self.hasExpandedSymbol == otherMessage.hasExpandedSymbol &&
	(!self.hasExpandedSymbol || [self.expandedSymbol isEqual:otherMessage.expandedSymbol]) &&
	self.hasExpandedFile == otherMessage.hasExpandedFile &&
	(!self.hasExpandedFile || [self.expandedFile isEqual:otherMessage.expandedFile]) &&
	self.hasExpandedOffset == otherMessage.hasExpandedOffset &&
	(!self.hasExpandedOffset || self.expandedOffset == otherMessage.expandedOffset) &&
	self.hasProperties == otherMessage.hasProperties &&
	(!self.hasProperties || self.properties == otherMessage.properties) &&
	self.hasLineNumber == otherMessage.hasLineNumber &&
	(!self.hasLineNumber || self.lineNumber == otherMessage.lineNumber) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasPc) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.pc] hash];
	}
	if (self.hasSymbol) {
		hashCode = hashCode * 31 + [self.symbol hash];
	}
	if (self.hasFile) {
		hashCode = hashCode * 31 + [self.file hash];
	}
	if (self.hasOffset) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.offset] hash];
	}
	if (self.hasImportance) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.importance] hash];
	}
	if (self.hasExpandedSymbol) {
		hashCode = hashCode * 31 + [self.expandedSymbol hash];
	}
	if (self.hasExpandedFile) {
		hashCode = hashCode * 31 + [self.expandedFile hash];
	}
	if (self.hasExpandedOffset) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.expandedOffset] hash];
	}
	if (self.hasProperties) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.properties] hash];
	}
	if (self.hasLineNumber) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lineNumber] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Frame_Builder()
@property (retain) CLSSessionFrame* result;
@end

@implementation CLSIncident_Frame_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionFrame alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Frame_Builder*) clear {
	self.result = [[[CLSSessionFrame alloc] init] autorelease];
	return self;
}
- (CLSIncident_Frame_Builder*) clone {
	return [CLSSessionFrame builderWithPrototype:result];
}
- (CLSSessionFrame*) defaultInstance {
	return [CLSSessionFrame defaultInstance];
}
- (CLSSessionFrame*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionFrame*) buildPartial {
	CLSSessionFrame* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Frame_Builder*) mergeFrom:(CLSSessionFrame*) other {
	if (other == [CLSSessionFrame defaultInstance]) {
		return self;
	}
	if (other.hasPc) {
		[self setPc:other.pc];
	}
	if (other.hasSymbol) {
		[self setSymbol:other.symbol];
	}
	if (other.hasFile) {
		[self setFile:other.file];
	}
	if (other.hasOffset) {
		[self setOffset:other.offset];
	}
	if (other.hasImportance) {
		[self setImportance:other.importance];
	}
	if (other.hasExpandedSymbol) {
		[self setExpandedSymbol:other.expandedSymbol];
	}
	if (other.hasExpandedFile) {
		[self setExpandedFile:other.expandedFile];
	}
	if (other.hasExpandedOffset) {
		[self setExpandedOffset:other.expandedOffset];
	}
	if (other.hasProperties) {
		[self setProperties:other.properties];
	}
	if (other.hasLineNumber) {
		[self setLineNumber:other.lineNumber];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Frame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Frame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 8: {
				[self setPc:[input readUInt64]];
				break;
			}
			case 18: {
				[self setSymbol:[input readString]];
				break;
			}
			case 26: {
				[self setFile:[input readString]];
				break;
			}
			case 32: {
				[self setOffset:[input readUInt64]];
				break;
			}
			case 40: {
				[self setImportance:[input readUInt32]];
				break;
			}
			case 50: {
				[self setExpandedSymbol:[input readString]];
				break;
			}
			case 58: {
				[self setExpandedFile:[input readString]];
				break;
			}
			case 64: {
				[self setExpandedOffset:[input readUInt64]];
				break;
			}
			case 72: {
				[self setProperties:[input readUInt32]];
				break;
			}
			case 80: {
				[self setLineNumber:[input readUInt64]];
				break;
			}
		}
	}
}
- (BOOL) hasPc {
	return result.hasPc;
}
- (uint64_t) pc {
	return result.pc;
}
- (CLSIncident_Frame_Builder*) setPc:(uint64_t) value {
	result.hasPc = YES;
	result.pc = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearPc {
	result.hasPc = NO;
	result.pc = 0L;
	return self;
}
- (BOOL) hasSymbol {
	return result.hasSymbol;
}
- (NSString*) symbol {
	return result.symbol;
}
- (CLSIncident_Frame_Builder*) setSymbol:(NSString*) value {
	result.hasSymbol = YES;
	result.symbol = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearSymbol {
	result.hasSymbol = NO;
	result.symbol = @"";
	return self;
}
- (BOOL) hasFile {
	return result.hasFile;
}
- (NSString*) file {
	return result.file;
}
- (CLSIncident_Frame_Builder*) setFile:(NSString*) value {
	result.hasFile = YES;
	result.file = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearFile {
	result.hasFile = NO;
	result.file = @"";
	return self;
}
- (BOOL) hasOffset {
	return result.hasOffset;
}
- (uint64_t) offset {
	return result.offset;
}
- (CLSIncident_Frame_Builder*) setOffset:(uint64_t) value {
	result.hasOffset = YES;
	result.offset = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearOffset {
	result.hasOffset = NO;
	result.offset = 0L;
	return self;
}
- (BOOL) hasImportance {
	return result.hasImportance;
}
- (uint32_t) importance {
	return result.importance;
}
- (CLSIncident_Frame_Builder*) setImportance:(uint32_t) value {
	result.hasImportance = YES;
	result.importance = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearImportance {
	result.hasImportance = NO;
	result.importance = 0;
	return self;
}
- (BOOL) hasExpandedSymbol {
	return result.hasExpandedSymbol;
}
- (NSString*) expandedSymbol {
	return result.expandedSymbol;
}
- (CLSIncident_Frame_Builder*) setExpandedSymbol:(NSString*) value {
	result.hasExpandedSymbol = YES;
	result.expandedSymbol = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearExpandedSymbol {
	result.hasExpandedSymbol = NO;
	result.expandedSymbol = @"";
	return self;
}
- (BOOL) hasExpandedFile {
	return result.hasExpandedFile;
}
- (NSString*) expandedFile {
	return result.expandedFile;
}
- (CLSIncident_Frame_Builder*) setExpandedFile:(NSString*) value {
	result.hasExpandedFile = YES;
	result.expandedFile = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearExpandedFile {
	result.hasExpandedFile = NO;
	result.expandedFile = @"";
	return self;
}
- (BOOL) hasExpandedOffset {
	return result.hasExpandedOffset;
}
- (uint64_t) expandedOffset {
	return result.expandedOffset;
}
- (CLSIncident_Frame_Builder*) setExpandedOffset:(uint64_t) value {
	result.hasExpandedOffset = YES;
	result.expandedOffset = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearExpandedOffset {
	result.hasExpandedOffset = NO;
	result.expandedOffset = 0L;
	return self;
}
- (BOOL) hasProperties {
	return result.hasProperties;
}
- (uint32_t) properties {
	return result.properties;
}
- (CLSIncident_Frame_Builder*) setProperties:(uint32_t) value {
	result.hasProperties = YES;
	result.properties = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearProperties {
	result.hasProperties = NO;
	result.properties = 0;
	return self;
}
- (BOOL) hasLineNumber {
	return result.hasLineNumber;
}
- (uint64_t) lineNumber {
	return result.lineNumber;
}
- (CLSIncident_Frame_Builder*) setLineNumber:(uint64_t) value {
	result.hasLineNumber = YES;
	result.lineNumber = value;
	return self;
}
- (CLSIncident_Frame_Builder*) clearLineNumber {
	result.hasLineNumber = NO;
	result.lineNumber = 0L;
	return self;
}
@end

@interface CLSSession ()
@property (retain) NSString* generator;
@property (retain) NSData* identifier;
@property uint64_t startedAt;
@property uint64_t endedAt;
@property BOOL crashed;
@property uint32_t analyzer;
@property CLSIncident_GeneratorType generatorType;
@property CLSIncident_FrameDecoder frameDecoder;
@property (retain) CLSSessionUser* user;
@property (retain) CLSSessionApplication* app;
@property (retain) CLSSessionOperatingSystem* os;
@property (retain) CLSSessionDevice* device;
@property (retain) PBAppendableArray * eventsArray;
@end

@implementation CLSSession

- (BOOL) hasGenerator {
	return !!hasGenerator_;
}
- (void) setHasGenerator:(BOOL) value_ {
	hasGenerator_ = !!value_;
}
@synthesize generator;
- (BOOL) hasIdentifier {
	return !!hasIdentifier_;
}
- (void) setHasIdentifier:(BOOL) value_ {
	hasIdentifier_ = !!value_;
}
@synthesize identifier;
- (BOOL) hasStartedAt {
	return !!hasStartedAt_;
}
- (void) setHasStartedAt:(BOOL) value_ {
	hasStartedAt_ = !!value_;
}
@synthesize startedAt;
- (BOOL) hasEndedAt {
	return !!hasEndedAt_;
}
- (void) setHasEndedAt:(BOOL) value_ {
	hasEndedAt_ = !!value_;
}
@synthesize endedAt;
- (BOOL) hasCrashed {
	return !!hasCrashed_;
}
- (void) setHasCrashed:(BOOL) value_ {
	hasCrashed_ = !!value_;
}
- (BOOL) crashed {
	return !!crashed_;
}
- (void) setCrashed:(BOOL) value_ {
	crashed_ = !!value_;
}
- (BOOL) hasAnalyzer {
	return !!hasAnalyzer_;
}
- (void) setHasAnalyzer:(BOOL) value_ {
	hasAnalyzer_ = !!value_;
}
@synthesize analyzer;
- (BOOL) hasGeneratorType {
	return !!hasGeneratorType_;
}
- (void) setHasGeneratorType:(BOOL) value_ {
	hasGeneratorType_ = !!value_;
}
@synthesize generatorType;
- (BOOL) hasFrameDecoder {
	return !!hasFrameDecoder_;
}
- (void) setHasFrameDecoder:(BOOL) value_ {
	hasFrameDecoder_ = !!value_;
}
@synthesize frameDecoder;
- (BOOL) hasUser {
	return !!hasUser_;
}
- (void) setHasUser:(BOOL) value_ {
	hasUser_ = !!value_;
}
@synthesize user;
- (BOOL) hasApp {
	return !!hasApp_;
}
- (void) setHasApp:(BOOL) value_ {
	hasApp_ = !!value_;
}
@synthesize app;
- (BOOL) hasOs {
	return !!hasOs_;
}
- (void) setHasOs:(BOOL) value_ {
	hasOs_ = !!value_;
}
@synthesize os;
- (BOOL) hasDevice {
	return !!hasDevice_;
}
- (void) setHasDevice:(BOOL) value_ {
	hasDevice_ = !!value_;
}
@synthesize device;
@synthesize eventsArray;
@dynamic events;
- (void) dealloc {
	self.generator = nil;
	self.identifier = nil;
	self.user = nil;
	self.app = nil;
	self.os = nil;
	self.device = nil;
	self.eventsArray = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.generator = @"";
		self.identifier = [NSData data];
		self.startedAt = 0L;
		self.endedAt = 0L;
		self.crashed = NO;
		self.analyzer = 0;
		self.generatorType = CLSIncident_GeneratorTypeIosSdk;
		self.frameDecoder = CLSIncident_FrameDecoderSymbolication;
		self.user = [CLSSessionUser defaultInstance];
		self.app = [CLSSessionApplication defaultInstance];
		self.os = [CLSSessionOperatingSystem defaultInstance];
		self.device = [CLSSessionDevice defaultInstance];
	}
	return self;
}
static CLSSession* defaultCLSIncident_SessionInstance = nil;
+ (void) initialize {
	if (self == [CLSSession class]) {
		defaultCLSIncident_SessionInstance = [[CLSSession alloc] init];
	}
}
+ (CLSSession*) defaultInstance {
	return defaultCLSIncident_SessionInstance;
}
- (CLSSession*) defaultInstance {
	return defaultCLSIncident_SessionInstance;
}
- (PBArray *)events {
	return eventsArray;
}
- (CLSSessionEvent*)eventsAtIndex:(NSUInteger)index {
	return [eventsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	if (!self.hasGenerator) {
		return NO;
	}
	if (!self.hasIdentifier) {
		return NO;
	}
	if (!self.hasStartedAt) {
		return NO;
	}
	if (!self.hasApp) {
		return NO;
	}
	if (self.hasUser) {
		if (!self.user.isInitialized) {
			return NO;
		}
	}
	if (!self.app.isInitialized) {
		return NO;
	}
	if (self.hasOs) {
		if (!self.os.isInitialized) {
			return NO;
		}
	}
	if (self.hasDevice) {
		if (!self.device.isInitialized) {
			return NO;
		}
	}
	for (CLSSessionEvent* element in self.events) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasGenerator) {
		[output writeString:1 value:self.generator];
	}
	if (self.hasIdentifier) {
		[output writeData:2 value:self.identifier];
	}
	if (self.hasStartedAt) {
		[output writeUInt64:3 value:self.startedAt];
	}
	if (self.hasEndedAt) {
		[output writeUInt64:4 value:self.endedAt];
	}
	if (self.hasCrashed) {
		[output writeBool:5 value:self.crashed];
	}
	if (self.hasUser) {
		[output writeMessage:6 value:self.user];
	}
	if (self.hasApp) {
		[output writeMessage:7 value:self.app];
	}
	if (self.hasOs) {
		[output writeMessage:8 value:self.os];
	}
	if (self.hasDevice) {
		[output writeMessage:9 value:self.device];
	}
	for (CLSSessionEvent *element in self.eventsArray) {
		[output writeMessage:10 value:element];
	}
	if (self.hasAnalyzer) {
		[output writeUInt32:11 value:self.analyzer];
	}
	if (self.hasGeneratorType) {
		[output writeEnum:12 value:self.generatorType];
	}
	if (self.hasFrameDecoder) {
		[output writeEnum:13 value:self.frameDecoder];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasGenerator) {
		size_ += computeStringSize(1, self.generator);
	}
	if (self.hasIdentifier) {
		size_ += computeDataSize(2, self.identifier);
	}
	if (self.hasStartedAt) {
		size_ += computeUInt64Size(3, self.startedAt);
	}
	if (self.hasEndedAt) {
		size_ += computeUInt64Size(4, self.endedAt);
	}
	if (self.hasCrashed) {
		size_ += computeBoolSize(5, self.crashed);
	}
	if (self.hasUser) {
		size_ += computeMessageSize(6, self.user);
	}
	if (self.hasApp) {
		size_ += computeMessageSize(7, self.app);
	}
	if (self.hasOs) {
		size_ += computeMessageSize(8, self.os);
	}
	if (self.hasDevice) {
		size_ += computeMessageSize(9, self.device);
	}
	for (CLSSessionEvent *element in self.eventsArray) {
		size_ += computeMessageSize(10, element);
	}
	if (self.hasAnalyzer) {
		size_ += computeUInt32Size(11, self.analyzer);
	}
	if (self.hasGeneratorType) {
		size_ += computeEnumSize(12, self.generatorType);
	}
	if (self.hasFrameDecoder) {
		size_ += computeEnumSize(13, self.frameDecoder);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSession*) parseFromData:(NSData*) data {
	return (CLSSession*)[[[CLSSession builder] mergeFromData:data] build];
}
+ (CLSSession*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSession*)[[[CLSSession builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSession*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSession*)[[[CLSSession builder] mergeFromInputStream:input] build];
}
+ (CLSSession*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSession*)[[[CLSSession builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSession*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSession*)[[[CLSSession builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSession*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSession*)[[[CLSSession builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Builder*) builder {
	return [[[CLSIncident_Session_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Builder*) builderWithPrototype:(CLSSession*) prototype {
	return [[CLSSession builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Builder*) builder {
	return [CLSSession builder];
}
- (CLSIncident_Session_Builder*) toBuilder {
	return [CLSSession builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasGenerator) {
		[output appendFormat:@"%@%@: %@\n", indent, @"generator", self.generator];
	}
	if (self.hasIdentifier) {
		[output appendFormat:@"%@%@: %@\n", indent, @"identifier", self.identifier];
	}
	if (self.hasStartedAt) {
		[output appendFormat:@"%@%@: %@\n", indent, @"startedAt", [NSNumber numberWithLongLong:self.startedAt]];
	}
	if (self.hasEndedAt) {
		[output appendFormat:@"%@%@: %@\n", indent, @"endedAt", [NSNumber numberWithLongLong:self.endedAt]];
	}
	if (self.hasCrashed) {
		[output appendFormat:@"%@%@: %@\n", indent, @"crashed", [NSNumber numberWithBool:self.crashed]];
	}
	if (self.hasUser) {
		[output appendFormat:@"%@%@ {\n", indent, @"user"];
		[self.user writeDescriptionTo:output
						   withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasApp) {
		[output appendFormat:@"%@%@ {\n", indent, @"app"];
		[self.app writeDescriptionTo:output
						  withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasOs) {
		[output appendFormat:@"%@%@ {\n", indent, @"os"];
		[self.os writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasDevice) {
		[output appendFormat:@"%@%@ {\n", indent, @"device"];
		[self.device writeDescriptionTo:output
							 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	for (CLSSessionEvent* element in self.eventsArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"events"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasAnalyzer) {
		[output appendFormat:@"%@%@: %@\n", indent, @"analyzer", [NSNumber numberWithInt:self.analyzer]];
	}
	if (self.hasGeneratorType) {
		[output appendFormat:@"%@%@: %d\n", indent, @"generatorType", self.generatorType];
	}
	if (self.hasFrameDecoder) {
		[output appendFormat:@"%@%@: %d\n", indent, @"frameDecoder", self.frameDecoder];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSession class]]) {
		return NO;
	}
	CLSSession *otherMessage = other;
	return
	self.hasGenerator == otherMessage.hasGenerator &&
	(!self.hasGenerator || [self.generator isEqual:otherMessage.generator]) &&
	self.hasIdentifier == otherMessage.hasIdentifier &&
	(!self.hasIdentifier || [self.identifier isEqual:otherMessage.identifier]) &&
	self.hasStartedAt == otherMessage.hasStartedAt &&
	(!self.hasStartedAt || self.startedAt == otherMessage.startedAt) &&
	self.hasEndedAt == otherMessage.hasEndedAt &&
	(!self.hasEndedAt || self.endedAt == otherMessage.endedAt) &&
	self.hasCrashed == otherMessage.hasCrashed &&
	(!self.hasCrashed || self.crashed == otherMessage.crashed) &&
	self.hasUser == otherMessage.hasUser &&
	(!self.hasUser || [self.user isEqual:otherMessage.user]) &&
	self.hasApp == otherMessage.hasApp &&
	(!self.hasApp || [self.app isEqual:otherMessage.app]) &&
	self.hasOs == otherMessage.hasOs &&
	(!self.hasOs || [self.os isEqual:otherMessage.os]) &&
	self.hasDevice == otherMessage.hasDevice &&
	(!self.hasDevice || [self.device isEqual:otherMessage.device]) &&
	[self.eventsArray isEqualToArray:otherMessage.eventsArray] &&
	self.hasAnalyzer == otherMessage.hasAnalyzer &&
	(!self.hasAnalyzer || self.analyzer == otherMessage.analyzer) &&
	self.hasGeneratorType == otherMessage.hasGeneratorType &&
	(!self.hasGeneratorType || self.generatorType == otherMessage.generatorType) &&
	self.hasFrameDecoder == otherMessage.hasFrameDecoder &&
	(!self.hasFrameDecoder || self.frameDecoder == otherMessage.frameDecoder) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasGenerator) {
		hashCode = hashCode * 31 + [self.generator hash];
	}
	if (self.hasIdentifier) {
		hashCode = hashCode * 31 + [self.identifier hash];
	}
	if (self.hasStartedAt) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startedAt] hash];
	}
	if (self.hasEndedAt) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.endedAt] hash];
	}
	if (self.hasCrashed) {
		hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.crashed] hash];
	}
	if (self.hasUser) {
		hashCode = hashCode * 31 + [self.user hash];
	}
	if (self.hasApp) {
		hashCode = hashCode * 31 + [self.app hash];
	}
	if (self.hasOs) {
		hashCode = hashCode * 31 + [self.os hash];
	}
	if (self.hasDevice) {
		hashCode = hashCode * 31 + [self.device hash];
	}
	for (CLSSessionEvent* element in self.eventsArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	if (self.hasAnalyzer) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.analyzer] hash];
	}
	if (self.hasGeneratorType) {
		hashCode = hashCode * 31 + self.generatorType;
	}
	if (self.hasFrameDecoder) {
		hashCode = hashCode * 31 + self.frameDecoder;
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSSessionUser ()
@property (retain) NSString* identifier;
@property (retain) NSString* name;
@property (retain) NSString* email;
@property (retain) PBAppendableArray * customAttributesArray;
@end

@implementation CLSSessionUser

- (BOOL) hasIdentifier {
	return !!hasIdentifier_;
}
- (void) setHasIdentifier:(BOOL) value_ {
	hasIdentifier_ = !!value_;
}
@synthesize identifier;
- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasEmail {
	return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) value_ {
	hasEmail_ = !!value_;
}
@synthesize email;
@synthesize customAttributesArray;
@dynamic customAttributes;
- (void) dealloc {
	self.identifier = nil;
	self.name = nil;
	self.email = nil;
	self.customAttributesArray = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.identifier = @"";
		self.name = @"";
		self.email = @"";
	}
	return self;
}
static CLSSessionUser* defaultCLSIncident_Session_UserInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionUser class]) {
		defaultCLSIncident_Session_UserInstance = [[CLSSessionUser alloc] init];
	}
}
+ (CLSSessionUser*) defaultInstance {
	return defaultCLSIncident_Session_UserInstance;
}
- (CLSSessionUser*) defaultInstance {
	return defaultCLSIncident_Session_UserInstance;
}
- (PBArray *)customAttributes {
	return customAttributesArray;
}
- (CLSSessionCustomAttribute*)customAttributesAtIndex:(NSUInteger)index {
	return [customAttributesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	if (!self.hasIdentifier) {
		return NO;
	}
	for (CLSSessionCustomAttribute* element in self.customAttributes) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasIdentifier) {
		[output writeString:1 value:self.identifier];
	}
	if (self.hasName) {
		[output writeString:2 value:self.name];
	}
	if (self.hasEmail) {
		[output writeString:3 value:self.email];
	}
	for (CLSSessionCustomAttribute *element in self.customAttributesArray) {
		[output writeMessage:4 value:element];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasIdentifier) {
		size_ += computeStringSize(1, self.identifier);
	}
	if (self.hasName) {
		size_ += computeStringSize(2, self.name);
	}
	if (self.hasEmail) {
		size_ += computeStringSize(3, self.email);
	}
	for (CLSSessionCustomAttribute *element in self.customAttributesArray) {
		size_ += computeMessageSize(4, element);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionUser*) parseFromData:(NSData*) data {
	return (CLSSessionUser*)[[[CLSSessionUser builder] mergeFromData:data] build];
}
+ (CLSSessionUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionUser*)[[[CLSSessionUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionUser*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionUser*)[[[CLSSessionUser builder] mergeFromInputStream:input] build];
}
+ (CLSSessionUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionUser*)[[[CLSSessionUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionUser*)[[[CLSSessionUser builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionUser*)[[[CLSSessionUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_User_Builder*) builder {
	return [[[CLSIncident_Session_User_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_User_Builder*) builderWithPrototype:(CLSSessionUser*) prototype {
	return [[CLSSessionUser builder] mergeFrom:prototype];
}
- (CLSIncident_Session_User_Builder*) builder {
	return [CLSSessionUser builder];
}
- (CLSIncident_Session_User_Builder*) toBuilder {
	return [CLSSessionUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasIdentifier) {
		[output appendFormat:@"%@%@: %@\n", indent, @"identifier", self.identifier];
	}
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasEmail) {
		[output appendFormat:@"%@%@: %@\n", indent, @"email", self.email];
	}
	for (CLSSessionCustomAttribute* element in self.customAttributesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"customAttributes"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionUser class]]) {
		return NO;
	}
	CLSSessionUser *otherMessage = other;
	return
	self.hasIdentifier == otherMessage.hasIdentifier &&
	(!self.hasIdentifier || [self.identifier isEqual:otherMessage.identifier]) &&
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasEmail == otherMessage.hasEmail &&
	(!self.hasEmail || [self.email isEqual:otherMessage.email]) &&
	[self.customAttributesArray isEqualToArray:otherMessage.customAttributesArray] &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasIdentifier) {
		hashCode = hashCode * 31 + [self.identifier hash];
	}
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasEmail) {
		hashCode = hashCode * 31 + [self.email hash];
	}
	for (CLSSessionCustomAttribute* element in self.customAttributesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_User_Builder()
@property (retain) CLSSessionUser* result;
@end

@implementation CLSIncident_Session_User_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionUser alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_User_Builder*) clear {
	self.result = [[[CLSSessionUser alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_User_Builder*) clone {
	return [CLSSessionUser builderWithPrototype:result];
}
- (CLSSessionUser*) defaultInstance {
	return [CLSSessionUser defaultInstance];
}
- (CLSSessionUser*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionUser*) buildPartial {
	CLSSessionUser* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_User_Builder*) mergeFrom:(CLSSessionUser*) other {
	if (other == [CLSSessionUser defaultInstance]) {
		return self;
	}
	if (other.hasIdentifier) {
		[self setIdentifier:other.identifier];
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasEmail) {
		[self setEmail:other.email];
	}
	if (other.customAttributesArray.count > 0) {
		if (result.customAttributesArray == nil) {
			result.customAttributesArray = [[other.customAttributesArray copyWithZone:[other.customAttributesArray zone]] autorelease];
		} else {
			[result.customAttributesArray appendArray:other.customAttributesArray];
		}
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_User_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setIdentifier:[input readString]];
				break;
			}
			case 18: {
				[self setName:[input readString]];
				break;
			}
			case 26: {
				[self setEmail:[input readString]];
				break;
			}
			case 34: {
				CLSIncident_CustomAttribute_Builder* subBuilder = [CLSSessionCustomAttribute builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addCustomAttributes:[subBuilder buildPartial]];
				break;
			}
		}
	}
}
- (BOOL) hasIdentifier {
	return result.hasIdentifier;
}
- (NSString*) identifier {
	return result.identifier;
}
- (CLSIncident_Session_User_Builder*) setIdentifier:(NSString*) value {
	result.hasIdentifier = YES;
	result.identifier = value;
	return self;
}
- (CLSIncident_Session_User_Builder*) clearIdentifier {
	result.hasIdentifier = NO;
	result.identifier = @"";
	return self;
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_User_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_User_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasEmail {
	return result.hasEmail;
}
- (NSString*) email {
	return result.email;
}
- (CLSIncident_Session_User_Builder*) setEmail:(NSString*) value {
	result.hasEmail = YES;
	result.email = value;
	return self;
}
- (CLSIncident_Session_User_Builder*) clearEmail {
	result.hasEmail = NO;
	result.email = @"";
	return self;
}
- (PBAppendableArray *)customAttributes {
	return result.customAttributesArray;
}
- (CLSSessionCustomAttribute*)customAttributesAtIndex:(NSUInteger)index {
	return [result customAttributesAtIndex:index];
}
- (CLSIncident_Session_User_Builder *)addCustomAttributes:(CLSSessionCustomAttribute*)value {
	if (result.customAttributesArray == nil) {
		result.customAttributesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.customAttributesArray addObject:value];
	return self;
}
- (CLSIncident_Session_User_Builder *)setCustomAttributesArray:(NSArray *)array {
	result.customAttributesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_User_Builder *)setCustomAttributesValues:(const CLSSessionCustomAttribute* *)values count:(NSUInteger)count {
	result.customAttributesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_User_Builder *)clearCustomAttributes {
	result.customAttributesArray = nil;
	return self;
}
@end

@interface CLSSessionProcess ()
@property (retain) NSString* name;
@property uint32_t pid;
@property (retain) NSString* path;
@property (retain) NSString* parentProcessName;
@property uint32_t parentProcessId;
@end

@implementation CLSSessionProcess

- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasPid {
	return !!hasPid_;
}
- (void) setHasPid:(BOOL) value_ {
	hasPid_ = !!value_;
}
@synthesize pid;
- (BOOL) hasPath {
	return !!hasPath_;
}
- (void) setHasPath:(BOOL) value_ {
	hasPath_ = !!value_;
}
@synthesize path;
- (BOOL) hasParentProcessName {
	return !!hasParentProcessName_;
}
- (void) setHasParentProcessName:(BOOL) value_ {
	hasParentProcessName_ = !!value_;
}
@synthesize parentProcessName;
- (BOOL) hasParentProcessId {
	return !!hasParentProcessId_;
}
- (void) setHasParentProcessId:(BOOL) value_ {
	hasParentProcessId_ = !!value_;
}
@synthesize parentProcessId;
- (void) dealloc {
	self.name = nil;
	self.path = nil;
	self.parentProcessName = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.name = @"";
		self.pid = 0;
		self.path = @"";
		self.parentProcessName = @"";
		self.parentProcessId = 0;
	}
	return self;
}
static CLSSessionProcess* defaultCLSIncident_Session_ProcessInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionProcess class]) {
		defaultCLSIncident_Session_ProcessInstance = [[CLSSessionProcess alloc] init];
	}
}
+ (CLSSessionProcess*) defaultInstance {
	return defaultCLSIncident_Session_ProcessInstance;
}
- (CLSSessionProcess*) defaultInstance {
	return defaultCLSIncident_Session_ProcessInstance;
}
- (BOOL) isInitialized {
	if (!self.hasPid) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasName) {
		[output writeString:1 value:self.name];
	}
	if (self.hasPid) {
		[output writeUInt32:2 value:self.pid];
	}
	if (self.hasPath) {
		[output writeString:3 value:self.path];
	}
	if (self.hasParentProcessName) {
		[output writeString:4 value:self.parentProcessName];
	}
	if (self.hasParentProcessId) {
		[output writeUInt32:5 value:self.parentProcessId];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasName) {
		size_ += computeStringSize(1, self.name);
	}
	if (self.hasPid) {
		size_ += computeUInt32Size(2, self.pid);
	}
	if (self.hasPath) {
		size_ += computeStringSize(3, self.path);
	}
	if (self.hasParentProcessName) {
		size_ += computeStringSize(4, self.parentProcessName);
	}
	if (self.hasParentProcessId) {
		size_ += computeUInt32Size(5, self.parentProcessId);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionProcess*) parseFromData:(NSData*) data {
	return (CLSSessionProcess*)[[[CLSSessionProcess builder] mergeFromData:data] build];
}
+ (CLSSessionProcess*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionProcess*)[[[CLSSessionProcess builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionProcess*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionProcess*)[[[CLSSessionProcess builder] mergeFromInputStream:input] build];
}
+ (CLSSessionProcess*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionProcess*)[[[CLSSessionProcess builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionProcess*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionProcess*)[[[CLSSessionProcess builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionProcess*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionProcess*)[[[CLSSessionProcess builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Process_Builder*) builder {
	return [[[CLSIncident_Session_Process_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Process_Builder*) builderWithPrototype:(CLSSessionProcess*) prototype {
	return [[CLSSessionProcess builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Process_Builder*) builder {
	return [CLSSessionProcess builder];
}
- (CLSIncident_Session_Process_Builder*) toBuilder {
	return [CLSSessionProcess builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasPid) {
		[output appendFormat:@"%@%@: %@\n", indent, @"pid", [NSNumber numberWithInt:self.pid]];
	}
	if (self.hasPath) {
		[output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
	}
	if (self.hasParentProcessName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"parentProcessName", self.parentProcessName];
	}
	if (self.hasParentProcessId) {
		[output appendFormat:@"%@%@: %@\n", indent, @"parentProcessId", [NSNumber numberWithInt:self.parentProcessId]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionProcess class]]) {
		return NO;
	}
	CLSSessionProcess *otherMessage = other;
	return
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasPid == otherMessage.hasPid &&
	(!self.hasPid || self.pid == otherMessage.pid) &&
	self.hasPath == otherMessage.hasPath &&
	(!self.hasPath || [self.path isEqual:otherMessage.path]) &&
	self.hasParentProcessName == otherMessage.hasParentProcessName &&
	(!self.hasParentProcessName || [self.parentProcessName isEqual:otherMessage.parentProcessName]) &&
	self.hasParentProcessId == otherMessage.hasParentProcessId &&
	(!self.hasParentProcessId || self.parentProcessId == otherMessage.parentProcessId) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasPid) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.pid] hash];
	}
	if (self.hasPath) {
		hashCode = hashCode * 31 + [self.path hash];
	}
	if (self.hasParentProcessName) {
		hashCode = hashCode * 31 + [self.parentProcessName hash];
	}
	if (self.hasParentProcessId) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.parentProcessId] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Process_Builder()
@property (retain) CLSSessionProcess* result;
@end

@implementation CLSIncident_Session_Process_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionProcess alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Process_Builder*) clear {
	self.result = [[[CLSSessionProcess alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Process_Builder*) clone {
	return [CLSSessionProcess builderWithPrototype:result];
}
- (CLSSessionProcess*) defaultInstance {
	return [CLSSessionProcess defaultInstance];
}
- (CLSSessionProcess*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionProcess*) buildPartial {
	CLSSessionProcess* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Process_Builder*) mergeFrom:(CLSSessionProcess*) other {
	if (other == [CLSSessionProcess defaultInstance]) {
		return self;
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasPid) {
		[self setPid:other.pid];
	}
	if (other.hasPath) {
		[self setPath:other.path];
	}
	if (other.hasParentProcessName) {
		[self setParentProcessName:other.parentProcessName];
	}
	if (other.hasParentProcessId) {
		[self setParentProcessId:other.parentProcessId];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Process_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Process_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setName:[input readString]];
				break;
			}
			case 16: {
				[self setPid:[input readUInt32]];
				break;
			}
			case 26: {
				[self setPath:[input readString]];
				break;
			}
			case 34: {
				[self setParentProcessName:[input readString]];
				break;
			}
			case 40: {
				[self setParentProcessId:[input readUInt32]];
				break;
			}
		}
	}
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_Process_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_Process_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasPid {
	return result.hasPid;
}
- (uint32_t) pid {
	return result.pid;
}
- (CLSIncident_Session_Process_Builder*) setPid:(uint32_t) value {
	result.hasPid = YES;
	result.pid = value;
	return self;
}
- (CLSIncident_Session_Process_Builder*) clearPid {
	result.hasPid = NO;
	result.pid = 0;
	return self;
}
- (BOOL) hasPath {
	return result.hasPath;
}
- (NSString*) path {
	return result.path;
}
- (CLSIncident_Session_Process_Builder*) setPath:(NSString*) value {
	result.hasPath = YES;
	result.path = value;
	return self;
}
- (CLSIncident_Session_Process_Builder*) clearPath {
	result.hasPath = NO;
	result.path = @"";
	return self;
}
- (BOOL) hasParentProcessName {
	return result.hasParentProcessName;
}
- (NSString*) parentProcessName {
	return result.parentProcessName;
}
- (CLSIncident_Session_Process_Builder*) setParentProcessName:(NSString*) value {
	result.hasParentProcessName = YES;
	result.parentProcessName = value;
	return self;
}
- (CLSIncident_Session_Process_Builder*) clearParentProcessName {
	result.hasParentProcessName = NO;
	result.parentProcessName = @"";
	return self;
}
- (BOOL) hasParentProcessId {
	return result.hasParentProcessId;
}
- (uint32_t) parentProcessId {
	return result.parentProcessId;
}
- (CLSIncident_Session_Process_Builder*) setParentProcessId:(uint32_t) value {
	result.hasParentProcessId = YES;
	result.parentProcessId = value;
	return self;
}
- (CLSIncident_Session_Process_Builder*) clearParentProcessId {
	result.hasParentProcessId = NO;
	result.parentProcessId = 0;
	return self;
}
@end

@interface CLSSessionApplication ()
@property (retain) NSString* identifier;
@property (retain) NSString* version;
@property (retain) NSString* displayVersion;
@property (retain) CLSSessionProcess* process;
@property (retain) CLSSessionOrganization* organization;
@property (retain) NSString* installationUuid;
@property (retain) NSString* clsId;
@property (retain) NSString* developmentPlatform;
@property (retain) NSString* developmentPlatformVersion;
@property CLSIncident_DeliveryMechanism deliveryMechanism;
@end

@implementation CLSSessionApplication

- (BOOL) hasIdentifier {
	return !!hasIdentifier_;
}
- (void) setHasIdentifier:(BOOL) value_ {
	hasIdentifier_ = !!value_;
}
@synthesize identifier;
- (BOOL) hasVersion {
	return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
	hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasDisplayVersion {
	return !!hasDisplayVersion_;
}
- (void) setHasDisplayVersion:(BOOL) value_ {
	hasDisplayVersion_ = !!value_;
}
@synthesize displayVersion;
- (BOOL) hasProcess {
	return !!hasProcess_;
}
- (void) setHasProcess:(BOOL) value_ {
	hasProcess_ = !!value_;
}
@synthesize process;
- (BOOL) hasOrganization {
	return !!hasOrganization_;
}
- (void) setHasOrganization:(BOOL) value_ {
	hasOrganization_ = !!value_;
}
@synthesize organization;
- (BOOL) hasInstallationUuid {
	return !!hasInstallationUuid_;
}
- (void) setHasInstallationUuid:(BOOL) value_ {
	hasInstallationUuid_ = !!value_;
}
@synthesize installationUuid;
- (BOOL) hasClsId {
	return !!hasClsId_;
}
- (void) setHasClsId:(BOOL) value_ {
	hasClsId_ = !!value_;
}
@synthesize clsId;
- (BOOL) hasDevelopmentPlatform {
	return !!hasDevelopmentPlatform_;
}
- (void) setHasDevelopmentPlatform:(BOOL) value_ {
	hasDevelopmentPlatform_ = !!value_;
}
@synthesize developmentPlatform;
- (BOOL) hasDevelopmentPlatformVersion {
	return !!hasDevelopmentPlatformVersion_;
}
- (void) setHasDevelopmentPlatformVersion:(BOOL) value_ {
	hasDevelopmentPlatformVersion_ = !!value_;
}
@synthesize developmentPlatformVersion;
- (BOOL) hasDeliveryMechanism {
	return !!hasDeliveryMechanism_;
}
- (void) setHasDeliveryMechanism:(BOOL) value_ {
	hasDeliveryMechanism_ = !!value_;
}
@synthesize deliveryMechanism;
- (void) dealloc {
	self.identifier = nil;
	self.version = nil;
	self.displayVersion = nil;
	self.process = nil;
	self.organization = nil;
	self.installationUuid = nil;
	self.clsId = nil;
	self.developmentPlatform = nil;
	self.developmentPlatformVersion = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.identifier = @"";
		self.version = @"";
		self.displayVersion = @"";
		self.process = [CLSSessionProcess defaultInstance];
		self.organization = [CLSSessionOrganization defaultInstance];
		self.installationUuid = @"";
		self.clsId = @"";
		self.developmentPlatform = @"";
		self.developmentPlatformVersion = @"";
		self.deliveryMechanism = CLSIncident_DeliveryMechanismDeveloper;
	}
	return self;
}
static CLSSessionApplication* defaultCLSIncident_Session_ApplicationInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionApplication class]) {
		defaultCLSIncident_Session_ApplicationInstance = [[CLSSessionApplication alloc] init];
	}
}
+ (CLSSessionApplication*) defaultInstance {
	return defaultCLSIncident_Session_ApplicationInstance;
}
- (CLSSessionApplication*) defaultInstance {
	return defaultCLSIncident_Session_ApplicationInstance;
}
- (BOOL) isInitialized {
	if (!self.hasIdentifier) {
		return NO;
	}
	if (!self.hasVersion) {
		return NO;
	}
	if (self.hasProcess) {
		if (!self.process.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasIdentifier) {
		[output writeString:1 value:self.identifier];
	}
	if (self.hasVersion) {
		[output writeString:2 value:self.version];
	}
	if (self.hasDisplayVersion) {
		[output writeString:3 value:self.displayVersion];
	}
	if (self.hasProcess) {
		[output writeMessage:4 value:self.process];
	}
	if (self.hasOrganization) {
		[output writeMessage:5 value:self.organization];
	}
	if (self.hasInstallationUuid) {
		[output writeString:6 value:self.installationUuid];
	}
	if (self.hasClsId) {
		[output writeString:7 value:self.clsId];
	}
	if (self.hasDevelopmentPlatform) {
		[output writeString:8 value:self.developmentPlatform];
	}
	if (self.hasDevelopmentPlatformVersion) {
		[output writeString:9 value:self.developmentPlatformVersion];
	}
	if (self.hasDeliveryMechanism) {
		[output writeEnum:10 value:self.deliveryMechanism];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasIdentifier) {
		size_ += computeStringSize(1, self.identifier);
	}
	if (self.hasVersion) {
		size_ += computeStringSize(2, self.version);
	}
	if (self.hasDisplayVersion) {
		size_ += computeStringSize(3, self.displayVersion);
	}
	if (self.hasProcess) {
		size_ += computeMessageSize(4, self.process);
	}
	if (self.hasOrganization) {
		size_ += computeMessageSize(5, self.organization);
	}
	if (self.hasInstallationUuid) {
		size_ += computeStringSize(6, self.installationUuid);
	}
	if (self.hasClsId) {
		size_ += computeStringSize(7, self.clsId);
	}
	if (self.hasDevelopmentPlatform) {
		size_ += computeStringSize(8, self.developmentPlatform);
	}
	if (self.hasDevelopmentPlatformVersion) {
		size_ += computeStringSize(9, self.developmentPlatformVersion);
	}
	if (self.hasDeliveryMechanism) {
		size_ += computeEnumSize(10, self.deliveryMechanism);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionApplication*) parseFromData:(NSData*) data {
	return (CLSSessionApplication*)[[[CLSSessionApplication builder] mergeFromData:data] build];
}
+ (CLSSessionApplication*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionApplication*)[[[CLSSessionApplication builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionApplication*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionApplication*)[[[CLSSessionApplication builder] mergeFromInputStream:input] build];
}
+ (CLSSessionApplication*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionApplication*)[[[CLSSessionApplication builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionApplication*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionApplication*)[[[CLSSessionApplication builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionApplication*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionApplication*)[[[CLSSessionApplication builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Application_Builder*) builder {
	return [[[CLSIncident_Session_Application_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Application_Builder*) builderWithPrototype:(CLSSessionApplication*) prototype {
	return [[CLSSessionApplication builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Application_Builder*) builder {
	return [CLSSessionApplication builder];
}
- (CLSIncident_Session_Application_Builder*) toBuilder {
	return [CLSSessionApplication builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasIdentifier) {
		[output appendFormat:@"%@%@: %@\n", indent, @"identifier", self.identifier];
	}
	if (self.hasVersion) {
		[output appendFormat:@"%@%@: %@\n", indent, @"version", self.version];
	}
	if (self.hasDisplayVersion) {
		[output appendFormat:@"%@%@: %@\n", indent, @"displayVersion", self.displayVersion];
	}
	if (self.hasProcess) {
		[output appendFormat:@"%@%@ {\n", indent, @"process"];
		[self.process writeDescriptionTo:output
							  withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasOrganization) {
		[output appendFormat:@"%@%@ {\n", indent, @"organization"];
		[self.organization writeDescriptionTo:output
								   withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasInstallationUuid) {
		[output appendFormat:@"%@%@: %@\n", indent, @"installationUuid", self.installationUuid];
	}
	if (self.hasClsId) {
		[output appendFormat:@"%@%@: %@\n", indent, @"clsId", self.clsId];
	}
	if (self.hasDevelopmentPlatform) {
		[output appendFormat:@"%@%@: %@\n", indent, @"developmentPlatform", self.developmentPlatform];
	}
	if (self.hasDevelopmentPlatformVersion) {
		[output appendFormat:@"%@%@: %@\n", indent, @"developmentPlatformVersion", self.developmentPlatformVersion];
	}
	if (self.hasDeliveryMechanism) {
		[output appendFormat:@"%@%@: %d\n", indent, @"deliveryMechanism", self.deliveryMechanism];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionApplication class]]) {
		return NO;
	}
	CLSSessionApplication *otherMessage = other;
	return
	self.hasIdentifier == otherMessage.hasIdentifier &&
	(!self.hasIdentifier || [self.identifier isEqual:otherMessage.identifier]) &&
	self.hasVersion == otherMessage.hasVersion &&
	(!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
	self.hasDisplayVersion == otherMessage.hasDisplayVersion &&
	(!self.hasDisplayVersion || [self.displayVersion isEqual:otherMessage.displayVersion]) &&
	self.hasProcess == otherMessage.hasProcess &&
	(!self.hasProcess || [self.process isEqual:otherMessage.process]) &&
	self.hasOrganization == otherMessage.hasOrganization &&
	(!self.hasOrganization || [self.organization isEqual:otherMessage.organization]) &&
	self.hasInstallationUuid == otherMessage.hasInstallationUuid &&
	(!self.hasInstallationUuid || [self.installationUuid isEqual:otherMessage.installationUuid]) &&
	self.hasClsId == otherMessage.hasClsId &&
	(!self.hasClsId || [self.clsId isEqual:otherMessage.clsId]) &&
	self.hasDevelopmentPlatform == otherMessage.hasDevelopmentPlatform &&
	(!self.hasDevelopmentPlatform || [self.developmentPlatform isEqual:otherMessage.developmentPlatform]) &&
	self.hasDevelopmentPlatformVersion == otherMessage.hasDevelopmentPlatformVersion &&
	(!self.hasDevelopmentPlatformVersion || [self.developmentPlatformVersion isEqual:otherMessage.developmentPlatformVersion]) &&
	self.hasDeliveryMechanism == otherMessage.hasDeliveryMechanism &&
	(!self.hasDeliveryMechanism || self.deliveryMechanism == otherMessage.deliveryMechanism) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasIdentifier) {
		hashCode = hashCode * 31 + [self.identifier hash];
	}
	if (self.hasVersion) {
		hashCode = hashCode * 31 + [self.version hash];
	}
	if (self.hasDisplayVersion) {
		hashCode = hashCode * 31 + [self.displayVersion hash];
	}
	if (self.hasProcess) {
		hashCode = hashCode * 31 + [self.process hash];
	}
	if (self.hasOrganization) {
		hashCode = hashCode * 31 + [self.organization hash];
	}
	if (self.hasInstallationUuid) {
		hashCode = hashCode * 31 + [self.installationUuid hash];
	}
	if (self.hasClsId) {
		hashCode = hashCode * 31 + [self.clsId hash];
	}
	if (self.hasDevelopmentPlatform) {
		hashCode = hashCode * 31 + [self.developmentPlatform hash];
	}
	if (self.hasDevelopmentPlatformVersion) {
		hashCode = hashCode * 31 + [self.developmentPlatformVersion hash];
	}
	if (self.hasDeliveryMechanism) {
		hashCode = hashCode * 31 + self.deliveryMechanism;
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSSessionOrganization ()
@property (retain) NSString* apiKey;
@property (retain) NSString* clsId;
@end

@implementation CLSSessionOrganization

- (BOOL) hasApiKey {
	return !!hasApiKey_;
}
- (void) setHasApiKey:(BOOL) value_ {
	hasApiKey_ = !!value_;
}
@synthesize apiKey;
- (BOOL) hasClsId {
	return !!hasClsId_;
}
- (void) setHasClsId:(BOOL) value_ {
	hasClsId_ = !!value_;
}
@synthesize clsId;
- (void) dealloc {
	self.apiKey = nil;
	self.clsId = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.apiKey = @"";
		self.clsId = @"";
	}
	return self;
}
static CLSSessionOrganization* defaultCLSIncident_Session_Application_OrganizationInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionOrganization class]) {
		defaultCLSIncident_Session_Application_OrganizationInstance = [[CLSSessionOrganization alloc] init];
	}
}
+ (CLSSessionOrganization*) defaultInstance {
	return defaultCLSIncident_Session_Application_OrganizationInstance;
}
- (CLSSessionOrganization*) defaultInstance {
	return defaultCLSIncident_Session_Application_OrganizationInstance;
}
- (BOOL) isInitialized {
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasApiKey) {
		[output writeString:1 value:self.apiKey];
	}
	if (self.hasClsId) {
		[output writeString:2 value:self.clsId];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasApiKey) {
		size_ += computeStringSize(1, self.apiKey);
	}
	if (self.hasClsId) {
		size_ += computeStringSize(2, self.clsId);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionOrganization*) parseFromData:(NSData*) data {
	return (CLSSessionOrganization*)[[[CLSSessionOrganization builder] mergeFromData:data] build];
}
+ (CLSSessionOrganization*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionOrganization*)[[[CLSSessionOrganization builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionOrganization*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionOrganization*)[[[CLSSessionOrganization builder] mergeFromInputStream:input] build];
}
+ (CLSSessionOrganization*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionOrganization*)[[[CLSSessionOrganization builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionOrganization*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionOrganization*)[[[CLSSessionOrganization builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionOrganization*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionOrganization*)[[[CLSSessionOrganization builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Application_Organization_Builder*) builder {
	return [[[CLSIncident_Session_Application_Organization_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Application_Organization_Builder*) builderWithPrototype:(CLSSessionOrganization*) prototype {
	return [[CLSSessionOrganization builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Application_Organization_Builder*) builder {
	return [CLSSessionOrganization builder];
}
- (CLSIncident_Session_Application_Organization_Builder*) toBuilder {
	return [CLSSessionOrganization builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasApiKey) {
		[output appendFormat:@"%@%@: %@\n", indent, @"apiKey", self.apiKey];
	}
	if (self.hasClsId) {
		[output appendFormat:@"%@%@: %@\n", indent, @"clsId", self.clsId];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionOrganization class]]) {
		return NO;
	}
	CLSSessionOrganization *otherMessage = other;
	return
	self.hasApiKey == otherMessage.hasApiKey &&
	(!self.hasApiKey || [self.apiKey isEqual:otherMessage.apiKey]) &&
	self.hasClsId == otherMessage.hasClsId &&
	(!self.hasClsId || [self.clsId isEqual:otherMessage.clsId]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasApiKey) {
		hashCode = hashCode * 31 + [self.apiKey hash];
	}
	if (self.hasClsId) {
		hashCode = hashCode * 31 + [self.clsId hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Application_Organization_Builder()
@property (retain) CLSSessionOrganization* result;
@end

@implementation CLSIncident_Session_Application_Organization_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionOrganization alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Application_Organization_Builder*) clear {
	self.result = [[[CLSSessionOrganization alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Application_Organization_Builder*) clone {
	return [CLSSessionOrganization builderWithPrototype:result];
}
- (CLSSessionOrganization*) defaultInstance {
	return [CLSSessionOrganization defaultInstance];
}
- (CLSSessionOrganization*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionOrganization*) buildPartial {
	CLSSessionOrganization* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Application_Organization_Builder*) mergeFrom:(CLSSessionOrganization*) other {
	if (other == [CLSSessionOrganization defaultInstance]) {
		return self;
	}
	if (other.hasApiKey) {
		[self setApiKey:other.apiKey];
	}
	if (other.hasClsId) {
		[self setClsId:other.clsId];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Application_Organization_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Application_Organization_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setApiKey:[input readString]];
				break;
			}
			case 18: {
				[self setClsId:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasApiKey {
	return result.hasApiKey;
}
- (NSString*) apiKey {
	return result.apiKey;
}
- (CLSIncident_Session_Application_Organization_Builder*) setApiKey:(NSString*) value {
	result.hasApiKey = YES;
	result.apiKey = value;
	return self;
}
- (CLSIncident_Session_Application_Organization_Builder*) clearApiKey {
	result.hasApiKey = NO;
	result.apiKey = @"";
	return self;
}
- (BOOL) hasClsId {
	return result.hasClsId;
}
- (NSString*) clsId {
	return result.clsId;
}
- (CLSIncident_Session_Application_Organization_Builder*) setClsId:(NSString*) value {
	result.hasClsId = YES;
	result.clsId = value;
	return self;
}
- (CLSIncident_Session_Application_Organization_Builder*) clearClsId {
	result.hasClsId = NO;
	result.clsId = @"";
	return self;
}
@end

@interface CLSIncident_Session_Application_Builder()
@property (retain) CLSSessionApplication* result;
@end

@implementation CLSIncident_Session_Application_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionApplication alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Application_Builder*) clear {
	self.result = [[[CLSSessionApplication alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Application_Builder*) clone {
	return [CLSSessionApplication builderWithPrototype:result];
}
- (CLSSessionApplication*) defaultInstance {
	return [CLSSessionApplication defaultInstance];
}
- (CLSSessionApplication*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionApplication*) buildPartial {
	CLSSessionApplication* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Application_Builder*) mergeFrom:(CLSSessionApplication*) other {
	if (other == [CLSSessionApplication defaultInstance]) {
		return self;
	}
	if (other.hasIdentifier) {
		[self setIdentifier:other.identifier];
	}
	if (other.hasVersion) {
		[self setVersion:other.version];
	}
	if (other.hasDisplayVersion) {
		[self setDisplayVersion:other.displayVersion];
	}
	if (other.hasProcess) {
		[self mergeProcess:other.process];
	}
	if (other.hasOrganization) {
		[self mergeOrganization:other.organization];
	}
	if (other.hasInstallationUuid) {
		[self setInstallationUuid:other.installationUuid];
	}
	if (other.hasClsId) {
		[self setClsId:other.clsId];
	}
	if (other.hasDevelopmentPlatform) {
		[self setDevelopmentPlatform:other.developmentPlatform];
	}
	if (other.hasDevelopmentPlatformVersion) {
		[self setDevelopmentPlatformVersion:other.developmentPlatformVersion];
	}
	if (other.hasDeliveryMechanism) {
		[self setDeliveryMechanism:other.deliveryMechanism];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Application_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Application_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setIdentifier:[input readString]];
				break;
			}
			case 18: {
				[self setVersion:[input readString]];
				break;
			}
			case 26: {
				[self setDisplayVersion:[input readString]];
				break;
			}
			case 34: {
				CLSIncident_Session_Process_Builder* subBuilder = [CLSSessionProcess builder];
				if (self.hasProcess) {
					[subBuilder mergeFrom:self.process];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setProcess:[subBuilder buildPartial]];
				break;
			}
			case 42: {
				CLSIncident_Session_Application_Organization_Builder* subBuilder = [CLSSessionOrganization builder];
				if (self.hasOrganization) {
					[subBuilder mergeFrom:self.organization];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setOrganization:[subBuilder buildPartial]];
				break;
			}
			case 50: {
				[self setInstallationUuid:[input readString]];
				break;
			}
			case 58: {
				[self setClsId:[input readString]];
				break;
			}
			case 66: {
				[self setDevelopmentPlatform:[input readString]];
				break;
			}
			case 74: {
				[self setDevelopmentPlatformVersion:[input readString]];
				break;
			}
			case 80: {
				int32_t value = [input readEnum];
				if (CLSIncident_DeliveryMechanismIsValidValue(value)) {
					[self setDeliveryMechanism:value];
				} else {
					[unknownFields mergeVarintField:10 value:value];
				}
				break;
			}
		}
	}
}
- (BOOL) hasIdentifier {
	return result.hasIdentifier;
}
- (NSString*) identifier {
	return result.identifier;
}
- (CLSIncident_Session_Application_Builder*) setIdentifier:(NSString*) value {
	result.hasIdentifier = YES;
	result.identifier = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearIdentifier {
	result.hasIdentifier = NO;
	result.identifier = @"";
	return self;
}
- (BOOL) hasVersion {
	return result.hasVersion;
}
- (NSString*) version {
	return result.version;
}
- (CLSIncident_Session_Application_Builder*) setVersion:(NSString*) value {
	result.hasVersion = YES;
	result.version = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearVersion {
	result.hasVersion = NO;
	result.version = @"";
	return self;
}
- (BOOL) hasDisplayVersion {
	return result.hasDisplayVersion;
}
- (NSString*) displayVersion {
	return result.displayVersion;
}
- (CLSIncident_Session_Application_Builder*) setDisplayVersion:(NSString*) value {
	result.hasDisplayVersion = YES;
	result.displayVersion = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearDisplayVersion {
	result.hasDisplayVersion = NO;
	result.displayVersion = @"";
	return self;
}
- (BOOL) hasProcess {
	return result.hasProcess;
}
- (CLSSessionProcess*) process {
	return result.process;
}
- (CLSIncident_Session_Application_Builder*) setProcess:(CLSSessionProcess*) value {
	result.hasProcess = YES;
	result.process = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) setProcessBuilder:(CLSIncident_Session_Process_Builder*) builderForValue {
	return [self setProcess:[builderForValue build]];
}
- (CLSIncident_Session_Application_Builder*) mergeProcess:(CLSSessionProcess*) value {
	if (result.hasProcess &&
		result.process != [CLSSessionProcess defaultInstance]) {
		result.process =
		[[[CLSSessionProcess builderWithPrototype:result.process] mergeFrom:value] buildPartial];
	} else {
		result.process = value;
	}
	result.hasProcess = YES;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearProcess {
	result.hasProcess = NO;
	result.process = [CLSSessionProcess defaultInstance];
	return self;
}
- (BOOL) hasOrganization {
	return result.hasOrganization;
}
- (CLSSessionOrganization*) organization {
	return result.organization;
}
- (CLSIncident_Session_Application_Builder*) setOrganization:(CLSSessionOrganization*) value {
	result.hasOrganization = YES;
	result.organization = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) setOrganizationBuilder:(CLSIncident_Session_Application_Organization_Builder*) builderForValue {
	return [self setOrganization:[builderForValue build]];
}
- (CLSIncident_Session_Application_Builder*) mergeOrganization:(CLSSessionOrganization*) value {
	if (result.hasOrganization &&
		result.organization != [CLSSessionOrganization defaultInstance]) {
		result.organization =
		[[[CLSSessionOrganization builderWithPrototype:result.organization] mergeFrom:value] buildPartial];
	} else {
		result.organization = value;
	}
	result.hasOrganization = YES;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearOrganization {
	result.hasOrganization = NO;
	result.organization = [CLSSessionOrganization defaultInstance];
	return self;
}
- (BOOL) hasInstallationUuid {
	return result.hasInstallationUuid;
}
- (NSString*) installationUuid {
	return result.installationUuid;
}
- (CLSIncident_Session_Application_Builder*) setInstallationUuid:(NSString*) value {
	result.hasInstallationUuid = YES;
	result.installationUuid = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearInstallationUuid {
	result.hasInstallationUuid = NO;
	result.installationUuid = @"";
	return self;
}
- (BOOL) hasClsId {
	return result.hasClsId;
}
- (NSString*) clsId {
	return result.clsId;
}
- (CLSIncident_Session_Application_Builder*) setClsId:(NSString*) value {
	result.hasClsId = YES;
	result.clsId = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearClsId {
	result.hasClsId = NO;
	result.clsId = @"";
	return self;
}
- (BOOL) hasDevelopmentPlatform {
	return result.hasDevelopmentPlatform;
}
- (NSString*) developmentPlatform {
	return result.developmentPlatform;
}
- (CLSIncident_Session_Application_Builder*) setDevelopmentPlatform:(NSString*) value {
	result.hasDevelopmentPlatform = YES;
	result.developmentPlatform = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearDevelopmentPlatform {
	result.hasDevelopmentPlatform = NO;
	result.developmentPlatform = @"";
	return self;
}
- (BOOL) hasDevelopmentPlatformVersion {
	return result.hasDevelopmentPlatformVersion;
}
- (NSString*) developmentPlatformVersion {
	return result.developmentPlatformVersion;
}
- (CLSIncident_Session_Application_Builder*) setDevelopmentPlatformVersion:(NSString*) value {
	result.hasDevelopmentPlatformVersion = YES;
	result.developmentPlatformVersion = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearDevelopmentPlatformVersion {
	result.hasDevelopmentPlatformVersion = NO;
	result.developmentPlatformVersion = @"";
	return self;
}
- (BOOL) hasDeliveryMechanism {
	return result.hasDeliveryMechanism;
}
- (CLSIncident_DeliveryMechanism) deliveryMechanism {
	return result.deliveryMechanism;
}
- (CLSIncident_Session_Application_Builder*) setDeliveryMechanism:(CLSIncident_DeliveryMechanism) value {
	result.hasDeliveryMechanism = YES;
	result.deliveryMechanism = value;
	return self;
}
- (CLSIncident_Session_Application_Builder*) clearDeliveryMechanism {
	result.hasDeliveryMechanism = NO;
	result.deliveryMechanism = CLSIncident_DeliveryMechanismDeveloper;
	return self;
}
@end

@interface CLSSessionOperatingSystem ()
@property CLSIncident_Platform platform;
@property (retain) NSString* version;
@property (retain) NSString* buildVersion;
@property BOOL jailbroken;
@end

@implementation CLSSessionOperatingSystem

- (BOOL) hasPlatform {
	return !!hasPlatform_;
}
- (void) setHasPlatform:(BOOL) value_ {
	hasPlatform_ = !!value_;
}
@synthesize platform;
- (BOOL) hasVersion {
	return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
	hasVersion_ = !!value_;
}
@synthesize version;
- (BOOL) hasBuildVersion {
	return !!hasBuildVersion_;
}
- (void) setHasBuildVersion:(BOOL) value_ {
	hasBuildVersion_ = !!value_;
}
@synthesize buildVersion;
- (BOOL) hasJailbroken {
	return !!hasJailbroken_;
}
- (void) setHasJailbroken:(BOOL) value_ {
	hasJailbroken_ = !!value_;
}
- (BOOL) jailbroken {
	return !!jailbroken_;
}
- (void) setJailbroken:(BOOL) value_ {
	jailbroken_ = !!value_;
}
- (void) dealloc {
	self.version = nil;
	self.buildVersion = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.platform = CLSIncident_PlatformMacOsX;
		self.version = @"";
		self.buildVersion = @"";
		self.jailbroken = NO;
	}
	return self;
}
static CLSSessionOperatingSystem* defaultCLSIncident_Session_OperatingSystemInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionOperatingSystem class]) {
		defaultCLSIncident_Session_OperatingSystemInstance = [[CLSSessionOperatingSystem alloc] init];
	}
}
+ (CLSSessionOperatingSystem*) defaultInstance {
	return defaultCLSIncident_Session_OperatingSystemInstance;
}
- (CLSSessionOperatingSystem*) defaultInstance {
	return defaultCLSIncident_Session_OperatingSystemInstance;
}
- (BOOL) isInitialized {
	if (!self.hasPlatform) {
		return NO;
	}
	if (!self.hasVersion) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasPlatform) {
		[output writeEnum:1 value:self.platform];
	}
	if (self.hasVersion) {
		[output writeString:2 value:self.version];
	}
	if (self.hasBuildVersion) {
		[output writeString:3 value:self.buildVersion];
	}
	if (self.hasJailbroken) {
		[output writeBool:4 value:self.jailbroken];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasPlatform) {
		size_ += computeEnumSize(1, self.platform);
	}
	if (self.hasVersion) {
		size_ += computeStringSize(2, self.version);
	}
	if (self.hasBuildVersion) {
		size_ += computeStringSize(3, self.buildVersion);
	}
	if (self.hasJailbroken) {
		size_ += computeBoolSize(4, self.jailbroken);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionOperatingSystem*) parseFromData:(NSData*) data {
	return (CLSSessionOperatingSystem*)[[[CLSSessionOperatingSystem builder] mergeFromData:data] build];
}
+ (CLSSessionOperatingSystem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionOperatingSystem*)[[[CLSSessionOperatingSystem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionOperatingSystem*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionOperatingSystem*)[[[CLSSessionOperatingSystem builder] mergeFromInputStream:input] build];
}
+ (CLSSessionOperatingSystem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionOperatingSystem*)[[[CLSSessionOperatingSystem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionOperatingSystem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionOperatingSystem*)[[[CLSSessionOperatingSystem builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionOperatingSystem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionOperatingSystem*)[[[CLSSessionOperatingSystem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_OperatingSystem_Builder*) builder {
	return [[[CLSIncident_Session_OperatingSystem_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_OperatingSystem_Builder*) builderWithPrototype:(CLSSessionOperatingSystem*) prototype {
	return [[CLSSessionOperatingSystem builder] mergeFrom:prototype];
}
- (CLSIncident_Session_OperatingSystem_Builder*) builder {
	return [CLSSessionOperatingSystem builder];
}
- (CLSIncident_Session_OperatingSystem_Builder*) toBuilder {
	return [CLSSessionOperatingSystem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasPlatform) {
		[output appendFormat:@"%@%@: %d\n", indent, @"platform", self.platform];
	}
	if (self.hasVersion) {
		[output appendFormat:@"%@%@: %@\n", indent, @"version", self.version];
	}
	if (self.hasBuildVersion) {
		[output appendFormat:@"%@%@: %@\n", indent, @"buildVersion", self.buildVersion];
	}
	if (self.hasJailbroken) {
		[output appendFormat:@"%@%@: %@\n", indent, @"jailbroken", [NSNumber numberWithBool:self.jailbroken]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionOperatingSystem class]]) {
		return NO;
	}
	CLSSessionOperatingSystem *otherMessage = other;
	return
	self.hasPlatform == otherMessage.hasPlatform &&
	(!self.hasPlatform || self.platform == otherMessage.platform) &&
	self.hasVersion == otherMessage.hasVersion &&
	(!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
	self.hasBuildVersion == otherMessage.hasBuildVersion &&
	(!self.hasBuildVersion || [self.buildVersion isEqual:otherMessage.buildVersion]) &&
	self.hasJailbroken == otherMessage.hasJailbroken &&
	(!self.hasJailbroken || self.jailbroken == otherMessage.jailbroken) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasPlatform) {
		hashCode = hashCode * 31 + self.platform;
	}
	if (self.hasVersion) {
		hashCode = hashCode * 31 + [self.version hash];
	}
	if (self.hasBuildVersion) {
		hashCode = hashCode * 31 + [self.buildVersion hash];
	}
	if (self.hasJailbroken) {
		hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.jailbroken] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_OperatingSystem_Builder()
@property (retain) CLSSessionOperatingSystem* result;
@end

@implementation CLSIncident_Session_OperatingSystem_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionOperatingSystem alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_OperatingSystem_Builder*) clear {
	self.result = [[[CLSSessionOperatingSystem alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_OperatingSystem_Builder*) clone {
	return [CLSSessionOperatingSystem builderWithPrototype:result];
}
- (CLSSessionOperatingSystem*) defaultInstance {
	return [CLSSessionOperatingSystem defaultInstance];
}
- (CLSSessionOperatingSystem*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionOperatingSystem*) buildPartial {
	CLSSessionOperatingSystem* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_OperatingSystem_Builder*) mergeFrom:(CLSSessionOperatingSystem*) other {
	if (other == [CLSSessionOperatingSystem defaultInstance]) {
		return self;
	}
	if (other.hasPlatform) {
		[self setPlatform:other.platform];
	}
	if (other.hasVersion) {
		[self setVersion:other.version];
	}
	if (other.hasBuildVersion) {
		[self setBuildVersion:other.buildVersion];
	}
	if (other.hasJailbroken) {
		[self setJailbroken:other.jailbroken];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_OperatingSystem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_OperatingSystem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 8: {
				int32_t value = [input readEnum];
				if (CLSIncident_PlatformIsValidValue(value)) {
					[self setPlatform:value];
				} else {
					[unknownFields mergeVarintField:1 value:value];
				}
				break;
			}
			case 18: {
				[self setVersion:[input readString]];
				break;
			}
			case 26: {
				[self setBuildVersion:[input readString]];
				break;
			}
			case 32: {
				[self setJailbroken:[input readBool]];
				break;
			}
		}
	}
}
- (BOOL) hasPlatform {
	return result.hasPlatform;
}
- (CLSIncident_Platform) platform {
	return result.platform;
}
- (CLSIncident_Session_OperatingSystem_Builder*) setPlatform:(CLSIncident_Platform) value {
	result.hasPlatform = YES;
	result.platform = value;
	return self;
}
- (CLSIncident_Session_OperatingSystem_Builder*) clearPlatform {
	result.hasPlatform = NO;
	result.platform = CLSIncident_PlatformMacOsX;
	return self;
}
- (BOOL) hasVersion {
	return result.hasVersion;
}
- (NSString*) version {
	return result.version;
}
- (CLSIncident_Session_OperatingSystem_Builder*) setVersion:(NSString*) value {
	result.hasVersion = YES;
	result.version = value;
	return self;
}
- (CLSIncident_Session_OperatingSystem_Builder*) clearVersion {
	result.hasVersion = NO;
	result.version = @"";
	return self;
}
- (BOOL) hasBuildVersion {
	return result.hasBuildVersion;
}
- (NSString*) buildVersion {
	return result.buildVersion;
}
- (CLSIncident_Session_OperatingSystem_Builder*) setBuildVersion:(NSString*) value {
	result.hasBuildVersion = YES;
	result.buildVersion = value;
	return self;
}
- (CLSIncident_Session_OperatingSystem_Builder*) clearBuildVersion {
	result.hasBuildVersion = NO;
	result.buildVersion = @"";
	return self;
}
- (BOOL) hasJailbroken {
	return result.hasJailbroken;
}
- (BOOL) jailbroken {
	return result.jailbroken;
}
- (CLSIncident_Session_OperatingSystem_Builder*) setJailbroken:(BOOL) value {
	result.hasJailbroken = YES;
	result.jailbroken = value;
	return self;
}
- (CLSIncident_Session_OperatingSystem_Builder*) clearJailbroken {
	result.hasJailbroken = NO;
	result.jailbroken = NO;
	return self;
}
@end

@interface CLSSessionDevice ()
@property (retain) NSData* identifier;
@property (retain) NSData* udid;
@property CLSIncident_Architecture arch;
@property (retain) NSString* model;
@property uint32_t cores;
@property uint64_t ram;
@property uint64_t diskSpace;
@property (retain) NSString* userAgent;
@property (retain) NSString* language;
@property BOOL simulator;
@property (retain) PBAppendableArray * identifiersArray;
@property uint32_t state;
@property (retain) NSString* manufacturer;
@property (retain) NSString* modelClass;
@end

@implementation CLSSessionDevice

- (BOOL) hasIdentifier {
	return !!hasIdentifier_;
}
- (void) setHasIdentifier:(BOOL) value_ {
	hasIdentifier_ = !!value_;
}
@synthesize identifier;
- (BOOL) hasUdid {
	return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value_ {
	hasUdid_ = !!value_;
}
@synthesize udid;
- (BOOL) hasArch {
	return !!hasArch_;
}
- (void) setHasArch:(BOOL) value_ {
	hasArch_ = !!value_;
}
@synthesize arch;
- (BOOL) hasModel {
	return !!hasModel_;
}
- (void) setHasModel:(BOOL) value_ {
	hasModel_ = !!value_;
}
@synthesize model;
- (BOOL) hasCores {
	return !!hasCores_;
}
- (void) setHasCores:(BOOL) value_ {
	hasCores_ = !!value_;
}
@synthesize cores;
- (BOOL) hasRam {
	return !!hasRam_;
}
- (void) setHasRam:(BOOL) value_ {
	hasRam_ = !!value_;
}
@synthesize ram;
- (BOOL) hasDiskSpace {
	return !!hasDiskSpace_;
}
- (void) setHasDiskSpace:(BOOL) value_ {
	hasDiskSpace_ = !!value_;
}
@synthesize diskSpace;
- (BOOL) hasUserAgent {
	return !!hasUserAgent_;
}
- (void) setHasUserAgent:(BOOL) value_ {
	hasUserAgent_ = !!value_;
}
@synthesize userAgent;
- (BOOL) hasLanguage {
	return !!hasLanguage_;
}
- (void) setHasLanguage:(BOOL) value_ {
	hasLanguage_ = !!value_;
}
@synthesize language;
- (BOOL) hasSimulator {
	return !!hasSimulator_;
}
- (void) setHasSimulator:(BOOL) value_ {
	hasSimulator_ = !!value_;
}
- (BOOL) simulator {
	return !!simulator_;
}
- (void) setSimulator:(BOOL) value_ {
	simulator_ = !!value_;
}
@synthesize identifiersArray;
@dynamic identifiers;
- (BOOL) hasState {
	return !!hasState_;
}
- (void) setHasState:(BOOL) value_ {
	hasState_ = !!value_;
}
@synthesize state;
- (BOOL) hasManufacturer {
	return !!hasManufacturer_;
}
- (void) setHasManufacturer:(BOOL) value_ {
	hasManufacturer_ = !!value_;
}
@synthesize manufacturer;
- (BOOL) hasModelClass {
	return !!hasModelClass_;
}
- (void) setHasModelClass:(BOOL) value_ {
	hasModelClass_ = !!value_;
}
@synthesize modelClass;
- (void) dealloc {
	self.identifier = nil;
	self.udid = nil;
	self.model = nil;
	self.userAgent = nil;
	self.language = nil;
	self.identifiersArray = nil;
	self.manufacturer = nil;
	self.modelClass = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.identifier = [NSData data];
		self.udid = [NSData data];
		self.arch = CLSIncident_ArchitectureX8632;
		self.model = @"";
		self.cores = 0;
		self.ram = 0L;
		self.diskSpace = 0L;
		self.userAgent = @"";
		self.language = @"";
		self.simulator = NO;
		self.state = 0;
		self.manufacturer = @"";
		self.modelClass = @"";
	}
	return self;
}
static CLSSessionDevice* defaultCLSIncident_Session_DeviceInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionDevice class]) {
		defaultCLSIncident_Session_DeviceInstance = [[CLSSessionDevice alloc] init];
	}
}
+ (CLSSessionDevice*) defaultInstance {
	return defaultCLSIncident_Session_DeviceInstance;
}
- (CLSSessionDevice*) defaultInstance {
	return defaultCLSIncident_Session_DeviceInstance;
}
- (PBArray *)identifiers {
	return identifiersArray;
}
- (CLSIncident_Session_Device_Identifier*)identifiersAtIndex:(NSUInteger)index {
	return [identifiersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	if (!self.hasArch) {
		return NO;
	}
	for (CLSIncident_Session_Device_Identifier* element in self.identifiers) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasIdentifier) {
		[output writeData:1 value:self.identifier];
	}
	if (self.hasUdid) {
		[output writeData:2 value:self.udid];
	}
	if (self.hasArch) {
		[output writeEnum:3 value:self.arch];
	}
	if (self.hasModel) {
		[output writeString:4 value:self.model];
	}
	if (self.hasCores) {
		[output writeUInt32:5 value:self.cores];
	}
	if (self.hasRam) {
		[output writeUInt64:6 value:self.ram];
	}
	if (self.hasDiskSpace) {
		[output writeUInt64:7 value:self.diskSpace];
	}
	if (self.hasUserAgent) {
		[output writeString:8 value:self.userAgent];
	}
	if (self.hasLanguage) {
		[output writeString:9 value:self.language];
	}
	if (self.hasSimulator) {
		[output writeBool:10 value:self.simulator];
	}
	for (CLSIncident_Session_Device_Identifier *element in self.identifiersArray) {
		[output writeMessage:11 value:element];
	}
	if (self.hasState) {
		[output writeUInt32:12 value:self.state];
	}
	if (self.hasManufacturer) {
		[output writeString:13 value:self.manufacturer];
	}
	if (self.hasModelClass) {
		[output writeString:14 value:self.modelClass];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasIdentifier) {
		size_ += computeDataSize(1, self.identifier);
	}
	if (self.hasUdid) {
		size_ += computeDataSize(2, self.udid);
	}
	if (self.hasArch) {
		size_ += computeEnumSize(3, self.arch);
	}
	if (self.hasModel) {
		size_ += computeStringSize(4, self.model);
	}
	if (self.hasCores) {
		size_ += computeUInt32Size(5, self.cores);
	}
	if (self.hasRam) {
		size_ += computeUInt64Size(6, self.ram);
	}
	if (self.hasDiskSpace) {
		size_ += computeUInt64Size(7, self.diskSpace);
	}
	if (self.hasUserAgent) {
		size_ += computeStringSize(8, self.userAgent);
	}
	if (self.hasLanguage) {
		size_ += computeStringSize(9, self.language);
	}
	if (self.hasSimulator) {
		size_ += computeBoolSize(10, self.simulator);
	}
	for (CLSIncident_Session_Device_Identifier *element in self.identifiersArray) {
		size_ += computeMessageSize(11, element);
	}
	if (self.hasState) {
		size_ += computeUInt32Size(12, self.state);
	}
	if (self.hasManufacturer) {
		size_ += computeStringSize(13, self.manufacturer);
	}
	if (self.hasModelClass) {
		size_ += computeStringSize(14, self.modelClass);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionDevice*) parseFromData:(NSData*) data {
	return (CLSSessionDevice*)[[[CLSSessionDevice builder] mergeFromData:data] build];
}
+ (CLSSessionDevice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionDevice*)[[[CLSSessionDevice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionDevice*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionDevice*)[[[CLSSessionDevice builder] mergeFromInputStream:input] build];
}
+ (CLSSessionDevice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionDevice*)[[[CLSSessionDevice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionDevice*)[[[CLSSessionDevice builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionDevice*)[[[CLSSessionDevice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Device_Builder*) builder {
	return [[[CLSIncident_Session_Device_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Device_Builder*) builderWithPrototype:(CLSSessionDevice*) prototype {
	return [[CLSSessionDevice builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Device_Builder*) builder {
	return [CLSSessionDevice builder];
}
- (CLSIncident_Session_Device_Builder*) toBuilder {
	return [CLSSessionDevice builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasIdentifier) {
		[output appendFormat:@"%@%@: %@\n", indent, @"identifier", self.identifier];
	}
	if (self.hasUdid) {
		[output appendFormat:@"%@%@: %@\n", indent, @"udid", self.udid];
	}
	if (self.hasArch) {
		[output appendFormat:@"%@%@: %d\n", indent, @"arch", self.arch];
	}
	if (self.hasModel) {
		[output appendFormat:@"%@%@: %@\n", indent, @"model", self.model];
	}
	if (self.hasCores) {
		[output appendFormat:@"%@%@: %@\n", indent, @"cores", [NSNumber numberWithInt:self.cores]];
	}
	if (self.hasRam) {
		[output appendFormat:@"%@%@: %@\n", indent, @"ram", [NSNumber numberWithLongLong:self.ram]];
	}
	if (self.hasDiskSpace) {
		[output appendFormat:@"%@%@: %@\n", indent, @"diskSpace", [NSNumber numberWithLongLong:self.diskSpace]];
	}
	if (self.hasUserAgent) {
		[output appendFormat:@"%@%@: %@\n", indent, @"userAgent", self.userAgent];
	}
	if (self.hasLanguage) {
		[output appendFormat:@"%@%@: %@\n", indent, @"language", self.language];
	}
	if (self.hasSimulator) {
		[output appendFormat:@"%@%@: %@\n", indent, @"simulator", [NSNumber numberWithBool:self.simulator]];
	}
	for (CLSIncident_Session_Device_Identifier* element in self.identifiersArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"identifiers"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasState) {
		[output appendFormat:@"%@%@: %@\n", indent, @"state", [NSNumber numberWithInt:self.state]];
	}
	if (self.hasManufacturer) {
		[output appendFormat:@"%@%@: %@\n", indent, @"manufacturer", self.manufacturer];
	}
	if (self.hasModelClass) {
		[output appendFormat:@"%@%@: %@\n", indent, @"modelClass", self.modelClass];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionDevice class]]) {
		return NO;
	}
	CLSSessionDevice *otherMessage = other;
	return
	self.hasIdentifier == otherMessage.hasIdentifier &&
	(!self.hasIdentifier || [self.identifier isEqual:otherMessage.identifier]) &&
	self.hasUdid == otherMessage.hasUdid &&
	(!self.hasUdid || [self.udid isEqual:otherMessage.udid]) &&
	self.hasArch == otherMessage.hasArch &&
	(!self.hasArch || self.arch == otherMessage.arch) &&
	self.hasModel == otherMessage.hasModel &&
	(!self.hasModel || [self.model isEqual:otherMessage.model]) &&
	self.hasCores == otherMessage.hasCores &&
	(!self.hasCores || self.cores == otherMessage.cores) &&
	self.hasRam == otherMessage.hasRam &&
	(!self.hasRam || self.ram == otherMessage.ram) &&
	self.hasDiskSpace == otherMessage.hasDiskSpace &&
	(!self.hasDiskSpace || self.diskSpace == otherMessage.diskSpace) &&
	self.hasUserAgent == otherMessage.hasUserAgent &&
	(!self.hasUserAgent || [self.userAgent isEqual:otherMessage.userAgent]) &&
	self.hasLanguage == otherMessage.hasLanguage &&
	(!self.hasLanguage || [self.language isEqual:otherMessage.language]) &&
	self.hasSimulator == otherMessage.hasSimulator &&
	(!self.hasSimulator || self.simulator == otherMessage.simulator) &&
	[self.identifiersArray isEqualToArray:otherMessage.identifiersArray] &&
	self.hasState == otherMessage.hasState &&
	(!self.hasState || self.state == otherMessage.state) &&
	self.hasManufacturer == otherMessage.hasManufacturer &&
	(!self.hasManufacturer || [self.manufacturer isEqual:otherMessage.manufacturer]) &&
	self.hasModelClass == otherMessage.hasModelClass &&
	(!self.hasModelClass || [self.modelClass isEqual:otherMessage.modelClass]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasIdentifier) {
		hashCode = hashCode * 31 + [self.identifier hash];
	}
	if (self.hasUdid) {
		hashCode = hashCode * 31 + [self.udid hash];
	}
	if (self.hasArch) {
		hashCode = hashCode * 31 + self.arch;
	}
	if (self.hasModel) {
		hashCode = hashCode * 31 + [self.model hash];
	}
	if (self.hasCores) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.cores] hash];
	}
	if (self.hasRam) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.ram] hash];
	}
	if (self.hasDiskSpace) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.diskSpace] hash];
	}
	if (self.hasUserAgent) {
		hashCode = hashCode * 31 + [self.userAgent hash];
	}
	if (self.hasLanguage) {
		hashCode = hashCode * 31 + [self.language hash];
	}
	if (self.hasSimulator) {
		hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.simulator] hash];
	}
	for (CLSIncident_Session_Device_Identifier* element in self.identifiersArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	if (self.hasState) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.state] hash];
	}
	if (self.hasManufacturer) {
		hashCode = hashCode * 31 + [self.manufacturer hash];
	}
	if (self.hasModelClass) {
		hashCode = hashCode * 31 + [self.modelClass hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Device_Identifier ()
@property CLSIncident_DeviceIdentifierType key;
@property (retain) NSString* value;
@end

@implementation CLSIncident_Session_Device_Identifier

- (BOOL) hasKey {
	return !!hasKey_;
}
- (void) setHasKey:(BOOL) value_ {
	hasKey_ = !!value_;
}
@synthesize key;
- (BOOL) hasValue {
	return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
	hasValue_ = !!value_;
}
@synthesize value;
- (void) dealloc {
	self.value = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.key = CLSIncident_DeviceIdentifierTypeWifiMacAddress;
		self.value = @"";
	}
	return self;
}
static CLSIncident_Session_Device_Identifier* defaultCLSIncident_Session_Device_IdentifierInstance = nil;
+ (void) initialize {
	if (self == [CLSIncident_Session_Device_Identifier class]) {
		defaultCLSIncident_Session_Device_IdentifierInstance = [[CLSIncident_Session_Device_Identifier alloc] init];
	}
}
+ (CLSIncident_Session_Device_Identifier*) defaultInstance {
	return defaultCLSIncident_Session_Device_IdentifierInstance;
}
- (CLSIncident_Session_Device_Identifier*) defaultInstance {
	return defaultCLSIncident_Session_Device_IdentifierInstance;
}
- (BOOL) isInitialized {
	if (!self.hasKey) {
		return NO;
	}
	if (!self.hasValue) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasKey) {
		[output writeEnum:1 value:self.key];
	}
	if (self.hasValue) {
		[output writeString:2 value:self.value];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasKey) {
		size_ += computeEnumSize(1, self.key);
	}
	if (self.hasValue) {
		size_ += computeStringSize(2, self.value);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSIncident_Session_Device_Identifier*) parseFromData:(NSData*) data {
	return (CLSIncident_Session_Device_Identifier*)[[[CLSIncident_Session_Device_Identifier builder] mergeFromData:data] build];
}
+ (CLSIncident_Session_Device_Identifier*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Device_Identifier*)[[[CLSIncident_Session_Device_Identifier builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Device_Identifier*) parseFromInputStream:(NSInputStream*) input {
	return (CLSIncident_Session_Device_Identifier*)[[[CLSIncident_Session_Device_Identifier builder] mergeFromInputStream:input] build];
}
+ (CLSIncident_Session_Device_Identifier*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Device_Identifier*)[[[CLSIncident_Session_Device_Identifier builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Device_Identifier*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSIncident_Session_Device_Identifier*)[[[CLSIncident_Session_Device_Identifier builder] mergeFromCodedInputStream:input] build];
}
+ (CLSIncident_Session_Device_Identifier*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Device_Identifier*)[[[CLSIncident_Session_Device_Identifier builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Device_Identifier_Builder*) builder {
	return [[[CLSIncident_Session_Device_Identifier_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Device_Identifier_Builder*) builderWithPrototype:(CLSIncident_Session_Device_Identifier*) prototype {
	return [[CLSIncident_Session_Device_Identifier builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Device_Identifier_Builder*) builder {
	return [CLSIncident_Session_Device_Identifier builder];
}
- (CLSIncident_Session_Device_Identifier_Builder*) toBuilder {
	return [CLSIncident_Session_Device_Identifier builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasKey) {
		[output appendFormat:@"%@%@: %d\n", indent, @"key", self.key];
	}
	if (self.hasValue) {
		[output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSIncident_Session_Device_Identifier class]]) {
		return NO;
	}
	CLSIncident_Session_Device_Identifier *otherMessage = other;
	return
	self.hasKey == otherMessage.hasKey &&
	(!self.hasKey || self.key == otherMessage.key) &&
	self.hasValue == otherMessage.hasValue &&
	(!self.hasValue || [self.value isEqual:otherMessage.value]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasKey) {
		hashCode = hashCode * 31 + self.key;
	}
	if (self.hasValue) {
		hashCode = hashCode * 31 + [self.value hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Device_Identifier_Builder()
@property (retain) CLSIncident_Session_Device_Identifier* result;
@end

@implementation CLSIncident_Session_Device_Identifier_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSIncident_Session_Device_Identifier alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Device_Identifier_Builder*) clear {
	self.result = [[[CLSIncident_Session_Device_Identifier alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Device_Identifier_Builder*) clone {
	return [CLSIncident_Session_Device_Identifier builderWithPrototype:result];
}
- (CLSIncident_Session_Device_Identifier*) defaultInstance {
	return [CLSIncident_Session_Device_Identifier defaultInstance];
}
- (CLSIncident_Session_Device_Identifier*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSIncident_Session_Device_Identifier*) buildPartial {
	CLSIncident_Session_Device_Identifier* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Device_Identifier_Builder*) mergeFrom:(CLSIncident_Session_Device_Identifier*) other {
	if (other == [CLSIncident_Session_Device_Identifier defaultInstance]) {
		return self;
	}
	if (other.hasKey) {
		[self setKey:other.key];
	}
	if (other.hasValue) {
		[self setValue:other.value];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Device_Identifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Device_Identifier_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 8: {
				int32_t value = [input readEnum];
				if (CLSIncident_DeviceIdentifierTypeIsValidValue(value)) {
					[self setKey:value];
				} else {
					[unknownFields mergeVarintField:1 value:value];
				}
				break;
			}
			case 18: {
				[self setValue:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasKey {
	return result.hasKey;
}
- (CLSIncident_DeviceIdentifierType) key {
	return result.key;
}
- (CLSIncident_Session_Device_Identifier_Builder*) setKey:(CLSIncident_DeviceIdentifierType) value {
	result.hasKey = YES;
	result.key = value;
	return self;
}
- (CLSIncident_Session_Device_Identifier_Builder*) clearKey {
	result.hasKey = NO;
	result.key = CLSIncident_DeviceIdentifierTypeWifiMacAddress;
	return self;
}
- (BOOL) hasValue {
	return result.hasValue;
}
- (NSString*) value {
	return result.value;
}
- (CLSIncident_Session_Device_Identifier_Builder*) setValue:(NSString*) value {
	result.hasValue = YES;
	result.value = value;
	return self;
}
- (CLSIncident_Session_Device_Identifier_Builder*) clearValue {
	result.hasValue = NO;
	result.value = @"";
	return self;
}
@end

@interface CLSIncident_Session_Device_Builder()
@property (retain) CLSSessionDevice* result;
@end

@implementation CLSIncident_Session_Device_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionDevice alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Device_Builder*) clear {
	self.result = [[[CLSSessionDevice alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Device_Builder*) clone {
	return [CLSSessionDevice builderWithPrototype:result];
}
- (CLSSessionDevice*) defaultInstance {
	return [CLSSessionDevice defaultInstance];
}
- (CLSSessionDevice*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionDevice*) buildPartial {
	CLSSessionDevice* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Device_Builder*) mergeFrom:(CLSSessionDevice*) other {
	if (other == [CLSSessionDevice defaultInstance]) {
		return self;
	}
	if (other.hasIdentifier) {
		[self setIdentifier:other.identifier];
	}
	if (other.hasUdid) {
		[self setUdid:other.udid];
	}
	if (other.hasArch) {
		[self setArch:other.arch];
	}
	if (other.hasModel) {
		[self setModel:other.model];
	}
	if (other.hasCores) {
		[self setCores:other.cores];
	}
	if (other.hasRam) {
		[self setRam:other.ram];
	}
	if (other.hasDiskSpace) {
		[self setDiskSpace:other.diskSpace];
	}
	if (other.hasUserAgent) {
		[self setUserAgent:other.userAgent];
	}
	if (other.hasLanguage) {
		[self setLanguage:other.language];
	}
	if (other.hasSimulator) {
		[self setSimulator:other.simulator];
	}
	if (other.identifiersArray.count > 0) {
		if (result.identifiersArray == nil) {
			result.identifiersArray = [[other.identifiersArray copyWithZone:[other.identifiersArray zone]] autorelease];
		} else {
			[result.identifiersArray appendArray:other.identifiersArray];
		}
	}
	if (other.hasState) {
		[self setState:other.state];
	}
	if (other.hasManufacturer) {
		[self setManufacturer:other.manufacturer];
	}
	if (other.hasModelClass) {
		[self setModelClass:other.modelClass];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Device_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Device_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setIdentifier:[input readData]];
				break;
			}
			case 18: {
				[self setUdid:[input readData]];
				break;
			}
			case 24: {
				int32_t value = [input readEnum];
				if (CLSIncident_ArchitectureIsValidValue(value)) {
					[self setArch:value];
				} else {
					[unknownFields mergeVarintField:3 value:value];
				}
				break;
			}
			case 34: {
				[self setModel:[input readString]];
				break;
			}
			case 40: {
				[self setCores:[input readUInt32]];
				break;
			}
			case 48: {
				[self setRam:[input readUInt64]];
				break;
			}
			case 56: {
				[self setDiskSpace:[input readUInt64]];
				break;
			}
			case 66: {
				[self setUserAgent:[input readString]];
				break;
			}
			case 74: {
				[self setLanguage:[input readString]];
				break;
			}
			case 80: {
				[self setSimulator:[input readBool]];
				break;
			}
			case 90: {
				CLSIncident_Session_Device_Identifier_Builder* subBuilder = [CLSIncident_Session_Device_Identifier builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addIdentifiers:[subBuilder buildPartial]];
				break;
			}
			case 96: {
				[self setState:[input readUInt32]];
				break;
			}
			case 106: {
				[self setManufacturer:[input readString]];
				break;
			}
			case 114: {
				[self setModelClass:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasIdentifier {
	return result.hasIdentifier;
}
- (NSData*) identifier {
	return result.identifier;
}
- (CLSIncident_Session_Device_Builder*) setIdentifier:(NSData*) value {
	result.hasIdentifier = YES;
	result.identifier = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearIdentifier {
	result.hasIdentifier = NO;
	result.identifier = [NSData data];
	return self;
}
- (BOOL) hasUdid {
	return result.hasUdid;
}
- (NSData*) udid {
	return result.udid;
}
- (CLSIncident_Session_Device_Builder*) setUdid:(NSData*) value {
	result.hasUdid = YES;
	result.udid = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearUdid {
	result.hasUdid = NO;
	result.udid = [NSData data];
	return self;
}
- (BOOL) hasArch {
	return result.hasArch;
}
- (CLSIncident_Architecture) arch {
	return result.arch;
}
- (CLSIncident_Session_Device_Builder*) setArch:(CLSIncident_Architecture) value {
	result.hasArch = YES;
	result.arch = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearArch {
	result.hasArch = NO;
	result.arch = CLSIncident_ArchitectureX8632;
	return self;
}
- (BOOL) hasModel {
	return result.hasModel;
}
- (NSString*) model {
	return result.model;
}
- (CLSIncident_Session_Device_Builder*) setModel:(NSString*) value {
	result.hasModel = YES;
	result.model = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearModel {
	result.hasModel = NO;
	result.model = @"";
	return self;
}
- (BOOL) hasCores {
	return result.hasCores;
}
- (uint32_t) cores {
	return result.cores;
}
- (CLSIncident_Session_Device_Builder*) setCores:(uint32_t) value {
	result.hasCores = YES;
	result.cores = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearCores {
	result.hasCores = NO;
	result.cores = 0;
	return self;
}
- (BOOL) hasRam {
	return result.hasRam;
}
- (uint64_t) ram {
	return result.ram;
}
- (CLSIncident_Session_Device_Builder*) setRam:(uint64_t) value {
	result.hasRam = YES;
	result.ram = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearRam {
	result.hasRam = NO;
	result.ram = 0L;
	return self;
}
- (BOOL) hasDiskSpace {
	return result.hasDiskSpace;
}
- (uint64_t) diskSpace {
	return result.diskSpace;
}
- (CLSIncident_Session_Device_Builder*) setDiskSpace:(uint64_t) value {
	result.hasDiskSpace = YES;
	result.diskSpace = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearDiskSpace {
	result.hasDiskSpace = NO;
	result.diskSpace = 0L;
	return self;
}
- (BOOL) hasUserAgent {
	return result.hasUserAgent;
}
- (NSString*) userAgent {
	return result.userAgent;
}
- (CLSIncident_Session_Device_Builder*) setUserAgent:(NSString*) value {
	result.hasUserAgent = YES;
	result.userAgent = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearUserAgent {
	result.hasUserAgent = NO;
	result.userAgent = @"";
	return self;
}
- (BOOL) hasLanguage {
	return result.hasLanguage;
}
- (NSString*) language {
	return result.language;
}
- (CLSIncident_Session_Device_Builder*) setLanguage:(NSString*) value {
	result.hasLanguage = YES;
	result.language = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearLanguage {
	result.hasLanguage = NO;
	result.language = @"";
	return self;
}
- (BOOL) hasSimulator {
	return result.hasSimulator;
}
- (BOOL) simulator {
	return result.simulator;
}
- (CLSIncident_Session_Device_Builder*) setSimulator:(BOOL) value {
	result.hasSimulator = YES;
	result.simulator = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearSimulator {
	result.hasSimulator = NO;
	result.simulator = NO;
	return self;
}
- (PBAppendableArray *)identifiers {
	return result.identifiersArray;
}
- (CLSIncident_Session_Device_Identifier*)identifiersAtIndex:(NSUInteger)index {
	return [result identifiersAtIndex:index];
}
- (CLSIncident_Session_Device_Builder *)addIdentifiers:(CLSIncident_Session_Device_Identifier*)value {
	if (result.identifiersArray == nil) {
		result.identifiersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.identifiersArray addObject:value];
	return self;
}
- (CLSIncident_Session_Device_Builder *)setIdentifiersArray:(NSArray *)array {
	result.identifiersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Device_Builder *)setIdentifiersValues:(const CLSIncident_Session_Device_Identifier* *)values count:(NSUInteger)count {
	result.identifiersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Device_Builder *)clearIdentifiers {
	result.identifiersArray = nil;
	return self;
}
- (BOOL) hasState {
	return result.hasState;
}
- (uint32_t) state {
	return result.state;
}
- (CLSIncident_Session_Device_Builder*) setState:(uint32_t) value {
	result.hasState = YES;
	result.state = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearState {
	result.hasState = NO;
	result.state = 0;
	return self;
}
- (BOOL) hasManufacturer {
	return result.hasManufacturer;
}
- (NSString*) manufacturer {
	return result.manufacturer;
}
- (CLSIncident_Session_Device_Builder*) setManufacturer:(NSString*) value {
	result.hasManufacturer = YES;
	result.manufacturer = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearManufacturer {
	result.hasManufacturer = NO;
	result.manufacturer = @"";
	return self;
}
- (BOOL) hasModelClass {
	return result.hasModelClass;
}
- (NSString*) modelClass {
	return result.modelClass;
}
- (CLSIncident_Session_Device_Builder*) setModelClass:(NSString*) value {
	result.hasModelClass = YES;
	result.modelClass = value;
	return self;
}
- (CLSIncident_Session_Device_Builder*) clearModelClass {
	result.hasModelClass = NO;
	result.modelClass = @"";
	return self;
}
@end

@interface CLSSessionEvent ()
@property uint64_t timestamp;
@property (retain) NSString* type;
@property (retain) NSString* aggregationId;
@property (retain) CLSSessionEventApplication* app;
@property (retain) CLSSessionEventOperatingSystem* os;
@property (retain) CLSSessionEventDevice* device;
@property (retain) CLSSessionLog* log;
@end

@implementation CLSSessionEvent

- (BOOL) hasTimestamp {
	return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value_ {
	hasTimestamp_ = !!value_;
}
@synthesize timestamp;
- (BOOL) hasType {
	return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
	hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasAggregationId {
	return !!hasAggregationId_;
}
- (void) setHasAggregationId:(BOOL) value_ {
	hasAggregationId_ = !!value_;
}
@synthesize aggregationId;
- (BOOL) hasApp {
	return !!hasApp_;
}
- (void) setHasApp:(BOOL) value_ {
	hasApp_ = !!value_;
}
@synthesize app;
- (BOOL) hasOs {
	return !!hasOs_;
}
- (void) setHasOs:(BOOL) value_ {
	hasOs_ = !!value_;
}
@synthesize os;
- (BOOL) hasDevice {
	return !!hasDevice_;
}
- (void) setHasDevice:(BOOL) value_ {
	hasDevice_ = !!value_;
}
@synthesize device;
- (BOOL) hasLog {
	return !!hasLog_;
}
- (void) setHasLog:(BOOL) value_ {
	hasLog_ = !!value_;
}
@synthesize log;
- (void) dealloc {
	self.type = nil;
	self.aggregationId = nil;
	self.app = nil;
	self.os = nil;
	self.device = nil;
	self.log = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.timestamp = 0L;
		self.type = @"";
		self.aggregationId = @"";
		self.app = [CLSSessionEventApplication defaultInstance];
		self.os = [CLSSessionEventOperatingSystem defaultInstance];
		self.device = [CLSSessionEventDevice defaultInstance];
		self.log = [CLSSessionLog defaultInstance];
	}
	return self;
}
static CLSSessionEvent* defaultCLSIncident_Session_EventInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionEvent class]) {
		defaultCLSIncident_Session_EventInstance = [[CLSSessionEvent alloc] init];
	}
}
+ (CLSSessionEvent*) defaultInstance {
	return defaultCLSIncident_Session_EventInstance;
}
- (CLSSessionEvent*) defaultInstance {
	return defaultCLSIncident_Session_EventInstance;
}
- (BOOL) isInitialized {
	if (!self.hasTimestamp) {
		return NO;
	}
	if (!self.hasType) {
		return NO;
	}
	if (self.hasApp) {
		if (!self.app.isInitialized) {
			return NO;
		}
	}
	if (self.hasOs) {
		if (!self.os.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasTimestamp) {
		[output writeUInt64:1 value:self.timestamp];
	}
	if (self.hasType) {
		[output writeString:2 value:self.type];
	}
	if (self.hasApp) {
		[output writeMessage:3 value:self.app];
	}
	if (self.hasOs) {
		[output writeMessage:4 value:self.os];
	}
	if (self.hasDevice) {
		[output writeMessage:5 value:self.device];
	}
	if (self.hasLog) {
		[output writeMessage:6 value:self.log];
	}
	if (self.hasAggregationId) {
		[output writeString:7 value:self.aggregationId];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasTimestamp) {
		size_ += computeUInt64Size(1, self.timestamp);
	}
	if (self.hasType) {
		size_ += computeStringSize(2, self.type);
	}
	if (self.hasApp) {
		size_ += computeMessageSize(3, self.app);
	}
	if (self.hasOs) {
		size_ += computeMessageSize(4, self.os);
	}
	if (self.hasDevice) {
		size_ += computeMessageSize(5, self.device);
	}
	if (self.hasLog) {
		size_ += computeMessageSize(6, self.log);
	}
	if (self.hasAggregationId) {
		size_ += computeStringSize(7, self.aggregationId);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionEvent*) parseFromData:(NSData*) data {
	return (CLSSessionEvent*)[[[CLSSessionEvent builder] mergeFromData:data] build];
}
+ (CLSSessionEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEvent*)[[[CLSSessionEvent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEvent*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionEvent*)[[[CLSSessionEvent builder] mergeFromInputStream:input] build];
}
+ (CLSSessionEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEvent*)[[[CLSSessionEvent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionEvent*)[[[CLSSessionEvent builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEvent*)[[[CLSSessionEvent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Builder*) builder {
	return [[[CLSIncident_Session_Event_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Builder*) builderWithPrototype:(CLSSessionEvent*) prototype {
	return [[CLSSessionEvent builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Builder*) builder {
	return [CLSSessionEvent builder];
}
- (CLSIncident_Session_Event_Builder*) toBuilder {
	return [CLSSessionEvent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasTimestamp) {
		[output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithLongLong:self.timestamp]];
	}
	if (self.hasType) {
		[output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
	}
	if (self.hasApp) {
		[output appendFormat:@"%@%@ {\n", indent, @"app"];
		[self.app writeDescriptionTo:output
						  withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasOs) {
		[output appendFormat:@"%@%@ {\n", indent, @"os"];
		[self.os writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasDevice) {
		[output appendFormat:@"%@%@ {\n", indent, @"device"];
		[self.device writeDescriptionTo:output
							 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasLog) {
		[output appendFormat:@"%@%@ {\n", indent, @"log"];
		[self.log writeDescriptionTo:output
						  withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasAggregationId) {
		[output appendFormat:@"%@%@: %@\n", indent, @"aggregationId", self.aggregationId];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionEvent class]]) {
		return NO;
	}
	CLSSessionEvent *otherMessage = other;
	return
	self.hasTimestamp == otherMessage.hasTimestamp &&
	(!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
	self.hasType == otherMessage.hasType &&
	(!self.hasType || [self.type isEqual:otherMessage.type]) &&
	self.hasApp == otherMessage.hasApp &&
	(!self.hasApp || [self.app isEqual:otherMessage.app]) &&
	self.hasOs == otherMessage.hasOs &&
	(!self.hasOs || [self.os isEqual:otherMessage.os]) &&
	self.hasDevice == otherMessage.hasDevice &&
	(!self.hasDevice || [self.device isEqual:otherMessage.device]) &&
	self.hasLog == otherMessage.hasLog &&
	(!self.hasLog || [self.log isEqual:otherMessage.log]) &&
	self.hasAggregationId == otherMessage.hasAggregationId &&
	(!self.hasAggregationId || [self.aggregationId isEqual:otherMessage.aggregationId]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasTimestamp) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timestamp] hash];
	}
	if (self.hasType) {
		hashCode = hashCode * 31 + [self.type hash];
	}
	if (self.hasApp) {
		hashCode = hashCode * 31 + [self.app hash];
	}
	if (self.hasOs) {
		hashCode = hashCode * 31 + [self.os hash];
	}
	if (self.hasDevice) {
		hashCode = hashCode * 31 + [self.device hash];
	}
	if (self.hasLog) {
		hashCode = hashCode * 31 + [self.log hash];
	}
	if (self.hasAggregationId) {
		hashCode = hashCode * 31 + [self.aggregationId hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSSessionEventApplication ()
@property (retain) CLSSessionExecution* execution;
@property (retain) PBAppendableArray * customAttributesArray;
@property BOOL background;
@property uint32_t uiOrientation;
@end

@implementation CLSSessionEventApplication

- (BOOL) hasExecution {
	return !!hasExecution_;
}
- (void) setHasExecution:(BOOL) value_ {
	hasExecution_ = !!value_;
}
@synthesize execution;
@synthesize customAttributesArray;
@dynamic customAttributes;
- (BOOL) hasBackground {
	return !!hasBackground_;
}
- (void) setHasBackground:(BOOL) value_ {
	hasBackground_ = !!value_;
}
- (BOOL) background {
	return !!background_;
}
- (void) setBackground:(BOOL) value_ {
	background_ = !!value_;
}
- (BOOL) hasUiOrientation {
	return !!hasUiOrientation_;
}
- (void) setHasUiOrientation:(BOOL) value_ {
	hasUiOrientation_ = !!value_;
}
@synthesize uiOrientation;
- (void) dealloc {
	self.execution = nil;
	self.customAttributesArray = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.execution = [CLSSessionExecution defaultInstance];
		self.background = NO;
		self.uiOrientation = 0;
	}
	return self;
}
static CLSSessionEventApplication* defaultCLSIncident_Session_Event_ApplicationInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionEventApplication class]) {
		defaultCLSIncident_Session_Event_ApplicationInstance = [[CLSSessionEventApplication alloc] init];
	}
}
+ (CLSSessionEventApplication*) defaultInstance {
	return defaultCLSIncident_Session_Event_ApplicationInstance;
}
- (CLSSessionEventApplication*) defaultInstance {
	return defaultCLSIncident_Session_Event_ApplicationInstance;
}
- (PBArray *)customAttributes {
	return customAttributesArray;
}
- (CLSSessionCustomAttribute*)customAttributesAtIndex:(NSUInteger)index {
	return [customAttributesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	if (!self.hasExecution) {
		return NO;
	}
	if (!self.execution.isInitialized) {
		return NO;
	}
	for (CLSSessionCustomAttribute* element in self.customAttributes) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasExecution) {
		[output writeMessage:1 value:self.execution];
	}
	for (CLSSessionCustomAttribute *element in self.customAttributesArray) {
		[output writeMessage:2 value:element];
	}
	if (self.hasBackground) {
		[output writeBool:3 value:self.background];
	}
	if (self.hasUiOrientation) {
		[output writeUInt32:4 value:self.uiOrientation];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasExecution) {
		size_ += computeMessageSize(1, self.execution);
	}
	for (CLSSessionCustomAttribute *element in self.customAttributesArray) {
		size_ += computeMessageSize(2, element);
	}
	if (self.hasBackground) {
		size_ += computeBoolSize(3, self.background);
	}
	if (self.hasUiOrientation) {
		size_ += computeUInt32Size(4, self.uiOrientation);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionEventApplication*) parseFromData:(NSData*) data {
	return (CLSSessionEventApplication*)[[[CLSSessionEventApplication builder] mergeFromData:data] build];
}
+ (CLSSessionEventApplication*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventApplication*)[[[CLSSessionEventApplication builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEventApplication*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionEventApplication*)[[[CLSSessionEventApplication builder] mergeFromInputStream:input] build];
}
+ (CLSSessionEventApplication*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventApplication*)[[[CLSSessionEventApplication builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEventApplication*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionEventApplication*)[[[CLSSessionEventApplication builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionEventApplication*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventApplication*)[[[CLSSessionEventApplication builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Builder*) builderWithPrototype:(CLSSessionEventApplication*) prototype {
	return [[CLSSessionEventApplication builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Builder*) builder {
	return [CLSSessionEventApplication builder];
}
- (CLSIncident_Session_Event_Application_Builder*) toBuilder {
	return [CLSSessionEventApplication builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasExecution) {
		[output appendFormat:@"%@%@ {\n", indent, @"execution"];
		[self.execution writeDescriptionTo:output
								withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	for (CLSSessionCustomAttribute* element in self.customAttributesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"customAttributes"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasBackground) {
		[output appendFormat:@"%@%@: %@\n", indent, @"background", [NSNumber numberWithBool:self.background]];
	}
	if (self.hasUiOrientation) {
		[output appendFormat:@"%@%@: %@\n", indent, @"uiOrientation", [NSNumber numberWithInt:self.uiOrientation]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionEventApplication class]]) {
		return NO;
	}
	CLSSessionEventApplication *otherMessage = other;
	return
	self.hasExecution == otherMessage.hasExecution &&
	(!self.hasExecution || [self.execution isEqual:otherMessage.execution]) &&
	[self.customAttributesArray isEqualToArray:otherMessage.customAttributesArray] &&
	self.hasBackground == otherMessage.hasBackground &&
	(!self.hasBackground || self.background == otherMessage.background) &&
	self.hasUiOrientation == otherMessage.hasUiOrientation &&
	(!self.hasUiOrientation || self.uiOrientation == otherMessage.uiOrientation) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasExecution) {
		hashCode = hashCode * 31 + [self.execution hash];
	}
	for (CLSSessionCustomAttribute* element in self.customAttributesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	if (self.hasBackground) {
		hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.background] hash];
	}
	if (self.hasUiOrientation) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.uiOrientation] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSSessionExecution ()
@property (retain) PBAppendableArray * threadsArray;
@property (retain) CLSSessionException* exception;
@property (retain) CLSSessionSignal* signal;
@property (retain) PBAppendableArray * binariesArray;
@end

@implementation CLSSessionExecution

@synthesize threadsArray;
@dynamic threads;
- (BOOL) hasException {
	return !!hasException_;
}
- (void) setHasException:(BOOL) value_ {
	hasException_ = !!value_;
}
@synthesize exception;
- (BOOL) hasSignal {
	return !!hasSignal_;
}
- (void) setHasSignal:(BOOL) value_ {
	hasSignal_ = !!value_;
}
@synthesize signal;
@synthesize binariesArray;
@dynamic binaries;
- (void) dealloc {
	self.threadsArray = nil;
	self.exception = nil;
	self.signal = nil;
	self.binariesArray = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.exception = [CLSSessionException defaultInstance];
		self.signal = [CLSSessionSignal defaultInstance];
	}
	return self;
}
static CLSSessionExecution* defaultCLSIncident_Session_Event_Application_ExecutionInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionExecution class]) {
		defaultCLSIncident_Session_Event_Application_ExecutionInstance = [[CLSSessionExecution alloc] init];
	}
}
+ (CLSSessionExecution*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_ExecutionInstance;
}
- (CLSSessionExecution*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_ExecutionInstance;
}
- (PBArray *)threads {
	return threadsArray;
}
- (CLSSessionThread*)threadsAtIndex:(NSUInteger)index {
	return [threadsArray objectAtIndex:index];
}
- (PBArray *)binaries {
	return binariesArray;
}
- (CLSSessionBinaryImage*)binariesAtIndex:(NSUInteger)index {
	return [binariesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	if (!self.hasSignal) {
		return NO;
	}
	for (CLSSessionThread* element in self.threads) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	if (self.hasException) {
		if (!self.exception.isInitialized) {
			return NO;
		}
	}
	if (!self.signal.isInitialized) {
		return NO;
	}
	for (CLSSessionBinaryImage* element in self.binaries) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	for (CLSSessionThread *element in self.threadsArray) {
		[output writeMessage:1 value:element];
	}
	if (self.hasException) {
		[output writeMessage:2 value:self.exception];
	}
	if (self.hasSignal) {
		[output writeMessage:3 value:self.signal];
	}
	for (CLSSessionBinaryImage *element in self.binariesArray) {
		[output writeMessage:4 value:element];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	for (CLSSessionThread *element in self.threadsArray) {
		size_ += computeMessageSize(1, element);
	}
	if (self.hasException) {
		size_ += computeMessageSize(2, self.exception);
	}
	if (self.hasSignal) {
		size_ += computeMessageSize(3, self.signal);
	}
	for (CLSSessionBinaryImage *element in self.binariesArray) {
		size_ += computeMessageSize(4, element);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionExecution*) parseFromData:(NSData*) data {
	return (CLSSessionExecution*)[[[CLSSessionExecution builder] mergeFromData:data] build];
}
+ (CLSSessionExecution*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionExecution*)[[[CLSSessionExecution builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionExecution*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionExecution*)[[[CLSSessionExecution builder] mergeFromInputStream:input] build];
}
+ (CLSSessionExecution*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionExecution*)[[[CLSSessionExecution builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionExecution*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionExecution*)[[[CLSSessionExecution builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionExecution*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionExecution*)[[[CLSSessionExecution builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Execution_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Execution_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Execution_Builder*) builderWithPrototype:(CLSSessionExecution*) prototype {
	return [[CLSSessionExecution builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) builder {
	return [CLSSessionExecution builder];
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) toBuilder {
	return [CLSSessionExecution builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	for (CLSSessionThread* element in self.threadsArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"threads"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasException) {
		[output appendFormat:@"%@%@ {\n", indent, @"exception"];
		[self.exception writeDescriptionTo:output
								withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasSignal) {
		[output appendFormat:@"%@%@ {\n", indent, @"signal"];
		[self.signal writeDescriptionTo:output
							 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	for (CLSSessionBinaryImage* element in self.binariesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"binaries"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionExecution class]]) {
		return NO;
	}
	CLSSessionExecution *otherMessage = other;
	return
	[self.threadsArray isEqualToArray:otherMessage.threadsArray] &&
	self.hasException == otherMessage.hasException &&
	(!self.hasException || [self.exception isEqual:otherMessage.exception]) &&
	self.hasSignal == otherMessage.hasSignal &&
	(!self.hasSignal || [self.signal isEqual:otherMessage.signal]) &&
	[self.binariesArray isEqualToArray:otherMessage.binariesArray] &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	for (CLSSessionThread* element in self.threadsArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	if (self.hasException) {
		hashCode = hashCode * 31 + [self.exception hash];
	}
	if (self.hasSignal) {
		hashCode = hashCode * 31 + [self.signal hash];
	}
	for (CLSSessionBinaryImage* element in self.binariesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSSessionThread ()
@property (retain) NSString* name;
@property uint32_t importance;
@property (retain) PBAppendableArray * framesArray;
@property (retain) PBAppendableArray * registersArray;
@property (retain) NSString* alternateName;
@property (retain) NSString* objcSelectorName;
@end

@implementation CLSSessionThread

- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasImportance {
	return !!hasImportance_;
}
- (void) setHasImportance:(BOOL) value_ {
	hasImportance_ = !!value_;
}
@synthesize importance;
@synthesize framesArray;
@dynamic frames;
@synthesize registersArray;
@dynamic registers;
- (BOOL) hasAlternateName {
	return !!hasAlternateName_;
}
- (void) setHasAlternateName:(BOOL) value_ {
	hasAlternateName_ = !!value_;
}
@synthesize alternateName;
- (BOOL) hasObjcSelectorName {
	return !!hasObjcSelectorName_;
}
- (void) setHasObjcSelectorName:(BOOL) value_ {
	hasObjcSelectorName_ = !!value_;
}
@synthesize objcSelectorName;
- (void) dealloc {
	self.name = nil;
	self.framesArray = nil;
	self.registersArray = nil;
	self.alternateName = nil;
	self.objcSelectorName = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.name = @"";
		self.importance = 0;
		self.alternateName = @"";
		self.objcSelectorName = @"";
	}
	return self;
}
static CLSSessionThread* defaultCLSIncident_Session_Event_Application_Execution_ThreadInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionThread class]) {
		defaultCLSIncident_Session_Event_Application_Execution_ThreadInstance = [[CLSSessionThread alloc] init];
	}
}
+ (CLSSessionThread*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_ThreadInstance;
}
- (CLSSessionThread*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_ThreadInstance;
}
- (PBArray *)frames {
	return framesArray;
}
- (CLSSessionFrame*)framesAtIndex:(NSUInteger)index {
	return [framesArray objectAtIndex:index];
}
- (PBArray *)registers {
	return registersArray;
}
- (CLSSessionRegister*)registersAtIndex:(NSUInteger)index {
	return [registersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	if (!self.hasImportance) {
		return NO;
	}
	for (CLSSessionFrame* element in self.frames) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	for (CLSSessionRegister* element in self.registers) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasName) {
		[output writeString:1 value:self.name];
	}
	if (self.hasImportance) {
		[output writeUInt32:2 value:self.importance];
	}
	for (CLSSessionFrame *element in self.framesArray) {
		[output writeMessage:3 value:element];
	}
	for (CLSSessionRegister *element in self.registersArray) {
		[output writeMessage:4 value:element];
	}
	if (self.hasAlternateName) {
		[output writeString:5 value:self.alternateName];
	}
	if (self.hasObjcSelectorName) {
		[output writeString:6 value:self.objcSelectorName];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasName) {
		size_ += computeStringSize(1, self.name);
	}
	if (self.hasImportance) {
		size_ += computeUInt32Size(2, self.importance);
	}
	for (CLSSessionFrame *element in self.framesArray) {
		size_ += computeMessageSize(3, element);
	}
	for (CLSSessionRegister *element in self.registersArray) {
		size_ += computeMessageSize(4, element);
	}
	if (self.hasAlternateName) {
		size_ += computeStringSize(5, self.alternateName);
	}
	if (self.hasObjcSelectorName) {
		size_ += computeStringSize(6, self.objcSelectorName);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionThread*) parseFromData:(NSData*) data {
	return (CLSSessionThread*)[[[CLSSessionThread builder] mergeFromData:data] build];
}
+ (CLSSessionThread*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionThread*)[[[CLSSessionThread builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionThread*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionThread*)[[[CLSSessionThread builder] mergeFromInputStream:input] build];
}
+ (CLSSessionThread*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionThread*)[[[CLSSessionThread builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionThread*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionThread*)[[[CLSSessionThread builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionThread*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionThread*)[[[CLSSessionThread builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Execution_Thread_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) builderWithPrototype:(CLSSessionThread*) prototype {
	return [[CLSSessionThread builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) builder {
	return [CLSSessionThread builder];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) toBuilder {
	return [CLSSessionThread builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasImportance) {
		[output appendFormat:@"%@%@: %@\n", indent, @"importance", [NSNumber numberWithInt:self.importance]];
	}
	for (CLSSessionFrame* element in self.framesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"frames"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	for (CLSSessionRegister* element in self.registersArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"registers"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasAlternateName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"alternateName", self.alternateName];
	}
	if (self.hasObjcSelectorName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"objcSelectorName", self.objcSelectorName];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionThread class]]) {
		return NO;
	}
	CLSSessionThread *otherMessage = other;
	return
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasImportance == otherMessage.hasImportance &&
	(!self.hasImportance || self.importance == otherMessage.importance) &&
	[self.framesArray isEqualToArray:otherMessage.framesArray] &&
	[self.registersArray isEqualToArray:otherMessage.registersArray] &&
	self.hasAlternateName == otherMessage.hasAlternateName &&
	(!self.hasAlternateName || [self.alternateName isEqual:otherMessage.alternateName]) &&
	self.hasObjcSelectorName == otherMessage.hasObjcSelectorName &&
	(!self.hasObjcSelectorName || [self.objcSelectorName isEqual:otherMessage.objcSelectorName]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasImportance) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.importance] hash];
	}
	for (CLSSessionFrame* element in self.framesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	for (CLSSessionRegister* element in self.registersArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	if (self.hasAlternateName) {
		hashCode = hashCode * 31 + [self.alternateName hash];
	}
	if (self.hasObjcSelectorName) {
		hashCode = hashCode * 31 + [self.objcSelectorName hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSSessionRegister ()
@property (retain) NSString* name;
@property uint64_t value;
@end

@implementation CLSSessionRegister

- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasValue {
	return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
	hasValue_ = !!value_;
}
@synthesize value;
- (void) dealloc {
	self.name = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.name = @"";
		self.value = 0L;
	}
	return self;
}
static CLSSessionRegister* defaultCLSIncident_Session_Event_Application_Execution_Thread_RegisterInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionRegister class]) {
		defaultCLSIncident_Session_Event_Application_Execution_Thread_RegisterInstance = [[CLSSessionRegister alloc] init];
	}
}
+ (CLSSessionRegister*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_Thread_RegisterInstance;
}
- (CLSSessionRegister*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_Thread_RegisterInstance;
}
- (BOOL) isInitialized {
	if (!self.hasName) {
		return NO;
	}
	if (!self.hasValue) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasName) {
		[output writeString:1 value:self.name];
	}
	if (self.hasValue) {
		[output writeUInt64:2 value:self.value];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasName) {
		size_ += computeStringSize(1, self.name);
	}
	if (self.hasValue) {
		size_ += computeUInt64Size(2, self.value);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionRegister*) parseFromData:(NSData*) data {
	return (CLSSessionRegister*)[[[CLSSessionRegister builder] mergeFromData:data] build];
}
+ (CLSSessionRegister*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionRegister*)[[[CLSSessionRegister builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionRegister*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionRegister*)[[[CLSSessionRegister builder] mergeFromInputStream:input] build];
}
+ (CLSSessionRegister*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionRegister*)[[[CLSSessionRegister builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionRegister*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionRegister*)[[[CLSSessionRegister builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionRegister*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionRegister*)[[[CLSSessionRegister builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) builderWithPrototype:(CLSSessionRegister*) prototype {
	return [[CLSSessionRegister builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) builder {
	return [CLSSessionRegister builder];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) toBuilder {
	return [CLSSessionRegister builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasValue) {
		[output appendFormat:@"%@%@: %@\n", indent, @"value", [NSNumber numberWithLongLong:self.value]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionRegister class]]) {
		return NO;
	}
	CLSSessionRegister *otherMessage = other;
	return
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasValue == otherMessage.hasValue &&
	(!self.hasValue || self.value == otherMessage.value) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasValue) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.value] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder()
@property (retain) CLSSessionRegister* result;
@end

@implementation CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionRegister alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) clear {
	self.result = [[[CLSSessionRegister alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) clone {
	return [CLSSessionRegister builderWithPrototype:result];
}
- (CLSSessionRegister*) defaultInstance {
	return [CLSSessionRegister defaultInstance];
}
- (CLSSessionRegister*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionRegister*) buildPartial {
	CLSSessionRegister* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) mergeFrom:(CLSSessionRegister*) other {
	if (other == [CLSSessionRegister defaultInstance]) {
		return self;
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasValue) {
		[self setValue:other.value];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setName:[input readString]];
				break;
			}
			case 16: {
				[self setValue:[input readUInt64]];
				break;
			}
		}
	}
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasValue {
	return result.hasValue;
}
- (uint64_t) value {
	return result.value;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) setValue:(uint64_t) value {
	result.hasValue = YES;
	result.value = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder*) clearValue {
	result.hasValue = NO;
	result.value = 0L;
	return self;
}
@end

@interface CLSIncident_Session_Event_Application_Execution_Thread_Builder()
@property (retain) CLSSessionThread* result;
@end

@implementation CLSIncident_Session_Event_Application_Execution_Thread_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionThread alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) clear {
	self.result = [[[CLSSessionThread alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) clone {
	return [CLSSessionThread builderWithPrototype:result];
}
- (CLSSessionThread*) defaultInstance {
	return [CLSSessionThread defaultInstance];
}
- (CLSSessionThread*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionThread*) buildPartial {
	CLSSessionThread* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) mergeFrom:(CLSSessionThread*) other {
	if (other == [CLSSessionThread defaultInstance]) {
		return self;
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasImportance) {
		[self setImportance:other.importance];
	}
	if (other.framesArray.count > 0) {
		if (result.framesArray == nil) {
			result.framesArray = [[other.framesArray copyWithZone:[other.framesArray zone]] autorelease];
		} else {
			[result.framesArray appendArray:other.framesArray];
		}
	}
	if (other.registersArray.count > 0) {
		if (result.registersArray == nil) {
			result.registersArray = [[other.registersArray copyWithZone:[other.registersArray zone]] autorelease];
		} else {
			[result.registersArray appendArray:other.registersArray];
		}
	}
	if (other.hasAlternateName) {
		[self setAlternateName:other.alternateName];
	}
	if (other.hasObjcSelectorName) {
		[self setObjcSelectorName:other.objcSelectorName];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setName:[input readString]];
				break;
			}
			case 16: {
				[self setImportance:[input readUInt32]];
				break;
			}
			case 26: {
				CLSIncident_Frame_Builder* subBuilder = [CLSSessionFrame builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addFrames:[subBuilder buildPartial]];
				break;
			}
			case 34: {
				CLSIncident_Session_Event_Application_Execution_Thread_Register_Builder* subBuilder = [CLSSessionRegister builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addRegisters:[subBuilder buildPartial]];
				break;
			}
			case 42: {
				[self setAlternateName:[input readString]];
				break;
			}
			case 50: {
				[self setObjcSelectorName:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasImportance {
	return result.hasImportance;
}
- (uint32_t) importance {
	return result.importance;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) setImportance:(uint32_t) value {
	result.hasImportance = YES;
	result.importance = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) clearImportance {
	result.hasImportance = NO;
	result.importance = 0;
	return self;
}
- (PBAppendableArray *)frames {
	return result.framesArray;
}
- (CLSSessionFrame*)framesAtIndex:(NSUInteger)index {
	return [result framesAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)addFrames:(CLSSessionFrame*)value {
	if (result.framesArray == nil) {
		result.framesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.framesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)setFramesArray:(NSArray *)array {
	result.framesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)setFramesValues:(const CLSSessionFrame* *)values count:(NSUInteger)count {
	result.framesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)clearFrames {
	result.framesArray = nil;
	return self;
}
- (PBAppendableArray *)registers {
	return result.registersArray;
}
- (CLSSessionRegister*)registersAtIndex:(NSUInteger)index {
	return [result registersAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)addRegisters:(CLSSessionRegister*)value {
	if (result.registersArray == nil) {
		result.registersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.registersArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)setRegistersArray:(NSArray *)array {
	result.registersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)setRegistersValues:(const CLSSessionRegister* *)values count:(NSUInteger)count {
	result.registersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder *)clearRegisters {
	result.registersArray = nil;
	return self;
}
- (BOOL) hasAlternateName {
	return result.hasAlternateName;
}
- (NSString*) alternateName {
	return result.alternateName;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) setAlternateName:(NSString*) value {
	result.hasAlternateName = YES;
	result.alternateName = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) clearAlternateName {
	result.hasAlternateName = NO;
	result.alternateName = @"";
	return self;
}
- (BOOL) hasObjcSelectorName {
	return result.hasObjcSelectorName;
}
- (NSString*) objcSelectorName {
	return result.objcSelectorName;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) setObjcSelectorName:(NSString*) value {
	result.hasObjcSelectorName = YES;
	result.objcSelectorName = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Thread_Builder*) clearObjcSelectorName {
	result.hasObjcSelectorName = NO;
	result.objcSelectorName = @"";
	return self;
}
@end

@interface CLSSessionException ()
@property (retain) NSString* type;
@property (retain) NSString* code;
@property (retain) NSString* reason;
@property (retain) PBAppendableArray * framesArray;
@property (retain) PBAppendableArray * customAttributesArray;
@property (retain) CLSSessionException* causedBy;
@property uint32_t overflowCount;
@property uint32_t importance;
@end

@implementation CLSSessionException

- (BOOL) hasType {
	return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
	hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasCode {
	return !!hasCode_;
}
- (void) setHasCode:(BOOL) value_ {
	hasCode_ = !!value_;
}
@synthesize code;
- (BOOL) hasReason {
	return !!hasReason_;
}
- (void) setHasReason:(BOOL) value_ {
	hasReason_ = !!value_;
}
@synthesize reason;
@synthesize framesArray;
@dynamic frames;
@synthesize customAttributesArray;
@dynamic customAttributes;
- (BOOL) hasCausedBy {
	return !!hasCausedBy_;
}
- (void) setHasCausedBy:(BOOL) value_ {
	hasCausedBy_ = !!value_;
}
@synthesize causedBy;
- (BOOL) hasOverflowCount {
	return !!hasOverflowCount_;
}
- (void) setHasOverflowCount:(BOOL) value_ {
	hasOverflowCount_ = !!value_;
}
@synthesize overflowCount;
- (BOOL) hasImportance {
	return !!hasImportance_;
}
- (void) setHasImportance:(BOOL) value_ {
	hasImportance_ = !!value_;
}
@synthesize importance;
- (void) dealloc {
	self.type = nil;
	self.code = nil;
	self.reason = nil;
	self.framesArray = nil;
	self.customAttributesArray = nil;
	self.causedBy = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.type = @"";
		self.code = @"";
		self.reason = @"";
		self.causedBy = [CLSSessionException defaultInstance];
		self.overflowCount = 0;
		self.importance = 0;
	}
	return self;
}
static CLSSessionException* defaultCLSIncident_Session_Event_Application_Execution_ExceptionInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionException class]) {
		defaultCLSIncident_Session_Event_Application_Execution_ExceptionInstance = [[CLSSessionException alloc] init];
	}
}
+ (CLSSessionException*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_ExceptionInstance;
}
- (CLSSessionException*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_ExceptionInstance;
}
- (PBArray *)frames {
	return framesArray;
}
- (CLSSessionFrame*)framesAtIndex:(NSUInteger)index {
	return [framesArray objectAtIndex:index];
}
- (PBArray *)customAttributes {
	return customAttributesArray;
}
- (CLSSessionCustomAttribute*)customAttributesAtIndex:(NSUInteger)index {
	return [customAttributesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	for (CLSSessionFrame* element in self.frames) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	for (CLSSessionCustomAttribute* element in self.customAttributes) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	if (self.hasCausedBy) {
		if (!self.causedBy.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasType) {
		[output writeString:1 value:self.type];
	}
	if (self.hasCode) {
		[output writeString:2 value:self.code];
	}
	if (self.hasReason) {
		[output writeString:3 value:self.reason];
	}
	for (CLSSessionFrame *element in self.framesArray) {
		[output writeMessage:4 value:element];
	}
	for (CLSSessionCustomAttribute *element in self.customAttributesArray) {
		[output writeMessage:5 value:element];
	}
	if (self.hasCausedBy) {
		[output writeMessage:6 value:self.causedBy];
	}
	if (self.hasOverflowCount) {
		[output writeUInt32:7 value:self.overflowCount];
	}
	if (self.hasImportance) {
		[output writeUInt32:8 value:self.importance];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasType) {
		size_ += computeStringSize(1, self.type);
	}
	if (self.hasCode) {
		size_ += computeStringSize(2, self.code);
	}
	if (self.hasReason) {
		size_ += computeStringSize(3, self.reason);
	}
	for (CLSSessionFrame *element in self.framesArray) {
		size_ += computeMessageSize(4, element);
	}
	for (CLSSessionCustomAttribute *element in self.customAttributesArray) {
		size_ += computeMessageSize(5, element);
	}
	if (self.hasCausedBy) {
		size_ += computeMessageSize(6, self.causedBy);
	}
	if (self.hasOverflowCount) {
		size_ += computeUInt32Size(7, self.overflowCount);
	}
	if (self.hasImportance) {
		size_ += computeUInt32Size(8, self.importance);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionException*) parseFromData:(NSData*) data {
	return (CLSSessionException*)[[[CLSSessionException builder] mergeFromData:data] build];
}
+ (CLSSessionException*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionException*)[[[CLSSessionException builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionException*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionException*)[[[CLSSessionException builder] mergeFromInputStream:input] build];
}
+ (CLSSessionException*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionException*)[[[CLSSessionException builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionException*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionException*)[[[CLSSessionException builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionException*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionException*)[[[CLSSessionException builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Execution_Exception_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) builderWithPrototype:(CLSSessionException*) prototype {
	return [[CLSSessionException builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) builder {
	return [CLSSessionException builder];
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) toBuilder {
	return [CLSSessionException builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasType) {
		[output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
	}
	if (self.hasCode) {
		[output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
	}
	if (self.hasReason) {
		[output appendFormat:@"%@%@: %@\n", indent, @"reason", self.reason];
	}
	for (CLSSessionFrame* element in self.framesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"frames"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	for (CLSSessionCustomAttribute* element in self.customAttributesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"customAttributes"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasCausedBy) {
		[output appendFormat:@"%@%@ {\n", indent, @"causedBy"];
		[self.causedBy writeDescriptionTo:output
							   withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	if (self.hasOverflowCount) {
		[output appendFormat:@"%@%@: %@\n", indent, @"overflowCount", [NSNumber numberWithInt:self.overflowCount]];
	}
	if (self.hasImportance) {
		[output appendFormat:@"%@%@: %@\n", indent, @"importance", [NSNumber numberWithInt:self.importance]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionException class]]) {
		return NO;
	}
	CLSSessionException *otherMessage = other;
	return
	self.hasType == otherMessage.hasType &&
	(!self.hasType || [self.type isEqual:otherMessage.type]) &&
	self.hasCode == otherMessage.hasCode &&
	(!self.hasCode || [self.code isEqual:otherMessage.code]) &&
	self.hasReason == otherMessage.hasReason &&
	(!self.hasReason || [self.reason isEqual:otherMessage.reason]) &&
	[self.framesArray isEqualToArray:otherMessage.framesArray] &&
	[self.customAttributesArray isEqualToArray:otherMessage.customAttributesArray] &&
	self.hasCausedBy == otherMessage.hasCausedBy &&
	(!self.hasCausedBy || [self.causedBy isEqual:otherMessage.causedBy]) &&
	self.hasOverflowCount == otherMessage.hasOverflowCount &&
	(!self.hasOverflowCount || self.overflowCount == otherMessage.overflowCount) &&
	self.hasImportance == otherMessage.hasImportance &&
	(!self.hasImportance || self.importance == otherMessage.importance) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasType) {
		hashCode = hashCode * 31 + [self.type hash];
	}
	if (self.hasCode) {
		hashCode = hashCode * 31 + [self.code hash];
	}
	if (self.hasReason) {
		hashCode = hashCode * 31 + [self.reason hash];
	}
	for (CLSSessionFrame* element in self.framesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	for (CLSSessionCustomAttribute* element in self.customAttributesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	if (self.hasCausedBy) {
		hashCode = hashCode * 31 + [self.causedBy hash];
	}
	if (self.hasOverflowCount) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.overflowCount] hash];
	}
	if (self.hasImportance) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.importance] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_Application_Execution_Exception_Builder()
@property (retain) CLSSessionException* result;
@end

@implementation CLSIncident_Session_Event_Application_Execution_Exception_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionException alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clear {
	self.result = [[[CLSSessionException alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clone {
	return [CLSSessionException builderWithPrototype:result];
}
- (CLSSessionException*) defaultInstance {
	return [CLSSessionException defaultInstance];
}
- (CLSSessionException*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionException*) buildPartial {
	CLSSessionException* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) mergeFrom:(CLSSessionException*) other {
	if (other == [CLSSessionException defaultInstance]) {
		return self;
	}
	if (other.hasType) {
		[self setType:other.type];
	}
	if (other.hasCode) {
		[self setCode:other.code];
	}
	if (other.hasReason) {
		[self setReason:other.reason];
	}
	if (other.framesArray.count > 0) {
		if (result.framesArray == nil) {
			result.framesArray = [[other.framesArray copyWithZone:[other.framesArray zone]] autorelease];
		} else {
			[result.framesArray appendArray:other.framesArray];
		}
	}
	if (other.customAttributesArray.count > 0) {
		if (result.customAttributesArray == nil) {
			result.customAttributesArray = [[other.customAttributesArray copyWithZone:[other.customAttributesArray zone]] autorelease];
		} else {
			[result.customAttributesArray appendArray:other.customAttributesArray];
		}
	}
	if (other.hasCausedBy) {
		[self mergeCausedBy:other.causedBy];
	}
	if (other.hasOverflowCount) {
		[self setOverflowCount:other.overflowCount];
	}
	if (other.hasImportance) {
		[self setImportance:other.importance];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setType:[input readString]];
				break;
			}
			case 18: {
				[self setCode:[input readString]];
				break;
			}
			case 26: {
				[self setReason:[input readString]];
				break;
			}
			case 34: {
				CLSIncident_Frame_Builder* subBuilder = [CLSSessionFrame builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addFrames:[subBuilder buildPartial]];
				break;
			}
			case 42: {
				CLSIncident_CustomAttribute_Builder* subBuilder = [CLSSessionCustomAttribute builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addCustomAttributes:[subBuilder buildPartial]];
				break;
			}
			case 50: {
				CLSIncident_Session_Event_Application_Execution_Exception_Builder* subBuilder = [CLSSessionException builder];
				if (self.hasCausedBy) {
					[subBuilder mergeFrom:self.causedBy];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setCausedBy:[subBuilder buildPartial]];
				break;
			}
			case 56: {
				[self setOverflowCount:[input readUInt32]];
				break;
			}
			case 64: {
				[self setImportance:[input readUInt32]];
				break;
			}
		}
	}
}
- (BOOL) hasType {
	return result.hasType;
}
- (NSString*) type {
	return result.type;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setType:(NSString*) value {
	result.hasType = YES;
	result.type = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clearType {
	result.hasType = NO;
	result.type = @"";
	return self;
}
- (BOOL) hasCode {
	return result.hasCode;
}
- (NSString*) code {
	return result.code;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setCode:(NSString*) value {
	result.hasCode = YES;
	result.code = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clearCode {
	result.hasCode = NO;
	result.code = @"";
	return self;
}
- (BOOL) hasReason {
	return result.hasReason;
}
- (NSString*) reason {
	return result.reason;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setReason:(NSString*) value {
	result.hasReason = YES;
	result.reason = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clearReason {
	result.hasReason = NO;
	result.reason = @"";
	return self;
}
- (PBAppendableArray *)frames {
	return result.framesArray;
}
- (CLSSessionFrame*)framesAtIndex:(NSUInteger)index {
	return [result framesAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)addFrames:(CLSSessionFrame*)value {
	if (result.framesArray == nil) {
		result.framesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.framesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)setFramesArray:(NSArray *)array {
	result.framesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)setFramesValues:(const CLSSessionFrame* *)values count:(NSUInteger)count {
	result.framesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)clearFrames {
	result.framesArray = nil;
	return self;
}
- (PBAppendableArray *)customAttributes {
	return result.customAttributesArray;
}
- (CLSSessionCustomAttribute*)customAttributesAtIndex:(NSUInteger)index {
	return [result customAttributesAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)addCustomAttributes:(CLSSessionCustomAttribute*)value {
	if (result.customAttributesArray == nil) {
		result.customAttributesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.customAttributesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)setCustomAttributesArray:(NSArray *)array {
	result.customAttributesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)setCustomAttributesValues:(const CLSSessionCustomAttribute* *)values count:(NSUInteger)count {
	result.customAttributesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder *)clearCustomAttributes {
	result.customAttributesArray = nil;
	return self;
}
- (BOOL) hasCausedBy {
	return result.hasCausedBy;
}
- (CLSSessionException*) causedBy {
	return result.causedBy;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setCausedBy:(CLSSessionException*) value {
	result.hasCausedBy = YES;
	result.causedBy = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setCausedByBuilder:(CLSIncident_Session_Event_Application_Execution_Exception_Builder*) builderForValue {
	return [self setCausedBy:[builderForValue build]];
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) mergeCausedBy:(CLSSessionException*) value {
	if (result.hasCausedBy &&
		result.causedBy != [CLSSessionException defaultInstance]) {
		result.causedBy =
		[[[CLSSessionException builderWithPrototype:result.causedBy] mergeFrom:value] buildPartial];
	} else {
		result.causedBy = value;
	}
	result.hasCausedBy = YES;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clearCausedBy {
	result.hasCausedBy = NO;
	result.causedBy = [CLSSessionException defaultInstance];
	return self;
}
- (BOOL) hasOverflowCount {
	return result.hasOverflowCount;
}
- (uint32_t) overflowCount {
	return result.overflowCount;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setOverflowCount:(uint32_t) value {
	result.hasOverflowCount = YES;
	result.overflowCount = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clearOverflowCount {
	result.hasOverflowCount = NO;
	result.overflowCount = 0;
	return self;
}
- (BOOL) hasImportance {
	return result.hasImportance;
}
- (uint32_t) importance {
	return result.importance;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) setImportance:(uint32_t) value {
	result.hasImportance = YES;
	result.importance = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Exception_Builder*) clearImportance {
	result.hasImportance = NO;
	result.importance = 0;
	return self;
}
@end

@interface CLSSessionSignal ()
@property (retain) NSString* name;
@property (retain) NSString* code;
@property uint64_t address;
@end

@implementation CLSSessionSignal

- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasCode {
	return !!hasCode_;
}
- (void) setHasCode:(BOOL) value_ {
	hasCode_ = !!value_;
}
@synthesize code;
- (BOOL) hasAddress {
	return !!hasAddress_;
}
- (void) setHasAddress:(BOOL) value_ {
	hasAddress_ = !!value_;
}
@synthesize address;
- (void) dealloc {
	self.name = nil;
	self.code = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.name = @"";
		self.code = @"";
		self.address = 0L;
	}
	return self;
}
static CLSSessionSignal* defaultCLSIncident_Session_Event_Application_Execution_SignalInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionSignal class]) {
		defaultCLSIncident_Session_Event_Application_Execution_SignalInstance = [[CLSSessionSignal alloc] init];
	}
}
+ (CLSSessionSignal*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_SignalInstance;
}
- (CLSSessionSignal*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_SignalInstance;
}
- (BOOL) isInitialized {
	if (!self.hasName) {
		return NO;
	}
	if (!self.hasCode) {
		return NO;
	}
	if (!self.hasAddress) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasName) {
		[output writeString:1 value:self.name];
	}
	if (self.hasCode) {
		[output writeString:2 value:self.code];
	}
	if (self.hasAddress) {
		[output writeUInt64:3 value:self.address];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasName) {
		size_ += computeStringSize(1, self.name);
	}
	if (self.hasCode) {
		size_ += computeStringSize(2, self.code);
	}
	if (self.hasAddress) {
		size_ += computeUInt64Size(3, self.address);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionSignal*) parseFromData:(NSData*) data {
	return (CLSSessionSignal*)[[[CLSSessionSignal builder] mergeFromData:data] build];
}
+ (CLSSessionSignal*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionSignal*)[[[CLSSessionSignal builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionSignal*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionSignal*)[[[CLSSessionSignal builder] mergeFromInputStream:input] build];
}
+ (CLSSessionSignal*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionSignal*)[[[CLSSessionSignal builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionSignal*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionSignal*)[[[CLSSessionSignal builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionSignal*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionSignal*)[[[CLSSessionSignal builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Execution_Signal_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) builderWithPrototype:(CLSSessionSignal*) prototype {
	return [[CLSSessionSignal builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) builder {
	return [CLSSessionSignal builder];
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) toBuilder {
	return [CLSSessionSignal builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasCode) {
		[output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
	}
	if (self.hasAddress) {
		[output appendFormat:@"%@%@: %@\n", indent, @"address", [NSNumber numberWithLongLong:self.address]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionSignal class]]) {
		return NO;
	}
	CLSSessionSignal *otherMessage = other;
	return
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasCode == otherMessage.hasCode &&
	(!self.hasCode || [self.code isEqual:otherMessage.code]) &&
	self.hasAddress == otherMessage.hasAddress &&
	(!self.hasAddress || self.address == otherMessage.address) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasCode) {
		hashCode = hashCode * 31 + [self.code hash];
	}
	if (self.hasAddress) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.address] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_Application_Execution_Signal_Builder()
@property (retain) CLSSessionSignal* result;
@end

@implementation CLSIncident_Session_Event_Application_Execution_Signal_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionSignal alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) clear {
	self.result = [[[CLSSessionSignal alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) clone {
	return [CLSSessionSignal builderWithPrototype:result];
}
- (CLSSessionSignal*) defaultInstance {
	return [CLSSessionSignal defaultInstance];
}
- (CLSSessionSignal*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionSignal*) buildPartial {
	CLSSessionSignal* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) mergeFrom:(CLSSessionSignal*) other {
	if (other == [CLSSessionSignal defaultInstance]) {
		return self;
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasCode) {
		[self setCode:other.code];
	}
	if (other.hasAddress) {
		[self setAddress:other.address];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setName:[input readString]];
				break;
			}
			case 18: {
				[self setCode:[input readString]];
				break;
			}
			case 24: {
				[self setAddress:[input readUInt64]];
				break;
			}
		}
	}
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasCode {
	return result.hasCode;
}
- (NSString*) code {
	return result.code;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) setCode:(NSString*) value {
	result.hasCode = YES;
	result.code = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) clearCode {
	result.hasCode = NO;
	result.code = @"";
	return self;
}
- (BOOL) hasAddress {
	return result.hasAddress;
}
- (uint64_t) address {
	return result.address;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) setAddress:(uint64_t) value {
	result.hasAddress = YES;
	result.address = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Signal_Builder*) clearAddress {
	result.hasAddress = NO;
	result.address = 0L;
	return self;
}
@end

@interface CLSSessionBinaryImage ()
@property uint64_t baseAddress;
@property uint64_t size;
@property (retain) NSString* name;
@property CLSIncident_Architecture arch;
@property (retain) NSString* clsId;
@end

@implementation CLSSessionBinaryImage

- (BOOL) hasBaseAddress {
	return !!hasBaseAddress_;
}
- (void) setHasBaseAddress:(BOOL) value_ {
	hasBaseAddress_ = !!value_;
}
@synthesize baseAddress;
- (BOOL) hasSize {
	return !!hasSize_;
}
- (void) setHasSize:(BOOL) value_ {
	hasSize_ = !!value_;
}
@synthesize size;
- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasArch {
	return !!hasArch_;
}
- (void) setHasArch:(BOOL) value_ {
	hasArch_ = !!value_;
}
@synthesize arch;
- (BOOL) hasClsId {
	return !!hasClsId_;
}
- (void) setHasClsId:(BOOL) value_ {
	hasClsId_ = !!value_;
}
@synthesize clsId;
- (void) dealloc {
	self.name = nil;
	self.clsId = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.baseAddress = 0L;
		self.size = 0L;
		self.name = @"";
		self.arch = CLSIncident_ArchitectureX8632;
		self.clsId = @"";
	}
	return self;
}
static CLSSessionBinaryImage* defaultCLSIncident_Session_Event_Application_Execution_BinaryImageInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionBinaryImage class]) {
		defaultCLSIncident_Session_Event_Application_Execution_BinaryImageInstance = [[CLSSessionBinaryImage alloc] init];
	}
}
+ (CLSSessionBinaryImage*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_BinaryImageInstance;
}
- (CLSSessionBinaryImage*) defaultInstance {
	return defaultCLSIncident_Session_Event_Application_Execution_BinaryImageInstance;
}
- (BOOL) isInitialized {
	if (!self.hasBaseAddress) {
		return NO;
	}
	if (!self.hasSize) {
		return NO;
	}
	if (!self.hasName) {
		return NO;
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasBaseAddress) {
		[output writeUInt64:1 value:self.baseAddress];
	}
	if (self.hasSize) {
		[output writeUInt64:2 value:self.size];
	}
	if (self.hasName) {
		[output writeString:3 value:self.name];
	}
	if (self.hasArch) {
		[output writeEnum:5 value:self.arch];
	}
	if (self.hasClsId) {
		[output writeString:6 value:self.clsId];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasBaseAddress) {
		size_ += computeUInt64Size(1, self.baseAddress);
	}
	if (self.hasSize) {
		size_ += computeUInt64Size(2, self.size);
	}
	if (self.hasName) {
		size_ += computeStringSize(3, self.name);
	}
	if (self.hasArch) {
		size_ += computeEnumSize(5, self.arch);
	}
	if (self.hasClsId) {
		size_ += computeStringSize(6, self.clsId);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionBinaryImage*) parseFromData:(NSData*) data {
	return (CLSSessionBinaryImage*)[[[CLSSessionBinaryImage builder] mergeFromData:data] build];
}
+ (CLSSessionBinaryImage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionBinaryImage*)[[[CLSSessionBinaryImage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionBinaryImage*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionBinaryImage*)[[[CLSSessionBinaryImage builder] mergeFromInputStream:input] build];
}
+ (CLSSessionBinaryImage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionBinaryImage*)[[[CLSSessionBinaryImage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionBinaryImage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionBinaryImage*)[[[CLSSessionBinaryImage builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionBinaryImage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionBinaryImage*)[[[CLSSessionBinaryImage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) builder {
	return [[[CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) builderWithPrototype:(CLSSessionBinaryImage*) prototype {
	return [[CLSSessionBinaryImage builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) builder {
	return [CLSSessionBinaryImage builder];
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) toBuilder {
	return [CLSSessionBinaryImage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasBaseAddress) {
		[output appendFormat:@"%@%@: %@\n", indent, @"baseAddress", [NSNumber numberWithLongLong:self.baseAddress]];
	}
	if (self.hasSize) {
		[output appendFormat:@"%@%@: %@\n", indent, @"size", [NSNumber numberWithLongLong:self.size]];
	}
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasArch) {
		[output appendFormat:@"%@%@: %d\n", indent, @"arch", self.arch];
	}
	if (self.hasClsId) {
		[output appendFormat:@"%@%@: %@\n", indent, @"clsId", self.clsId];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionBinaryImage class]]) {
		return NO;
	}
	CLSSessionBinaryImage *otherMessage = other;
	return
	self.hasBaseAddress == otherMessage.hasBaseAddress &&
	(!self.hasBaseAddress || self.baseAddress == otherMessage.baseAddress) &&
	self.hasSize == otherMessage.hasSize &&
	(!self.hasSize || self.size == otherMessage.size) &&
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasArch == otherMessage.hasArch &&
	(!self.hasArch || self.arch == otherMessage.arch) &&
	self.hasClsId == otherMessage.hasClsId &&
	(!self.hasClsId || [self.clsId isEqual:otherMessage.clsId]) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasBaseAddress) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.baseAddress] hash];
	}
	if (self.hasSize) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.size] hash];
	}
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasArch) {
		hashCode = hashCode * 31 + self.arch;
	}
	if (self.hasClsId) {
		hashCode = hashCode * 31 + [self.clsId hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder()
@property (retain) CLSSessionBinaryImage* result;
@end

@implementation CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionBinaryImage alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clear {
	self.result = [[[CLSSessionBinaryImage alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clone {
	return [CLSSessionBinaryImage builderWithPrototype:result];
}
- (CLSSessionBinaryImage*) defaultInstance {
	return [CLSSessionBinaryImage defaultInstance];
}
- (CLSSessionBinaryImage*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionBinaryImage*) buildPartial {
	CLSSessionBinaryImage* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) mergeFrom:(CLSSessionBinaryImage*) other {
	if (other == [CLSSessionBinaryImage defaultInstance]) {
		return self;
	}
	if (other.hasBaseAddress) {
		[self setBaseAddress:other.baseAddress];
	}
	if (other.hasSize) {
		[self setSize:other.size];
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasArch) {
		[self setArch:other.arch];
	}
	if (other.hasClsId) {
		[self setClsId:other.clsId];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 8: {
				[self setBaseAddress:[input readUInt64]];
				break;
			}
			case 16: {
				[self setSize:[input readUInt64]];
				break;
			}
			case 26: {
				[self setName:[input readString]];
				break;
			}
			case 40: {
				int32_t value = [input readEnum];
				if (CLSIncident_ArchitectureIsValidValue(value)) {
					[self setArch:value];
				} else {
					[unknownFields mergeVarintField:5 value:value];
				}
				break;
			}
			case 50: {
				[self setClsId:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasBaseAddress {
	return result.hasBaseAddress;
}
- (uint64_t) baseAddress {
	return result.baseAddress;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) setBaseAddress:(uint64_t) value {
	result.hasBaseAddress = YES;
	result.baseAddress = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clearBaseAddress {
	result.hasBaseAddress = NO;
	result.baseAddress = 0L;
	return self;
}
- (BOOL) hasSize {
	return result.hasSize;
}
- (uint64_t) size {
	return result.size;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) setSize:(uint64_t) value {
	result.hasSize = YES;
	result.size = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clearSize {
	result.hasSize = NO;
	result.size = 0L;
	return self;
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasArch {
	return result.hasArch;
}
- (CLSIncident_Architecture) arch {
	return result.arch;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) setArch:(CLSIncident_Architecture) value {
	result.hasArch = YES;
	result.arch = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clearArch {
	result.hasArch = NO;
	result.arch = CLSIncident_ArchitectureX8632;
	return self;
}
- (BOOL) hasClsId {
	return result.hasClsId;
}
- (NSString*) clsId {
	return result.clsId;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) setClsId:(NSString*) value {
	result.hasClsId = YES;
	result.clsId = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder*) clearClsId {
	result.hasClsId = NO;
	result.clsId = @"";
	return self;
}
@end

@interface CLSIncident_Session_Event_Application_Execution_Builder()
@property (retain) CLSSessionExecution* result;
@end

@implementation CLSIncident_Session_Event_Application_Execution_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionExecution alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) clear {
	self.result = [[[CLSSessionExecution alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) clone {
	return [CLSSessionExecution builderWithPrototype:result];
}
- (CLSSessionExecution*) defaultInstance {
	return [CLSSessionExecution defaultInstance];
}
- (CLSSessionExecution*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionExecution*) buildPartial {
	CLSSessionExecution* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) mergeFrom:(CLSSessionExecution*) other {
	if (other == [CLSSessionExecution defaultInstance]) {
		return self;
	}
	if (other.threadsArray.count > 0) {
		if (result.threadsArray == nil) {
			result.threadsArray = [[other.threadsArray copyWithZone:[other.threadsArray zone]] autorelease];
		} else {
			[result.threadsArray appendArray:other.threadsArray];
		}
	}
	if (other.hasException) {
		[self mergeException:other.exception];
	}
	if (other.hasSignal) {
		[self mergeSignal:other.signal];
	}
	if (other.binariesArray.count > 0) {
		if (result.binariesArray == nil) {
			result.binariesArray = [[other.binariesArray copyWithZone:[other.binariesArray zone]] autorelease];
		} else {
			[result.binariesArray appendArray:other.binariesArray];
		}
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				CLSIncident_Session_Event_Application_Execution_Thread_Builder* subBuilder = [CLSSessionThread builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addThreads:[subBuilder buildPartial]];
				break;
			}
			case 18: {
				CLSIncident_Session_Event_Application_Execution_Exception_Builder* subBuilder = [CLSSessionException builder];
				if (self.hasException) {
					[subBuilder mergeFrom:self.exception];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setException:[subBuilder buildPartial]];
				break;
			}
			case 26: {
				CLSIncident_Session_Event_Application_Execution_Signal_Builder* subBuilder = [CLSSessionSignal builder];
				if (self.hasSignal) {
					[subBuilder mergeFrom:self.signal];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setSignal:[subBuilder buildPartial]];
				break;
			}
			case 34: {
				CLSIncident_Session_Event_Application_Execution_BinaryImage_Builder* subBuilder = [CLSSessionBinaryImage builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addBinaries:[subBuilder buildPartial]];
				break;
			}
		}
	}
}
- (PBAppendableArray *)threads {
	return result.threadsArray;
}
- (CLSSessionThread*)threadsAtIndex:(NSUInteger)index {
	return [result threadsAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)addThreads:(CLSSessionThread*)value {
	if (result.threadsArray == nil) {
		result.threadsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.threadsArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)setThreadsArray:(NSArray *)array {
	result.threadsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)setThreadsValues:(const CLSSessionThread* *)values count:(NSUInteger)count {
	result.threadsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)clearThreads {
	result.threadsArray = nil;
	return self;
}
- (BOOL) hasException {
	return result.hasException;
}
- (CLSSessionException*) exception {
	return result.exception;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) setException:(CLSSessionException*) value {
	result.hasException = YES;
	result.exception = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) setExceptionBuilder:(CLSIncident_Session_Event_Application_Execution_Exception_Builder*) builderForValue {
	return [self setException:[builderForValue build]];
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) mergeException:(CLSSessionException*) value {
	if (result.hasException &&
		result.exception != [CLSSessionException defaultInstance]) {
		result.exception =
		[[[CLSSessionException builderWithPrototype:result.exception] mergeFrom:value] buildPartial];
	} else {
		result.exception = value;
	}
	result.hasException = YES;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) clearException {
	result.hasException = NO;
	result.exception = [CLSSessionException defaultInstance];
	return self;
}
- (BOOL) hasSignal {
	return result.hasSignal;
}
- (CLSSessionSignal*) signal {
	return result.signal;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) setSignal:(CLSSessionSignal*) value {
	result.hasSignal = YES;
	result.signal = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) setSignalBuilder:(CLSIncident_Session_Event_Application_Execution_Signal_Builder*) builderForValue {
	return [self setSignal:[builderForValue build]];
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) mergeSignal:(CLSSessionSignal*) value {
	if (result.hasSignal &&
		result.signal != [CLSSessionSignal defaultInstance]) {
		result.signal =
		[[[CLSSessionSignal builderWithPrototype:result.signal] mergeFrom:value] buildPartial];
	} else {
		result.signal = value;
	}
	result.hasSignal = YES;
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder*) clearSignal {
	result.hasSignal = NO;
	result.signal = [CLSSessionSignal defaultInstance];
	return self;
}
- (PBAppendableArray *)binaries {
	return result.binariesArray;
}
- (CLSSessionBinaryImage*)binariesAtIndex:(NSUInteger)index {
	return [result binariesAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)addBinaries:(CLSSessionBinaryImage*)value {
	if (result.binariesArray == nil) {
		result.binariesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.binariesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)setBinariesArray:(NSArray *)array {
	result.binariesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)setBinariesValues:(const CLSSessionBinaryImage* *)values count:(NSUInteger)count {
	result.binariesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Execution_Builder *)clearBinaries {
	result.binariesArray = nil;
	return self;
}
@end

@interface CLSIncident_Session_Event_Application_Builder()
@property (retain) CLSSessionEventApplication* result;
@end

@implementation CLSIncident_Session_Event_Application_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionEventApplication alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Application_Builder*) clear {
	self.result = [[[CLSSessionEventApplication alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Application_Builder*) clone {
	return [CLSSessionEventApplication builderWithPrototype:result];
}
- (CLSSessionEventApplication*) defaultInstance {
	return [CLSSessionEventApplication defaultInstance];
}
- (CLSSessionEventApplication*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionEventApplication*) buildPartial {
	CLSSessionEventApplication* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Application_Builder*) mergeFrom:(CLSSessionEventApplication*) other {
	if (other == [CLSSessionEventApplication defaultInstance]) {
		return self;
	}
	if (other.hasExecution) {
		[self mergeExecution:other.execution];
	}
	if (other.customAttributesArray.count > 0) {
		if (result.customAttributesArray == nil) {
			result.customAttributesArray = [[other.customAttributesArray copyWithZone:[other.customAttributesArray zone]] autorelease];
		} else {
			[result.customAttributesArray appendArray:other.customAttributesArray];
		}
	}
	if (other.hasBackground) {
		[self setBackground:other.background];
	}
	if (other.hasUiOrientation) {
		[self setUiOrientation:other.uiOrientation];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Application_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Application_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				CLSIncident_Session_Event_Application_Execution_Builder* subBuilder = [CLSSessionExecution builder];
				if (self.hasExecution) {
					[subBuilder mergeFrom:self.execution];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setExecution:[subBuilder buildPartial]];
				break;
			}
			case 18: {
				CLSIncident_CustomAttribute_Builder* subBuilder = [CLSSessionCustomAttribute builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addCustomAttributes:[subBuilder buildPartial]];
				break;
			}
			case 24: {
				[self setBackground:[input readBool]];
				break;
			}
			case 32: {
				[self setUiOrientation:[input readUInt32]];
				break;
			}
		}
	}
}
- (BOOL) hasExecution {
	return result.hasExecution;
}
- (CLSSessionExecution*) execution {
	return result.execution;
}
- (CLSIncident_Session_Event_Application_Builder*) setExecution:(CLSSessionExecution*) value {
	result.hasExecution = YES;
	result.execution = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Builder*) setExecutionBuilder:(CLSIncident_Session_Event_Application_Execution_Builder*) builderForValue {
	return [self setExecution:[builderForValue build]];
}
- (CLSIncident_Session_Event_Application_Builder*) mergeExecution:(CLSSessionExecution*) value {
	if (result.hasExecution &&
		result.execution != [CLSSessionExecution defaultInstance]) {
		result.execution =
		[[[CLSSessionExecution builderWithPrototype:result.execution] mergeFrom:value] buildPartial];
	} else {
		result.execution = value;
	}
	result.hasExecution = YES;
	return self;
}
- (CLSIncident_Session_Event_Application_Builder*) clearExecution {
	result.hasExecution = NO;
	result.execution = [CLSSessionExecution defaultInstance];
	return self;
}
- (PBAppendableArray *)customAttributes {
	return result.customAttributesArray;
}
- (CLSSessionCustomAttribute*)customAttributesAtIndex:(NSUInteger)index {
	return [result customAttributesAtIndex:index];
}
- (CLSIncident_Session_Event_Application_Builder *)addCustomAttributes:(CLSSessionCustomAttribute*)value {
	if (result.customAttributesArray == nil) {
		result.customAttributesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.customAttributesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_Application_Builder *)setCustomAttributesArray:(NSArray *)array {
	result.customAttributesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Builder *)setCustomAttributesValues:(const CLSSessionCustomAttribute* *)values count:(NSUInteger)count {
	result.customAttributesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_Application_Builder *)clearCustomAttributes {
	result.customAttributesArray = nil;
	return self;
}
- (BOOL) hasBackground {
	return result.hasBackground;
}
- (BOOL) background {
	return result.background;
}
- (CLSIncident_Session_Event_Application_Builder*) setBackground:(BOOL) value {
	result.hasBackground = YES;
	result.background = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Builder*) clearBackground {
	result.hasBackground = NO;
	result.background = NO;
	return self;
}
- (BOOL) hasUiOrientation {
	return result.hasUiOrientation;
}
- (uint32_t) uiOrientation {
	return result.uiOrientation;
}
- (CLSIncident_Session_Event_Application_Builder*) setUiOrientation:(uint32_t) value {
	result.hasUiOrientation = YES;
	result.uiOrientation = value;
	return self;
}
- (CLSIncident_Session_Event_Application_Builder*) clearUiOrientation {
	result.hasUiOrientation = NO;
	result.uiOrientation = 0;
	return self;
}
@end

@interface CLSSessionEventOperatingSystem ()
@property (retain) PBAppendableArray * networkInterfacesArray;
@property (retain) PBAppendableArray * processesArray;
@end

@implementation CLSSessionEventOperatingSystem

@synthesize networkInterfacesArray;
@dynamic networkInterfaces;
@synthesize processesArray;
@dynamic processes;
- (void) dealloc {
	self.networkInterfacesArray = nil;
	self.processesArray = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
	}
	return self;
}
static CLSSessionEventOperatingSystem* defaultCLSIncident_Session_Event_OperatingSystemInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionEventOperatingSystem class]) {
		defaultCLSIncident_Session_Event_OperatingSystemInstance = [[CLSSessionEventOperatingSystem alloc] init];
	}
}
+ (CLSSessionEventOperatingSystem*) defaultInstance {
	return defaultCLSIncident_Session_Event_OperatingSystemInstance;
}
- (CLSSessionEventOperatingSystem*) defaultInstance {
	return defaultCLSIncident_Session_Event_OperatingSystemInstance;
}
- (PBArray *)networkInterfaces {
	return networkInterfacesArray;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)networkInterfacesAtIndex:(NSUInteger)index {
	return [networkInterfacesArray objectAtIndex:index];
}
- (PBArray *)processes {
	return processesArray;
}
- (CLSSessionProcess*)processesAtIndex:(NSUInteger)index {
	return [processesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	for (CLSSessionProcess* element in self.processes) {
		if (!element.isInitialized) {
			return NO;
		}
	}
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface *element in self.networkInterfacesArray) {
		[output writeMessage:1 value:element];
	}
	for (CLSSessionProcess *element in self.processesArray) {
		[output writeMessage:2 value:element];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface *element in self.networkInterfacesArray) {
		size_ += computeMessageSize(1, element);
	}
	for (CLSSessionProcess *element in self.processesArray) {
		size_ += computeMessageSize(2, element);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionEventOperatingSystem*) parseFromData:(NSData*) data {
	return (CLSSessionEventOperatingSystem*)[[[CLSSessionEventOperatingSystem builder] mergeFromData:data] build];
}
+ (CLSSessionEventOperatingSystem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventOperatingSystem*)[[[CLSSessionEventOperatingSystem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEventOperatingSystem*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionEventOperatingSystem*)[[[CLSSessionEventOperatingSystem builder] mergeFromInputStream:input] build];
}
+ (CLSSessionEventOperatingSystem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventOperatingSystem*)[[[CLSSessionEventOperatingSystem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEventOperatingSystem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionEventOperatingSystem*)[[[CLSSessionEventOperatingSystem builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionEventOperatingSystem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventOperatingSystem*)[[[CLSSessionEventOperatingSystem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_Builder*) builder {
	return [[[CLSIncident_Session_Event_OperatingSystem_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_OperatingSystem_Builder*) builderWithPrototype:(CLSSessionEventOperatingSystem*) prototype {
	return [[CLSSessionEventOperatingSystem builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) builder {
	return [CLSSessionEventOperatingSystem builder];
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) toBuilder {
	return [CLSSessionEventOperatingSystem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface* element in self.networkInterfacesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"networkInterfaces"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	for (CLSSessionProcess* element in self.processesArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"processes"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionEventOperatingSystem class]]) {
		return NO;
	}
	CLSSessionEventOperatingSystem *otherMessage = other;
	return
	[self.networkInterfacesArray isEqualToArray:otherMessage.networkInterfacesArray] &&
	[self.processesArray isEqualToArray:otherMessage.processesArray] &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface* element in self.networkInterfacesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	for (CLSSessionProcess* element in self.processesArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_OperatingSystem_NetworkInterface ()
@property (retain) NSString* name;
@property (retain) NSString* description;
@property (retain) NSString* type;
@property (retain) NSData* address;
@property (retain) PBAppendableArray * connectionsArray;
@end

@implementation CLSIncident_Session_Event_OperatingSystem_NetworkInterface

- (BOOL) hasName {
	return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
	hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasDescription {
	return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value_ {
	hasDescription_ = !!value_;
}
@synthesize description;
- (BOOL) hasType {
	return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
	hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasAddress {
	return !!hasAddress_;
}
- (void) setHasAddress:(BOOL) value_ {
	hasAddress_ = !!value_;
}
@synthesize address;
@synthesize connectionsArray;
@dynamic connections;
- (void) dealloc {
	self.name = nil;
	self.description = nil;
	self.type = nil;
	self.address = nil;
	self.connectionsArray = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.name = @"";
		self.description = @"";
		self.type = @"";
		self.address = [NSData data];
	}
	return self;
}
static CLSIncident_Session_Event_OperatingSystem_NetworkInterface* defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterfaceInstance = nil;
+ (void) initialize {
	if (self == [CLSIncident_Session_Event_OperatingSystem_NetworkInterface class]) {
		defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterfaceInstance = [[CLSIncident_Session_Event_OperatingSystem_NetworkInterface alloc] init];
	}
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) defaultInstance {
	return defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterfaceInstance;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) defaultInstance {
	return defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterfaceInstance;
}
- (PBArray *)connections {
	return connectionsArray;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)connectionsAtIndex:(NSUInteger)index {
	return [connectionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasName) {
		[output writeString:1 value:self.name];
	}
	if (self.hasDescription) {
		[output writeString:2 value:self.description];
	}
	if (self.hasType) {
		[output writeString:3 value:self.type];
	}
	if (self.hasAddress) {
		[output writeData:4 value:self.address];
	}
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection *element in self.connectionsArray) {
		[output writeMessage:5 value:element];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasName) {
		size_ += computeStringSize(1, self.name);
	}
	if (self.hasDescription) {
		size_ += computeStringSize(2, self.description);
	}
	if (self.hasType) {
		size_ += computeStringSize(3, self.type);
	}
	if (self.hasAddress) {
		size_ += computeDataSize(4, self.address);
	}
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection *element in self.connectionsArray) {
		size_ += computeMessageSize(5, element);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) parseFromData:(NSData*) data {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFromData:data] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) parseFromInputStream:(NSInputStream*) input {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFromInputStream:input] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFromCodedInputStream:input] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) builder {
	return [[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) builderWithPrototype:(CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) prototype {
	return [[CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) builder {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) toBuilder {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasName) {
		[output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
	}
	if (self.hasDescription) {
		[output appendFormat:@"%@%@: %@\n", indent, @"description", self.description];
	}
	if (self.hasType) {
		[output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
	}
	if (self.hasAddress) {
		[output appendFormat:@"%@%@: %@\n", indent, @"address", self.address];
	}
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection* element in self.connectionsArray) {
		[output appendFormat:@"%@%@ {\n", indent, @"connections"];
		[element writeDescriptionTo:output
						 withIndent:[NSString stringWithFormat:@"%@  ", indent]];
		[output appendFormat:@"%@}\n", indent];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSIncident_Session_Event_OperatingSystem_NetworkInterface class]]) {
		return NO;
	}
	CLSIncident_Session_Event_OperatingSystem_NetworkInterface *otherMessage = other;
	return
	self.hasName == otherMessage.hasName &&
	(!self.hasName || [self.name isEqual:otherMessage.name]) &&
	self.hasDescription == otherMessage.hasDescription &&
	(!self.hasDescription || [self.description isEqual:otherMessage.description]) &&
	self.hasType == otherMessage.hasType &&
	(!self.hasType || [self.type isEqual:otherMessage.type]) &&
	self.hasAddress == otherMessage.hasAddress &&
	(!self.hasAddress || [self.address isEqual:otherMessage.address]) &&
	[self.connectionsArray isEqualToArray:otherMessage.connectionsArray] &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasName) {
		hashCode = hashCode * 31 + [self.name hash];
	}
	if (self.hasDescription) {
		hashCode = hashCode * 31 + [self.description hash];
	}
	if (self.hasType) {
		hashCode = hashCode * 31 + [self.type hash];
	}
	if (self.hasAddress) {
		hashCode = hashCode * 31 + [self.address hash];
	}
	for (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection* element in self.connectionsArray) {
		hashCode = hashCode * 31 + [element hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection ()
@property uint32_t port;
@property uint64_t bytesSent;
@property uint64_t bytesReceived;
@property uint64_t openedAt;
@property uint64_t closedAt;
@property uint32_t status;
@end

@implementation CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection

- (BOOL) hasPort {
	return !!hasPort_;
}
- (void) setHasPort:(BOOL) value_ {
	hasPort_ = !!value_;
}
@synthesize port;
- (BOOL) hasBytesSent {
	return !!hasBytesSent_;
}
- (void) setHasBytesSent:(BOOL) value_ {
	hasBytesSent_ = !!value_;
}
@synthesize bytesSent;
- (BOOL) hasBytesReceived {
	return !!hasBytesReceived_;
}
- (void) setHasBytesReceived:(BOOL) value_ {
	hasBytesReceived_ = !!value_;
}
@synthesize bytesReceived;
- (BOOL) hasOpenedAt {
	return !!hasOpenedAt_;
}
- (void) setHasOpenedAt:(BOOL) value_ {
	hasOpenedAt_ = !!value_;
}
@synthesize openedAt;
- (BOOL) hasClosedAt {
	return !!hasClosedAt_;
}
- (void) setHasClosedAt:(BOOL) value_ {
	hasClosedAt_ = !!value_;
}
@synthesize closedAt;
- (BOOL) hasStatus {
	return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
	hasStatus_ = !!value_;
}
@synthesize status;
- (void) dealloc {
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.port = 0;
		self.bytesSent = 0L;
		self.bytesReceived = 0L;
		self.openedAt = 0L;
		self.closedAt = 0L;
		self.status = 0;
	}
	return self;
}
static CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection* defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterface_ConnectionInstance = nil;
+ (void) initialize {
	if (self == [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection class]) {
		defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterface_ConnectionInstance = [[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection alloc] init];
	}
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) defaultInstance {
	return defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterface_ConnectionInstance;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) defaultInstance {
	return defaultCLSIncident_Session_Event_OperatingSystem_NetworkInterface_ConnectionInstance;
}
- (BOOL) isInitialized {
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasPort) {
		[output writeUInt32:1 value:self.port];
	}
	if (self.hasBytesSent) {
		[output writeUInt64:2 value:self.bytesSent];
	}
	if (self.hasBytesReceived) {
		[output writeUInt64:3 value:self.bytesReceived];
	}
	if (self.hasOpenedAt) {
		[output writeUInt64:4 value:self.openedAt];
	}
	if (self.hasClosedAt) {
		[output writeUInt64:5 value:self.closedAt];
	}
	if (self.hasStatus) {
		[output writeUInt32:6 value:self.status];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasPort) {
		size_ += computeUInt32Size(1, self.port);
	}
	if (self.hasBytesSent) {
		size_ += computeUInt64Size(2, self.bytesSent);
	}
	if (self.hasBytesReceived) {
		size_ += computeUInt64Size(3, self.bytesReceived);
	}
	if (self.hasOpenedAt) {
		size_ += computeUInt64Size(4, self.openedAt);
	}
	if (self.hasClosedAt) {
		size_ += computeUInt64Size(5, self.closedAt);
	}
	if (self.hasStatus) {
		size_ += computeUInt32Size(6, self.status);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) parseFromData:(NSData*) data {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFromData:data] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) parseFromInputStream:(NSInputStream*) input {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFromInputStream:input] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFromCodedInputStream:input] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)[[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) builder {
	return [[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) builderWithPrototype:(CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) prototype {
	return [[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) builder {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) toBuilder {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasPort) {
		[output appendFormat:@"%@%@: %@\n", indent, @"port", [NSNumber numberWithInt:self.port]];
	}
	if (self.hasBytesSent) {
		[output appendFormat:@"%@%@: %@\n", indent, @"bytesSent", [NSNumber numberWithLongLong:self.bytesSent]];
	}
	if (self.hasBytesReceived) {
		[output appendFormat:@"%@%@: %@\n", indent, @"bytesReceived", [NSNumber numberWithLongLong:self.bytesReceived]];
	}
	if (self.hasOpenedAt) {
		[output appendFormat:@"%@%@: %@\n", indent, @"openedAt", [NSNumber numberWithLongLong:self.openedAt]];
	}
	if (self.hasClosedAt) {
		[output appendFormat:@"%@%@: %@\n", indent, @"closedAt", [NSNumber numberWithLongLong:self.closedAt]];
	}
	if (self.hasStatus) {
		[output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInt:self.status]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection class]]) {
		return NO;
	}
	CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection *otherMessage = other;
	return
	self.hasPort == otherMessage.hasPort &&
	(!self.hasPort || self.port == otherMessage.port) &&
	self.hasBytesSent == otherMessage.hasBytesSent &&
	(!self.hasBytesSent || self.bytesSent == otherMessage.bytesSent) &&
	self.hasBytesReceived == otherMessage.hasBytesReceived &&
	(!self.hasBytesReceived || self.bytesReceived == otherMessage.bytesReceived) &&
	self.hasOpenedAt == otherMessage.hasOpenedAt &&
	(!self.hasOpenedAt || self.openedAt == otherMessage.openedAt) &&
	self.hasClosedAt == otherMessage.hasClosedAt &&
	(!self.hasClosedAt || self.closedAt == otherMessage.closedAt) &&
	self.hasStatus == otherMessage.hasStatus &&
	(!self.hasStatus || self.status == otherMessage.status) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasPort) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.port] hash];
	}
	if (self.hasBytesSent) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.bytesSent] hash];
	}
	if (self.hasBytesReceived) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.bytesReceived] hash];
	}
	if (self.hasOpenedAt) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.openedAt] hash];
	}
	if (self.hasClosedAt) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.closedAt] hash];
	}
	if (self.hasStatus) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.status] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder()
@property (retain) CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection* result;
@end

@implementation CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clear {
	self.result = [[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clone {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builderWithPrototype:result];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) defaultInstance {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection defaultInstance];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) buildPartial {
	CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) mergeFrom:(CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*) other {
	if (other == [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection defaultInstance]) {
		return self;
	}
	if (other.hasPort) {
		[self setPort:other.port];
	}
	if (other.hasBytesSent) {
		[self setBytesSent:other.bytesSent];
	}
	if (other.hasBytesReceived) {
		[self setBytesReceived:other.bytesReceived];
	}
	if (other.hasOpenedAt) {
		[self setOpenedAt:other.openedAt];
	}
	if (other.hasClosedAt) {
		[self setClosedAt:other.closedAt];
	}
	if (other.hasStatus) {
		[self setStatus:other.status];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 8: {
				[self setPort:[input readUInt32]];
				break;
			}
			case 16: {
				[self setBytesSent:[input readUInt64]];
				break;
			}
			case 24: {
				[self setBytesReceived:[input readUInt64]];
				break;
			}
			case 32: {
				[self setOpenedAt:[input readUInt64]];
				break;
			}
			case 40: {
				[self setClosedAt:[input readUInt64]];
				break;
			}
			case 48: {
				[self setStatus:[input readUInt32]];
				break;
			}
		}
	}
}
- (BOOL) hasPort {
	return result.hasPort;
}
- (uint32_t) port {
	return result.port;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) setPort:(uint32_t) value {
	result.hasPort = YES;
	result.port = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clearPort {
	result.hasPort = NO;
	result.port = 0;
	return self;
}
- (BOOL) hasBytesSent {
	return result.hasBytesSent;
}
- (uint64_t) bytesSent {
	return result.bytesSent;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) setBytesSent:(uint64_t) value {
	result.hasBytesSent = YES;
	result.bytesSent = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clearBytesSent {
	result.hasBytesSent = NO;
	result.bytesSent = 0L;
	return self;
}
- (BOOL) hasBytesReceived {
	return result.hasBytesReceived;
}
- (uint64_t) bytesReceived {
	return result.bytesReceived;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) setBytesReceived:(uint64_t) value {
	result.hasBytesReceived = YES;
	result.bytesReceived = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clearBytesReceived {
	result.hasBytesReceived = NO;
	result.bytesReceived = 0L;
	return self;
}
- (BOOL) hasOpenedAt {
	return result.hasOpenedAt;
}
- (uint64_t) openedAt {
	return result.openedAt;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) setOpenedAt:(uint64_t) value {
	result.hasOpenedAt = YES;
	result.openedAt = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clearOpenedAt {
	result.hasOpenedAt = NO;
	result.openedAt = 0L;
	return self;
}
- (BOOL) hasClosedAt {
	return result.hasClosedAt;
}
- (uint64_t) closedAt {
	return result.closedAt;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) setClosedAt:(uint64_t) value {
	result.hasClosedAt = YES;
	result.closedAt = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clearClosedAt {
	result.hasClosedAt = NO;
	result.closedAt = 0L;
	return self;
}
- (BOOL) hasStatus {
	return result.hasStatus;
}
- (uint32_t) status {
	return result.status;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) setStatus:(uint32_t) value {
	result.hasStatus = YES;
	result.status = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder*) clearStatus {
	result.hasStatus = NO;
	result.status = 0;
	return self;
}
@end

@interface CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder()
@property (retain) CLSIncident_Session_Event_OperatingSystem_NetworkInterface* result;
@end

@implementation CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) clear {
	self.result = [[[CLSIncident_Session_Event_OperatingSystem_NetworkInterface alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) clone {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface builderWithPrototype:result];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) defaultInstance {
	return [CLSIncident_Session_Event_OperatingSystem_NetworkInterface defaultInstance];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) buildPartial {
	CLSIncident_Session_Event_OperatingSystem_NetworkInterface* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) mergeFrom:(CLSIncident_Session_Event_OperatingSystem_NetworkInterface*) other {
	if (other == [CLSIncident_Session_Event_OperatingSystem_NetworkInterface defaultInstance]) {
		return self;
	}
	if (other.hasName) {
		[self setName:other.name];
	}
	if (other.hasDescription) {
		[self setDescription:other.description];
	}
	if (other.hasType) {
		[self setType:other.type];
	}
	if (other.hasAddress) {
		[self setAddress:other.address];
	}
	if (other.connectionsArray.count > 0) {
		if (result.connectionsArray == nil) {
			result.connectionsArray = [[other.connectionsArray copyWithZone:[other.connectionsArray zone]] autorelease];
		} else {
			[result.connectionsArray appendArray:other.connectionsArray];
		}
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setName:[input readString]];
				break;
			}
			case 18: {
				[self setDescription:[input readString]];
				break;
			}
			case 26: {
				[self setType:[input readString]];
				break;
			}
			case 34: {
				[self setAddress:[input readData]];
				break;
			}
			case 42: {
				CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection_Builder* subBuilder = [CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addConnections:[subBuilder buildPartial]];
				break;
			}
		}
	}
}
- (BOOL) hasName {
	return result.hasName;
}
- (NSString*) name {
	return result.name;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) setName:(NSString*) value {
	result.hasName = YES;
	result.name = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) clearName {
	result.hasName = NO;
	result.name = @"";
	return self;
}
- (BOOL) hasDescription {
	return result.hasDescription;
}
- (NSString*) description {
	return result.description;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) setDescription:(NSString*) value {
	result.hasDescription = YES;
	result.description = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) clearDescription {
	result.hasDescription = NO;
	result.description = @"";
	return self;
}
- (BOOL) hasType {
	return result.hasType;
}
- (NSString*) type {
	return result.type;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) setType:(NSString*) value {
	result.hasType = YES;
	result.type = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) clearType {
	result.hasType = NO;
	result.type = @"";
	return self;
}
- (BOOL) hasAddress {
	return result.hasAddress;
}
- (NSData*) address {
	return result.address;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) setAddress:(NSData*) value {
	result.hasAddress = YES;
	result.address = value;
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder*) clearAddress {
	result.hasAddress = NO;
	result.address = [NSData data];
	return self;
}
- (PBAppendableArray *)connections {
	return result.connectionsArray;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)connectionsAtIndex:(NSUInteger)index {
	return [result connectionsAtIndex:index];
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder *)addConnections:(CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection*)value {
	if (result.connectionsArray == nil) {
		result.connectionsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.connectionsArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder *)setConnectionsArray:(NSArray *)array {
	result.connectionsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder *)setConnectionsValues:(const CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Connection* *)values count:(NSUInteger)count {
	result.connectionsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder *)clearConnections {
	result.connectionsArray = nil;
	return self;
}
@end

@interface CLSIncident_Session_Event_OperatingSystem_Builder()
@property (retain) CLSSessionEventOperatingSystem* result;
@end

@implementation CLSIncident_Session_Event_OperatingSystem_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionEventOperatingSystem alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) clear {
	self.result = [[[CLSSessionEventOperatingSystem alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) clone {
	return [CLSSessionEventOperatingSystem builderWithPrototype:result];
}
- (CLSSessionEventOperatingSystem*) defaultInstance {
	return [CLSSessionEventOperatingSystem defaultInstance];
}
- (CLSSessionEventOperatingSystem*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionEventOperatingSystem*) buildPartial {
	CLSSessionEventOperatingSystem* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) mergeFrom:(CLSSessionEventOperatingSystem*) other {
	if (other == [CLSSessionEventOperatingSystem defaultInstance]) {
		return self;
	}
	if (other.networkInterfacesArray.count > 0) {
		if (result.networkInterfacesArray == nil) {
			result.networkInterfacesArray = [[other.networkInterfacesArray copyWithZone:[other.networkInterfacesArray zone]] autorelease];
		} else {
			[result.networkInterfacesArray appendArray:other.networkInterfacesArray];
		}
	}
	if (other.processesArray.count > 0) {
		if (result.processesArray == nil) {
			result.processesArray = [[other.processesArray copyWithZone:[other.processesArray zone]] autorelease];
		} else {
			[result.processesArray appendArray:other.processesArray];
		}
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_OperatingSystem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				CLSIncident_Session_Event_OperatingSystem_NetworkInterface_Builder* subBuilder = [CLSIncident_Session_Event_OperatingSystem_NetworkInterface builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addNetworkInterfaces:[subBuilder buildPartial]];
				break;
			}
			case 18: {
				CLSIncident_Session_Process_Builder* subBuilder = [CLSSessionProcess builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addProcesses:[subBuilder buildPartial]];
				break;
			}
		}
	}
}
- (PBAppendableArray *)networkInterfaces {
	return result.networkInterfacesArray;
}
- (CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)networkInterfacesAtIndex:(NSUInteger)index {
	return [result networkInterfacesAtIndex:index];
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)addNetworkInterfaces:(CLSIncident_Session_Event_OperatingSystem_NetworkInterface*)value {
	if (result.networkInterfacesArray == nil) {
		result.networkInterfacesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.networkInterfacesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)setNetworkInterfacesArray:(NSArray *)array {
	result.networkInterfacesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)setNetworkInterfacesValues:(const CLSIncident_Session_Event_OperatingSystem_NetworkInterface* *)values count:(NSUInteger)count {
	result.networkInterfacesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)clearNetworkInterfaces {
	result.networkInterfacesArray = nil;
	return self;
}
- (PBAppendableArray *)processes {
	return result.processesArray;
}
- (CLSSessionProcess*)processesAtIndex:(NSUInteger)index {
	return [result processesAtIndex:index];
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)addProcesses:(CLSSessionProcess*)value {
	if (result.processesArray == nil) {
		result.processesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.processesArray addObject:value];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)setProcessesArray:(NSArray *)array {
	result.processesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)setProcessesValues:(const CLSSessionProcess* *)values count:(NSUInteger)count {
	result.processesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Event_OperatingSystem_Builder *)clearProcesses {
	result.processesArray = nil;
	return self;
}
@end

@interface CLSSessionEventDevice ()
@property Float32 batteryLevel;
@property int32_t batteryVelocity;
@property BOOL proximityOn;
@property uint32_t orientation;
@property uint64_t ramUsed;
@property uint64_t diskUsed;
@end

@implementation CLSSessionEventDevice

- (BOOL) hasBatteryLevel {
	return !!hasBatteryLevel_;
}
- (void) setHasBatteryLevel:(BOOL) value_ {
	hasBatteryLevel_ = !!value_;
}
@synthesize batteryLevel;
- (BOOL) hasBatteryVelocity {
	return !!hasBatteryVelocity_;
}
- (void) setHasBatteryVelocity:(BOOL) value_ {
	hasBatteryVelocity_ = !!value_;
}
@synthesize batteryVelocity;
- (BOOL) hasProximityOn {
	return !!hasProximityOn_;
}
- (void) setHasProximityOn:(BOOL) value_ {
	hasProximityOn_ = !!value_;
}
- (BOOL) proximityOn {
	return !!proximityOn_;
}
- (void) setProximityOn:(BOOL) value_ {
	proximityOn_ = !!value_;
}
- (BOOL) hasOrientation {
	return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value_ {
	hasOrientation_ = !!value_;
}
@synthesize orientation;
- (BOOL) hasRamUsed {
	return !!hasRamUsed_;
}
- (void) setHasRamUsed:(BOOL) value_ {
	hasRamUsed_ = !!value_;
}
@synthesize ramUsed;
- (BOOL) hasDiskUsed {
	return !!hasDiskUsed_;
}
- (void) setHasDiskUsed:(BOOL) value_ {
	hasDiskUsed_ = !!value_;
}
@synthesize diskUsed;
- (void) dealloc {
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.batteryLevel = 0;
		self.batteryVelocity = 0;
		self.proximityOn = NO;
		self.orientation = 0;
		self.ramUsed = 0L;
		self.diskUsed = 0L;
	}
	return self;
}
static CLSSessionEventDevice* defaultCLSIncident_Session_Event_DeviceInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionEventDevice class]) {
		defaultCLSIncident_Session_Event_DeviceInstance = [[CLSSessionEventDevice alloc] init];
	}
}
+ (CLSSessionEventDevice*) defaultInstance {
	return defaultCLSIncident_Session_Event_DeviceInstance;
}
- (CLSSessionEventDevice*) defaultInstance {
	return defaultCLSIncident_Session_Event_DeviceInstance;
}
- (BOOL) isInitialized {
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasBatteryLevel) {
		[output writeFloat:1 value:self.batteryLevel];
	}
	if (self.hasBatteryVelocity) {
		[output writeSInt32:2 value:self.batteryVelocity];
	}
	if (self.hasProximityOn) {
		[output writeBool:3 value:self.proximityOn];
	}
	if (self.hasOrientation) {
		[output writeUInt32:4 value:self.orientation];
	}
	if (self.hasRamUsed) {
		[output writeUInt64:5 value:self.ramUsed];
	}
	if (self.hasDiskUsed) {
		[output writeUInt64:6 value:self.diskUsed];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasBatteryLevel) {
		size_ += computeFloatSize(1, self.batteryLevel);
	}
	if (self.hasBatteryVelocity) {
		size_ += computeSInt32Size(2, self.batteryVelocity);
	}
	if (self.hasProximityOn) {
		size_ += computeBoolSize(3, self.proximityOn);
	}
	if (self.hasOrientation) {
		size_ += computeUInt32Size(4, self.orientation);
	}
	if (self.hasRamUsed) {
		size_ += computeUInt64Size(5, self.ramUsed);
	}
	if (self.hasDiskUsed) {
		size_ += computeUInt64Size(6, self.diskUsed);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionEventDevice*) parseFromData:(NSData*) data {
	return (CLSSessionEventDevice*)[[[CLSSessionEventDevice builder] mergeFromData:data] build];
}
+ (CLSSessionEventDevice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventDevice*)[[[CLSSessionEventDevice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEventDevice*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionEventDevice*)[[[CLSSessionEventDevice builder] mergeFromInputStream:input] build];
}
+ (CLSSessionEventDevice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventDevice*)[[[CLSSessionEventDevice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionEventDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionEventDevice*)[[[CLSSessionEventDevice builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionEventDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionEventDevice*)[[[CLSSessionEventDevice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Device_Builder*) builder {
	return [[[CLSIncident_Session_Event_Device_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Device_Builder*) builderWithPrototype:(CLSSessionEventDevice*) prototype {
	return [[CLSSessionEventDevice builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Device_Builder*) builder {
	return [CLSSessionEventDevice builder];
}
- (CLSIncident_Session_Event_Device_Builder*) toBuilder {
	return [CLSSessionEventDevice builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasBatteryLevel) {
		[output appendFormat:@"%@%@: %@\n", indent, @"batteryLevel", [NSNumber numberWithFloat:self.batteryLevel]];
	}
	if (self.hasBatteryVelocity) {
		[output appendFormat:@"%@%@: %@\n", indent, @"batteryVelocity", [NSNumber numberWithInt:self.batteryVelocity]];
	}
	if (self.hasProximityOn) {
		[output appendFormat:@"%@%@: %@\n", indent, @"proximityOn", [NSNumber numberWithBool:self.proximityOn]];
	}
	if (self.hasOrientation) {
		[output appendFormat:@"%@%@: %@\n", indent, @"orientation", [NSNumber numberWithInt:self.orientation]];
	}
	if (self.hasRamUsed) {
		[output appendFormat:@"%@%@: %@\n", indent, @"ramUsed", [NSNumber numberWithLongLong:self.ramUsed]];
	}
	if (self.hasDiskUsed) {
		[output appendFormat:@"%@%@: %@\n", indent, @"diskUsed", [NSNumber numberWithLongLong:self.diskUsed]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionEventDevice class]]) {
		return NO;
	}
	CLSSessionEventDevice *otherMessage = other;
	return
	self.hasBatteryLevel == otherMessage.hasBatteryLevel &&
	(!self.hasBatteryLevel || self.batteryLevel == otherMessage.batteryLevel) &&
	self.hasBatteryVelocity == otherMessage.hasBatteryVelocity &&
	(!self.hasBatteryVelocity || self.batteryVelocity == otherMessage.batteryVelocity) &&
	self.hasProximityOn == otherMessage.hasProximityOn &&
	(!self.hasProximityOn || self.proximityOn == otherMessage.proximityOn) &&
	self.hasOrientation == otherMessage.hasOrientation &&
	(!self.hasOrientation || self.orientation == otherMessage.orientation) &&
	self.hasRamUsed == otherMessage.hasRamUsed &&
	(!self.hasRamUsed || self.ramUsed == otherMessage.ramUsed) &&
	self.hasDiskUsed == otherMessage.hasDiskUsed &&
	(!self.hasDiskUsed || self.diskUsed == otherMessage.diskUsed) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasBatteryLevel) {
		hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.batteryLevel] hash];
	}
	if (self.hasBatteryVelocity) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.batteryVelocity] hash];
	}
	if (self.hasProximityOn) {
		hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.proximityOn] hash];
	}
	if (self.hasOrientation) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.orientation] hash];
	}
	if (self.hasRamUsed) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.ramUsed] hash];
	}
	if (self.hasDiskUsed) {
		hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.diskUsed] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_Device_Builder()
@property (retain) CLSSessionEventDevice* result;
@end

@implementation CLSIncident_Session_Event_Device_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionEventDevice alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Device_Builder*) clear {
	self.result = [[[CLSSessionEventDevice alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clone {
	return [CLSSessionEventDevice builderWithPrototype:result];
}
- (CLSSessionEventDevice*) defaultInstance {
	return [CLSSessionEventDevice defaultInstance];
}
- (CLSSessionEventDevice*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionEventDevice*) buildPartial {
	CLSSessionEventDevice* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Device_Builder*) mergeFrom:(CLSSessionEventDevice*) other {
	if (other == [CLSSessionEventDevice defaultInstance]) {
		return self;
	}
	if (other.hasBatteryLevel) {
		[self setBatteryLevel:other.batteryLevel];
	}
	if (other.hasBatteryVelocity) {
		[self setBatteryVelocity:other.batteryVelocity];
	}
	if (other.hasProximityOn) {
		[self setProximityOn:other.proximityOn];
	}
	if (other.hasOrientation) {
		[self setOrientation:other.orientation];
	}
	if (other.hasRamUsed) {
		[self setRamUsed:other.ramUsed];
	}
	if (other.hasDiskUsed) {
		[self setDiskUsed:other.diskUsed];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Device_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 13: {
				[self setBatteryLevel:[input readFloat]];
				break;
			}
			case 16: {
				[self setBatteryVelocity:[input readSInt32]];
				break;
			}
			case 24: {
				[self setProximityOn:[input readBool]];
				break;
			}
			case 32: {
				[self setOrientation:[input readUInt32]];
				break;
			}
			case 40: {
				[self setRamUsed:[input readUInt64]];
				break;
			}
			case 48: {
				[self setDiskUsed:[input readUInt64]];
				break;
			}
		}
	}
}
- (BOOL) hasBatteryLevel {
	return result.hasBatteryLevel;
}
- (Float32) batteryLevel {
	return result.batteryLevel;
}
- (CLSIncident_Session_Event_Device_Builder*) setBatteryLevel:(Float32) value {
	result.hasBatteryLevel = YES;
	result.batteryLevel = value;
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clearBatteryLevel {
	result.hasBatteryLevel = NO;
	result.batteryLevel = 0;
	return self;
}
- (BOOL) hasBatteryVelocity {
	return result.hasBatteryVelocity;
}

- (int32_t) batteryVelocity {
	return result.batteryVelocity;
}
- (CLSIncident_Session_Event_Device_Builder*) setBatteryVelocity:(int32_t) value {
	result.hasBatteryVelocity = YES;
	result.batteryVelocity = value;
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clearBatteryVelocity {
	result.hasBatteryVelocity = NO;
	result.batteryVelocity = 0;
	return self;
}
- (BOOL) hasProximityOn {
	return result.hasProximityOn;
}
- (BOOL) proximityOn {
	return result.proximityOn;
}
- (CLSIncident_Session_Event_Device_Builder*) setProximityOn:(BOOL) value {
	result.hasProximityOn = YES;
	result.proximityOn = value;
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clearProximityOn {
	result.hasProximityOn = NO;
	result.proximityOn = NO;
	return self;
}
- (BOOL) hasOrientation {
	return result.hasOrientation;
}
- (uint32_t) orientation {
	return result.orientation;
}
- (CLSIncident_Session_Event_Device_Builder*) setOrientation:(uint32_t) value {
	result.hasOrientation = YES;
	result.orientation = value;
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clearOrientation {
	result.hasOrientation = NO;
	result.orientation = 0;
	return self;
}
- (BOOL) hasRamUsed {
	return result.hasRamUsed;
}
- (uint64_t) ramUsed {
	return result.ramUsed;
}
- (CLSIncident_Session_Event_Device_Builder*) setRamUsed:(uint64_t) value {
	result.hasRamUsed = YES;
	result.ramUsed = value;
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clearRamUsed {
	result.hasRamUsed = NO;
	result.ramUsed = 0L;
	return self;
}
- (BOOL) hasDiskUsed {
	return result.hasDiskUsed;
}
- (uint64_t) diskUsed {
	return result.diskUsed;
}
- (CLSIncident_Session_Event_Device_Builder*) setDiskUsed:(uint64_t) value {
	result.hasDiskUsed = YES;
	result.diskUsed = value;
	return self;
}
- (CLSIncident_Session_Event_Device_Builder*) clearDiskUsed {
	result.hasDiskUsed = NO;
	result.diskUsed = 0L;
	return self;
}
@end

@interface CLSSessionLog ()
@property (retain) NSString* content;
@property uint32_t lastOffset;
@end

@implementation CLSSessionLog

- (BOOL) hasContent {
	return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
	hasContent_ = !!value_;
}
@synthesize content;
- (BOOL) hasLastOffset {
	return !!hasLastOffset_;
}
- (void) setHasLastOffset:(BOOL) value_ {
	hasLastOffset_ = !!value_;
}
@synthesize lastOffset;
- (void) dealloc {
	self.content = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.content = @"";
		self.lastOffset = 0;
	}
	return self;
}
static CLSSessionLog* defaultCLSIncident_Session_Event_LogInstance = nil;
+ (void) initialize {
	if (self == [CLSSessionLog class]) {
		defaultCLSIncident_Session_Event_LogInstance = [[CLSSessionLog alloc] init];
	}
}
+ (CLSSessionLog*) defaultInstance {
	return defaultCLSIncident_Session_Event_LogInstance;
}
- (CLSSessionLog*) defaultInstance {
	return defaultCLSIncident_Session_Event_LogInstance;
}
- (BOOL) isInitialized {
	return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
	if (self.hasContent) {
		[output writeString:1 value:self.content];
	}
	if (self.hasLastOffset) {
		[output writeUInt32:2 value:self.lastOffset];
	}
	[self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
	int32_t size_ = memoizedSerializedSize;
	if (size_ != -1) {
		return size_;
	}
	
	size_ = 0;
	if (self.hasContent) {
		size_ += computeStringSize(1, self.content);
	}
	if (self.hasLastOffset) {
		size_ += computeUInt32Size(2, self.lastOffset);
	}
	size_ += self.unknownFields.serializedSize;
	memoizedSerializedSize = size_;
	return size_;
}
+ (CLSSessionLog*) parseFromData:(NSData*) data {
	return (CLSSessionLog*)[[[CLSSessionLog builder] mergeFromData:data] build];
}
+ (CLSSessionLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionLog*)[[[CLSSessionLog builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionLog*) parseFromInputStream:(NSInputStream*) input {
	return (CLSSessionLog*)[[[CLSSessionLog builder] mergeFromInputStream:input] build];
}
+ (CLSSessionLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionLog*)[[[CLSSessionLog builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSSessionLog*) parseFromCodedInputStream:(PBCodedInputStream*) input {
	return (CLSSessionLog*)[[[CLSSessionLog builder] mergeFromCodedInputStream:input] build];
}
+ (CLSSessionLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	return (CLSSessionLog*)[[[CLSSessionLog builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLSIncident_Session_Event_Log_Builder*) builder {
	return [[[CLSIncident_Session_Event_Log_Builder alloc] init] autorelease];
}
+ (CLSIncident_Session_Event_Log_Builder*) builderWithPrototype:(CLSSessionLog*) prototype {
	return [[CLSSessionLog builder] mergeFrom:prototype];
}
- (CLSIncident_Session_Event_Log_Builder*) builder {
	return [CLSSessionLog builder];
}
- (CLSIncident_Session_Event_Log_Builder*) toBuilder {
	return [CLSSessionLog builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
	if (self.hasContent) {
		[output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
	}
	if (self.hasLastOffset) {
		[output appendFormat:@"%@%@: %@\n", indent, @"lastOffset", [NSNumber numberWithInt:self.lastOffset]];
	}
	[self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
	if (other == self) {
		return YES;
	}
	if (![other isKindOfClass:[CLSSessionLog class]]) {
		return NO;
	}
	CLSSessionLog *otherMessage = other;
	return
	self.hasContent == otherMessage.hasContent &&
	(!self.hasContent || [self.content isEqual:otherMessage.content]) &&
	self.hasLastOffset == otherMessage.hasLastOffset &&
	(!self.hasLastOffset || self.lastOffset == otherMessage.lastOffset) &&
	(self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
	NSUInteger hashCode = 7;
	if (self.hasContent) {
		hashCode = hashCode * 31 + [self.content hash];
	}
	if (self.hasLastOffset) {
		hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.lastOffset] hash];
	}
	hashCode = hashCode * 31 + [self.unknownFields hash];
	return hashCode;
}
@end

@interface CLSIncident_Session_Event_Log_Builder()
@property (retain) CLSSessionLog* result;
@end

@implementation CLSIncident_Session_Event_Log_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionLog alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Log_Builder*) clear {
	self.result = [[[CLSSessionLog alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Log_Builder*) clone {
	return [CLSSessionLog builderWithPrototype:result];
}
- (CLSSessionLog*) defaultInstance {
	return [CLSSessionLog defaultInstance];
}
- (CLSSessionLog*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionLog*) buildPartial {
	CLSSessionLog* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Log_Builder*) mergeFrom:(CLSSessionLog*) other {
	if (other == [CLSSessionLog defaultInstance]) {
		return self;
	}
	if (other.hasContent) {
		[self setContent:other.content];
	}
	if (other.hasLastOffset) {
		[self setLastOffset:other.lastOffset];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Log_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Log_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setContent:[input readString]];
				break;
			}
			case 16: {
				[self setLastOffset:[input readUInt32]];
				break;
			}
		}
	}
}
- (BOOL) hasContent {
	return result.hasContent;
}
- (NSString*) content {
	return result.content;
}
- (CLSIncident_Session_Event_Log_Builder*) setContent:(NSString*) value {
	result.hasContent = YES;
	result.content = value;
	return self;
}
- (CLSIncident_Session_Event_Log_Builder*) clearContent {
	result.hasContent = NO;
	result.content = @"";
	return self;
}
- (BOOL) hasLastOffset {
	return result.hasLastOffset;
}
- (uint32_t) lastOffset {
	return result.lastOffset;
}
- (CLSIncident_Session_Event_Log_Builder*) setLastOffset:(uint32_t) value {
	result.hasLastOffset = YES;
	result.lastOffset = value;
	return self;
}
- (CLSIncident_Session_Event_Log_Builder*) clearLastOffset {
	result.hasLastOffset = NO;
	result.lastOffset = 0;
	return self;
}
@end

@interface CLSIncident_Session_Event_Builder()
@property (retain) CLSSessionEvent* result;
@end

@implementation CLSIncident_Session_Event_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSessionEvent alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Event_Builder*) clear {
	self.result = [[[CLSSessionEvent alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Event_Builder*) clone {
	return [CLSSessionEvent builderWithPrototype:result];
}
- (CLSSessionEvent*) defaultInstance {
	return [CLSSessionEvent defaultInstance];
}
- (CLSSessionEvent*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSessionEvent*) buildPartial {
	CLSSessionEvent* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Event_Builder*) mergeFrom:(CLSSessionEvent*) other {
	if (other == [CLSSessionEvent defaultInstance]) {
		return self;
	}
	if (other.hasTimestamp) {
		[self setTimestamp:other.timestamp];
	}
	if (other.hasType) {
		[self setType:other.type];
	}
	if (other.hasAggregationId) {
		[self setAggregationId:other.aggregationId];
	}
	if (other.hasApp) {
		[self mergeApp:other.app];
	}
	if (other.hasOs) {
		[self mergeOs:other.os];
	}
	if (other.hasDevice) {
		[self mergeDevice:other.device];
	}
	if (other.hasLog) {
		[self mergeLog:other.log];
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Event_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Event_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 8: {
				[self setTimestamp:[input readUInt64]];
				break;
			}
			case 18: {
				[self setType:[input readString]];
				break;
			}
			case 26: {
				CLSIncident_Session_Event_Application_Builder* subBuilder = [CLSSessionEventApplication builder];
				if (self.hasApp) {
					[subBuilder mergeFrom:self.app];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setApp:[subBuilder buildPartial]];
				break;
			}
			case 34: {
				CLSIncident_Session_Event_OperatingSystem_Builder* subBuilder = [CLSSessionEventOperatingSystem builder];
				if (self.hasOs) {
					[subBuilder mergeFrom:self.os];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setOs:[subBuilder buildPartial]];
				break;
			}
			case 42: {
				CLSIncident_Session_Event_Device_Builder* subBuilder = [CLSSessionEventDevice builder];
				if (self.hasDevice) {
					[subBuilder mergeFrom:self.device];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setDevice:[subBuilder buildPartial]];
				break;
			}
			case 50: {
				CLSIncident_Session_Event_Log_Builder* subBuilder = [CLSSessionLog builder];
				if (self.hasLog) {
					[subBuilder mergeFrom:self.log];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setLog:[subBuilder buildPartial]];
				break;
			}
			case 58: {
				[self setAggregationId:[input readString]];
				break;
			}
		}
	}
}
- (BOOL) hasTimestamp {
	return result.hasTimestamp;
}
- (uint64_t) timestamp {
	return result.timestamp;
}
- (CLSIncident_Session_Event_Builder*) setTimestamp:(uint64_t) value {
	result.hasTimestamp = YES;
	result.timestamp = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearTimestamp {
	result.hasTimestamp = NO;
	result.timestamp = 0L;
	return self;
}
- (BOOL) hasType {
	return result.hasType;
}
- (NSString*) type {
	return result.type;
}
- (CLSIncident_Session_Event_Builder*) setType:(NSString*) value {
	result.hasType = YES;
	result.type = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearType {
	result.hasType = NO;
	result.type = @"";
	return self;
}
- (BOOL) hasAggregationId {
	return result.hasAggregationId;
}
- (NSString*) aggregationId {
	return result.aggregationId;
}
- (CLSIncident_Session_Event_Builder*) setAggregationId:(NSString*) value {
	result.hasAggregationId = YES;
	result.aggregationId = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearAggregationId {
	result.hasAggregationId = NO;
	result.aggregationId = @"";
	return self;
}
- (BOOL) hasApp {
	return result.hasApp;
}
- (CLSSessionEventApplication*) app {
	return result.app;
}
- (CLSIncident_Session_Event_Builder*) setApp:(CLSSessionEventApplication*) value {
	result.hasApp = YES;
	result.app = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) setAppBuilder:(CLSIncident_Session_Event_Application_Builder*) builderForValue {
	return [self setApp:[builderForValue build]];
}
- (CLSIncident_Session_Event_Builder*) mergeApp:(CLSSessionEventApplication*) value {
	if (result.hasApp &&
		result.app != [CLSSessionEventApplication defaultInstance]) {
		result.app =
		[[[CLSSessionEventApplication builderWithPrototype:result.app] mergeFrom:value] buildPartial];
	} else {
		result.app = value;
	}
	result.hasApp = YES;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearApp {
	result.hasApp = NO;
	result.app = [CLSSessionEventApplication defaultInstance];
	return self;
}
- (BOOL) hasOs {
	return result.hasOs;
}
- (CLSSessionEventOperatingSystem*) os {
	return result.os;
}
- (CLSIncident_Session_Event_Builder*) setOs:(CLSSessionEventOperatingSystem*) value {
	result.hasOs = YES;
	result.os = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) setOsBuilder:(CLSIncident_Session_Event_OperatingSystem_Builder*) builderForValue {
	return [self setOs:[builderForValue build]];
}
- (CLSIncident_Session_Event_Builder*) mergeOs:(CLSSessionEventOperatingSystem*) value {
	if (result.hasOs &&
		result.os != [CLSSessionEventOperatingSystem defaultInstance]) {
		result.os =
		[[[CLSSessionEventOperatingSystem builderWithPrototype:result.os] mergeFrom:value] buildPartial];
	} else {
		result.os = value;
	}
	result.hasOs = YES;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearOs {
	result.hasOs = NO;
	result.os = [CLSSessionEventOperatingSystem defaultInstance];
	return self;
}
- (BOOL) hasDevice {
	return result.hasDevice;
}
- (CLSSessionEventDevice*) device {
	return result.device;
}
- (CLSIncident_Session_Event_Builder*) setDevice:(CLSSessionEventDevice*) value {
	result.hasDevice = YES;
	result.device = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) setDeviceBuilder:(CLSIncident_Session_Event_Device_Builder*) builderForValue {
	return [self setDevice:[builderForValue build]];
}
- (CLSIncident_Session_Event_Builder*) mergeDevice:(CLSSessionEventDevice*) value {
	if (result.hasDevice &&
		result.device != [CLSSessionEventDevice defaultInstance]) {
		result.device =
		[[[CLSSessionEventDevice builderWithPrototype:result.device] mergeFrom:value] buildPartial];
	} else {
		result.device = value;
	}
	result.hasDevice = YES;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearDevice {
	result.hasDevice = NO;
	result.device = [CLSSessionEventDevice defaultInstance];
	return self;
}
- (BOOL) hasLog {
	return result.hasLog;
}
- (CLSSessionLog*) log {
	return result.log;
}
- (CLSIncident_Session_Event_Builder*) setLog:(CLSSessionLog*) value {
	result.hasLog = YES;
	result.log = value;
	return self;
}
- (CLSIncident_Session_Event_Builder*) setLogBuilder:(CLSIncident_Session_Event_Log_Builder*) builderForValue {
	return [self setLog:[builderForValue build]];
}
- (CLSIncident_Session_Event_Builder*) mergeLog:(CLSSessionLog*) value {
	if (result.hasLog &&
		result.log != [CLSSessionLog defaultInstance]) {
		result.log =
		[[[CLSSessionLog builderWithPrototype:result.log] mergeFrom:value] buildPartial];
	} else {
		result.log = value;
	}
	result.hasLog = YES;
	return self;
}
- (CLSIncident_Session_Event_Builder*) clearLog {
	result.hasLog = NO;
	result.log = [CLSSessionLog defaultInstance];
	return self;
}
@end

@interface CLSIncident_Session_Builder()
@property (retain) CLSSession* result;
@end

@implementation CLSIncident_Session_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSSession alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Session_Builder*) clear {
	self.result = [[[CLSSession alloc] init] autorelease];
	return self;
}
- (CLSIncident_Session_Builder*) clone {
	return [CLSSession builderWithPrototype:result];
}
- (CLSSession*) defaultInstance {
	return [CLSSession defaultInstance];
}
- (CLSSession*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSSession*) buildPartial {
	CLSSession* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Session_Builder*) mergeFrom:(CLSSession*) other {
	if (other == [CLSSession defaultInstance]) {
		return self;
	}
	if (other.hasGenerator) {
		[self setGenerator:other.generator];
	}
	if (other.hasIdentifier) {
		[self setIdentifier:other.identifier];
	}
	if (other.hasStartedAt) {
		[self setStartedAt:other.startedAt];
	}
	if (other.hasEndedAt) {
		[self setEndedAt:other.endedAt];
	}
	if (other.hasCrashed) {
		[self setCrashed:other.crashed];
	}
	if (other.hasAnalyzer) {
		[self setAnalyzer:other.analyzer];
	}
	if (other.hasGeneratorType) {
		[self setGeneratorType:other.generatorType];
	}
	if (other.hasFrameDecoder) {
		[self setFrameDecoder:other.frameDecoder];
	}
	if (other.hasUser) {
		[self mergeUser:other.user];
	}
	if (other.hasApp) {
		[self mergeApp:other.app];
	}
	if (other.hasOs) {
		[self mergeOs:other.os];
	}
	if (other.hasDevice) {
		[self mergeDevice:other.device];
	}
	if (other.eventsArray.count > 0) {
		if (result.eventsArray == nil) {
			result.eventsArray = [[other.eventsArray copyWithZone:[other.eventsArray zone]] autorelease];
		} else {
			[result.eventsArray appendArray:other.eventsArray];
		}
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Session_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Session_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
			case 10: {
				[self setGenerator:[input readString]];
				break;
			}
			case 18: {
				[self setIdentifier:[input readData]];
				break;
			}
			case 24: {
				[self setStartedAt:[input readUInt64]];
				break;
			}
			case 32: {
				[self setEndedAt:[input readUInt64]];
				break;
			}
			case 40: {
				[self setCrashed:[input readBool]];
				break;
			}
			case 50: {
				CLSIncident_Session_User_Builder* subBuilder = [CLSSessionUser builder];
				if (self.hasUser) {
					[subBuilder mergeFrom:self.user];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setUser:[subBuilder buildPartial]];
				break;
			}
			case 58: {
				CLSIncident_Session_Application_Builder* subBuilder = [CLSSessionApplication builder];
				if (self.hasApp) {
					[subBuilder mergeFrom:self.app];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setApp:[subBuilder buildPartial]];
				break;
			}
			case 66: {
				CLSIncident_Session_OperatingSystem_Builder* subBuilder = [CLSSessionOperatingSystem builder];
				if (self.hasOs) {
					[subBuilder mergeFrom:self.os];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setOs:[subBuilder buildPartial]];
				break;
			}
			case 74: {
				CLSIncident_Session_Device_Builder* subBuilder = [CLSSessionDevice builder];
				if (self.hasDevice) {
					[subBuilder mergeFrom:self.device];
				}
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self setDevice:[subBuilder buildPartial]];
				break;
			}
			case 82: {
				CLSIncident_Session_Event_Builder* subBuilder = [CLSSessionEvent builder];
				[input readMessage:subBuilder extensionRegistry:extensionRegistry];
				[self addEvents:[subBuilder buildPartial]];
				break;
			}
			case 88: {
				[self setAnalyzer:[input readUInt32]];
				break;
			}
			case 96: {
				int32_t value = [input readEnum];
				if (CLSIncident_GeneratorTypeIsValidValue(value)) {
					[self setGeneratorType:value];
				} else {
					[unknownFields mergeVarintField:12 value:value];
				}
				break;
			}
			case 104: {
				int32_t value = [input readEnum];
				if (CLSIncident_FrameDecoderIsValidValue(value)) {
					[self setFrameDecoder:value];
				} else {
					[unknownFields mergeVarintField:13 value:value];
				}
				break;
			}
		}
	}
}
- (BOOL) hasGenerator {
	return result.hasGenerator;
}
- (NSString*) generator {
	return result.generator;
}
- (CLSIncident_Session_Builder*) setGenerator:(NSString*) value {
	result.hasGenerator = YES;
	result.generator = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearGenerator {
	result.hasGenerator = NO;
	result.generator = @"";
	return self;
}
- (BOOL) hasIdentifier {
	return result.hasIdentifier;
}
- (NSData*) identifier {
	return result.identifier;
}
- (CLSIncident_Session_Builder*) setIdentifier:(NSData*) value {
	result.hasIdentifier = YES;
	result.identifier = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearIdentifier {
	result.hasIdentifier = NO;
	result.identifier = [NSData data];
	return self;
}
- (BOOL) hasStartedAt {
	return result.hasStartedAt;
}
- (uint64_t) startedAt {
	return result.startedAt;
}
- (CLSIncident_Session_Builder*) setStartedAt:(uint64_t) value {
	result.hasStartedAt = YES;
	result.startedAt = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearStartedAt {
	result.hasStartedAt = NO;
	result.startedAt = 0L;
	return self;
}
- (BOOL) hasEndedAt {
	return result.hasEndedAt;
}
- (uint64_t) endedAt {
	return result.endedAt;
}
- (CLSIncident_Session_Builder*) setEndedAt:(uint64_t) value {
	result.hasEndedAt = YES;
	result.endedAt = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearEndedAt {
	result.hasEndedAt = NO;
	result.endedAt = 0L;
	return self;
}
- (BOOL) hasCrashed {
	return result.hasCrashed;
}
- (BOOL) crashed {
	return result.crashed;
}
- (CLSIncident_Session_Builder*) setCrashed:(BOOL) value {
	result.hasCrashed = YES;
	result.crashed = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearCrashed {
	result.hasCrashed = NO;
	result.crashed = NO;
	return self;
}
- (BOOL) hasAnalyzer {
	return result.hasAnalyzer;
}
- (uint32_t) analyzer {
	return result.analyzer;
}
- (CLSIncident_Session_Builder*) setAnalyzer:(uint32_t) value {
	result.hasAnalyzer = YES;
	result.analyzer = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearAnalyzer {
	result.hasAnalyzer = NO;
	result.analyzer = 0;
	return self;
}
- (BOOL) hasGeneratorType {
	return result.hasGeneratorType;
}
- (CLSIncident_GeneratorType) generatorType {
	return result.generatorType;
}
- (CLSIncident_Session_Builder*) setGeneratorType:(CLSIncident_GeneratorType) value {
	result.hasGeneratorType = YES;
	result.generatorType = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearGeneratorType {
	result.hasGeneratorType = NO;
	result.generatorType = CLSIncident_GeneratorTypeIosSdk;
	return self;
}
- (BOOL) hasFrameDecoder {
	return result.hasFrameDecoder;
}
- (CLSIncident_FrameDecoder) frameDecoder {
	return result.frameDecoder;
}
- (CLSIncident_Session_Builder*) setFrameDecoder:(CLSIncident_FrameDecoder) value {
	result.hasFrameDecoder = YES;
	result.frameDecoder = value;
	return self;
}
- (CLSIncident_Session_Builder*) clearFrameDecoder {
	result.hasFrameDecoder = NO;
	result.frameDecoder = CLSIncident_FrameDecoderSymbolication;
	return self;
}
- (BOOL) hasUser {
	return result.hasUser;
}
- (CLSSessionUser*) user {
	return result.user;
}
- (CLSIncident_Session_Builder*) setUser:(CLSSessionUser*) value {
	result.hasUser = YES;
	result.user = value;
	return self;
}
- (CLSIncident_Session_Builder*) setUserBuilder:(CLSIncident_Session_User_Builder*) builderForValue {
	return [self setUser:[builderForValue build]];
}
- (CLSIncident_Session_Builder*) mergeUser:(CLSSessionUser*) value {
	if (result.hasUser &&
		result.user != [CLSSessionUser defaultInstance]) {
		result.user =
		[[[CLSSessionUser builderWithPrototype:result.user] mergeFrom:value] buildPartial];
	} else {
		result.user = value;
	}
	result.hasUser = YES;
	return self;
}
- (CLSIncident_Session_Builder*) clearUser {
	result.hasUser = NO;
	result.user = [CLSSessionUser defaultInstance];
	return self;
}
- (BOOL) hasApp {
	return result.hasApp;
}
- (CLSSessionApplication*) app {
	return result.app;
}
- (CLSIncident_Session_Builder*) setApp:(CLSSessionApplication*) value {
	result.hasApp = YES;
	result.app = value;
	return self;
}
- (CLSIncident_Session_Builder*) setAppBuilder:(CLSIncident_Session_Application_Builder*) builderForValue {
	return [self setApp:[builderForValue build]];
}
- (CLSIncident_Session_Builder*) mergeApp:(CLSSessionApplication*) value {
	if (result.hasApp &&
		result.app != [CLSSessionApplication defaultInstance]) {
		result.app =
		[[[CLSSessionApplication builderWithPrototype:result.app] mergeFrom:value] buildPartial];
	} else {
		result.app = value;
	}
	result.hasApp = YES;
	return self;
}
- (CLSIncident_Session_Builder*) clearApp {
	result.hasApp = NO;
	result.app = [CLSSessionApplication defaultInstance];
	return self;
}
- (BOOL) hasOs {
	return result.hasOs;
}
- (CLSSessionOperatingSystem*) os {
	return result.os;
}
- (CLSIncident_Session_Builder*) setOs:(CLSSessionOperatingSystem*) value {
	result.hasOs = YES;
	result.os = value;
	return self;
}
- (CLSIncident_Session_Builder*) setOsBuilder:(CLSIncident_Session_OperatingSystem_Builder*) builderForValue {
	return [self setOs:[builderForValue build]];
}
- (CLSIncident_Session_Builder*) mergeOs:(CLSSessionOperatingSystem*) value {
	if (result.hasOs &&
		result.os != [CLSSessionOperatingSystem defaultInstance]) {
		result.os =
		[[[CLSSessionOperatingSystem builderWithPrototype:result.os] mergeFrom:value] buildPartial];
	} else {
		result.os = value;
	}
	result.hasOs = YES;
	return self;
}
- (CLSIncident_Session_Builder*) clearOs {
	result.hasOs = NO;
	result.os = [CLSSessionOperatingSystem defaultInstance];
	return self;
}
- (BOOL) hasDevice {
	return result.hasDevice;
}
- (CLSSessionDevice*) device {
	return result.device;
}
- (CLSIncident_Session_Builder*) setDevice:(CLSSessionDevice*) value {
	result.hasDevice = YES;
	result.device = value;
	return self;
}
- (CLSIncident_Session_Builder*) setDeviceBuilder:(CLSIncident_Session_Device_Builder*) builderForValue {
	return [self setDevice:[builderForValue build]];
}
- (CLSIncident_Session_Builder*) mergeDevice:(CLSSessionDevice*) value {
	if (result.hasDevice &&
		result.device != [CLSSessionDevice defaultInstance]) {
		result.device =
		[[[CLSSessionDevice builderWithPrototype:result.device] mergeFrom:value] buildPartial];
	} else {
		result.device = value;
	}
	result.hasDevice = YES;
	return self;
}
- (CLSIncident_Session_Builder*) clearDevice {
	result.hasDevice = NO;
	result.device = [CLSSessionDevice defaultInstance];
	return self;
}
- (PBAppendableArray *)events {
	return result.eventsArray;
}
- (CLSSessionEvent*)eventsAtIndex:(NSUInteger)index {
	return [result eventsAtIndex:index];
}
- (CLSIncident_Session_Builder *)addEvents:(CLSSessionEvent*)value {
	if (result.eventsArray == nil) {
		result.eventsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
	}
	[result.eventsArray addObject:value];
	return self;
}
- (CLSIncident_Session_Builder *)setEventsArray:(NSArray *)array {
	result.eventsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Builder *)setEventsValues:(const CLSSessionEvent* *)values count:(NSUInteger)count {
	result.eventsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
	return self;
}
- (CLSIncident_Session_Builder *)clearEvents {
	result.eventsArray = nil;
	return self;
}
@end

@interface CLSIncident_Builder()
@property (retain) CLSIncident* result;
@end

@implementation CLSIncident_Builder
@synthesize result;
- (void) dealloc {
	self.result = nil;
	[super dealloc];
}
- (id) init {
	if ((self = [super init])) {
		self.result = [[[CLSIncident alloc] init] autorelease];
	}
	return self;
}
- (PBGeneratedMessage*) internalGetResult {
	return result;
}
- (CLSIncident_Builder*) clear {
	self.result = [[[CLSIncident alloc] init] autorelease];
	return self;
}
- (CLSIncident_Builder*) clone {
	return [CLSIncident builderWithPrototype:result];
}
- (CLSIncident*) defaultInstance {
	return [CLSIncident defaultInstance];
}
- (CLSIncident*) build {
	[self checkInitialized];
	return [self buildPartial];
}
- (CLSIncident*) buildPartial {
	CLSIncident* returnMe = [[result retain] autorelease];
	self.result = nil;
	return returnMe;
}
- (CLSIncident_Builder*) mergeFrom:(CLSIncident*) other {
	if (other == [CLSIncident defaultInstance]) {
		return self;
	}
	[self mergeUnknownFields:other.unknownFields];
	return self;
}
- (CLSIncident_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
	return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLSIncident_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
	PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
	while (YES) {
		int32_t tag = [input readTag];
		switch (tag) {
			case 0:
				[self setUnknownFields:[unknownFields build]];
				return self;
			default: {
				if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
					[self setUnknownFields:[unknownFields build]];
					return self;
				}
				break;
			}
		}
	}
}
@end

